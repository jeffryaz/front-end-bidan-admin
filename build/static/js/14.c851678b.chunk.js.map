{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/Administrator/MasterData/ListPoliPage.js","app/modules/Administrator/MasterData/RootAdministratorMasterData.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","url","className","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","Fragment","item","index","toString","data-toggle","aria-expanded","paddingRight","paddingLeft","Number","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","listPoliPagination","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","put","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","delete","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","palette","action","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","useHistory","dialog","setDialog","paramTable","setParamTable","statusDialog","setStatusDialog","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","poli","required","ruangan","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","setValues","setFieldTouched","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","getFieldProps","touched","errors","DialogActions","isValid","keys","constructor","TableRow","TableCell","window","moment","Date","updated_at","exact","from"],"mappings":"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","file":"static/js/14.c851678b.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poli${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listPoliPagination,\r\n  craetePoli,\r\n  getPoliById,\r\n  editPoliById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ROOM\",\r\n    name: \"ruangan\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListPoliPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/poli`,\r\n        title: intl.formatMessage({ id: \"LABEL.POLI\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.POLI\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    poli: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ruangan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        craetePoli(values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editPoliById(statusDialog, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listPoliPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    setStatusDialog(data.id);\r\n    getPoliById(data.id)\r\n      .then((result) => {\r\n        formik.setValues(result.data.data);\r\n        formik.setFieldTouched(\"poli\", true);\r\n        setDialog(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.POLI\" />\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"poli\")}\r\n                />\r\n                {formik.touched.poli && formik.errors.poli && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.poli}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.ROOM\" />\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"ruangan\")}\r\n                />\r\n                {formik.touched.ruangan && formik.errors.ruangan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ruangan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loadingSave\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={5}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.poli}</TableCell>\r\n                  <TableCell>{item?.ruangan}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListPoliPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPoliPage from \"./ListPoliPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorMasterData(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/master-data-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/master-data-page/poli\"\r\n        component={(props) => <ListPoliPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorMasterData));\r\n"],"sourceRoot":""}