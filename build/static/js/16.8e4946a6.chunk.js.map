{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/tableCustomV1/table.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","app/modules/HandlingPharmacist/ListProduct.js","app/modules/HandlingPharmacist/RootMedicinePharmacist.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","handleClose","data-toggle","aria-expanded","onClick","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","width","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","getMedicalRecord","medical_id","axios","get","listMedicinePagination","getMedicineById","createMedicine","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","getListPreOrder","getListStockName","SwitchBase","ref","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","disabled","icon","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","_useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","root","role","undefined","input","newChecked","padding","cursor","position","opacity","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","_props$edge","edge","thumb","edgeStart","edgeEnd","switchBase","track","display","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","marginLeft","marginRight","grey","transition","transitions","create","duration","shortest","common","black","white","sizeSmall","boxShadow","shadows","borderRadius","headerTable","headerTableMedicine","auth","useHistory","setLoading","loadingReq","setLoadingReq","setData","datas","setDatas","setDataSecond","setErr","dialogPackage","setDialogPackage","dialogMedicine","setDialogMedicine","barcode","nama","unit","harga","iscomposite","addPackage","setAddPackage","suhbeader","useSubheader","useSelector","clientMqtt","client","shallowEqual","dataChecked","setDataChecked","setState","paramTable","setParamTable","dialogAddItems","setDialogAddItems","useLayoutEffect","setBreadcrumbs","pathname","setTitle","requestApi","then","result","rows","catch","MODAL","showSnackbar","isEnabled","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","onSubmit","preventDefault","forEach","element","barang_id","sellingPrice","items","response","messages","DialogContent","qty","colSpan","allowNegative","floatValue","DialogActions","TableRow","TableCell","Checkbox","findIndex","idx","splice","autoComplete","itemcomposite","toUpperCase","composite_item","exact","from","to","path"],"mappings":"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","file":"static/js/16.8e4946a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\nexport function getListPreOrder() {\r\n  return axios.get(`/api/v1/getpreorder`);\r\n}\r\nexport function getListStockName() {\r\n  return axios.get(`/api/v1/stockitem`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  listMedicinePagination,\r\n  createMedicine,\r\n  editMedicine,\r\n  getMedicineById,\r\n  createItemMedicine,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n  Switch,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscomposite\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst headerTableMedicine = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n];\r\n\r\nfunction ListProduct(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingReq, setLoadingReq] = useState(false);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [datas, setDatas] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const [dialogPackage, setDialogPackage] = useState(false);\r\n  const [dialogMedicine, setDialogMedicine] = useState(false);\r\n  const [addPackage, setAddPackage] = useState({\r\n    barcode: \"\",\r\n    nama: \"\",\r\n    unit: \"\",\r\n    harga: 0,\r\n    iscomposite: false,\r\n  });\r\n  const suhbeader = useSubheader();\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const [state, setState] = useState(\"new\");\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [dialogAddItems, setDialogAddItems] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/medicine-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }));\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n        var data = Object.assign([], result.data.data);\r\n        data = data.filter((item) => item.iscomposite === 0);\r\n        setDatas(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const saveProduct = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = {\r\n      barcode: addPackage?.barcode,\r\n      nama: addPackage?.nama,\r\n      unit: addPackage?.unit,\r\n      harga: addPackage?.harga,\r\n      iscomposite: addPackage?.iscomposite,\r\n    };\r\n    if (addPackage?.iscomposite) {\r\n      dataChecked.forEach((element) => (element.barang_id = element.id));\r\n      data.itemcomposite = dataChecked;\r\n    }\r\n    if (state === \"new\") {\r\n      createMedicine(data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    } else {\r\n      editMedicine(state, data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    }\r\n  };\r\n\r\n  const callApiEdit = (id) => {\r\n    getMedicineById(id)\r\n      .then((result) => {\r\n        setAddPackage({\r\n          ...addPackage,\r\n          barcode: result.data.data.barcode,\r\n          nama: result.data.data.nama,\r\n          unit: result.data.data.unit,\r\n          harga: result.data.data.harga,\r\n          iscomposite: result.data.data.iscomposite === 0 ? false : true,\r\n        });\r\n        if (result.data.data.iscomposite === 1) {\r\n          setDataChecked(result.data.data.composite_item);\r\n        }\r\n        setState(id);\r\n        setDialogPackage(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiAddItems = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = Object.assign([], dataChecked);\r\n    data.forEach((element) => {\r\n      element.barang_id = element.id;\r\n      element.harga = element.sellingPrice;\r\n      delete element.id;\r\n      delete element.sellingPrice;\r\n    });\r\n    createItemMedicine({ items: data })\r\n      .then((result) => {\r\n        setDataChecked([]);\r\n        setLoadingReq(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        requestApi(paramTable);\r\n        setDialogAddItems(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingReq(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n\r\n  function isEnabledAdd() {\r\n    if (dataChecked.length == 0) return true;\r\n    var data = dataChecked.filter((item) => {\r\n      return (\r\n        item.qty === null ||\r\n        item.qty === undefined ||\r\n        item.sellingPrice === null ||\r\n        item.sellingPrice === undefined\r\n      );\r\n    });\r\n    return data.length === 0 ? false : true;\r\n  }\r\n  const handleFilter = (data) => {\r\n    setDatas(data);\r\n  };\r\n\r\n  const isEnabled =\r\n    addPackage.barcode.length > 0 &&\r\n    addPackage.nama.length > 0 &&\r\n    addPackage.unit.length > 0;\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogAddItems}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.ADD_ITEM\" />\r\n        </DialogTitle>\r\n        <form onSubmit={callApiAddItems}>\r\n          <DialogContent>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.QTY\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.SELLING_PRICE\" />\r\n                  </th>\r\n                  <th className=\"text-right\" style={{ maxWidth: 90 }}>\r\n                    <button\r\n                      className=\"btn btn-warning btn-sm\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setDialogMedicine(true);\r\n                        setDatas(dataSecond);\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"LABEL.ADD_ITEM\" />\r\n                    </button>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataChecked.map((item, index) => {\r\n                  return (\r\n                    <tr key={index.toString()}>\r\n                      <td>{item.nama}</td>\r\n                      <td>{item.unit}</td>\r\n                      <td>{rupiah(item.harga)}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          value={item.qty}\r\n                          onChange={(e) => {\r\n                            var data = Object.assign([], dataChecked);\r\n                            data[index].qty = e.target.value;\r\n                            setDataChecked(data);\r\n                          }}\r\n                          required={true}\r\n                          disabled={loadingReq}\r\n                        />\r\n                      </td>\r\n                      <td colSpan=\"2\">\r\n                        <NumberFormat\r\n                          id={\r\n                            loadingReq\r\n                              ? \"NumberFormat-text\"\r\n                              : \"NumberFormat-input\"\r\n                          }\r\n                          value={item.sellingPrice}\r\n                          displayType={loadingReq ? \"text\" : \"input\"}\r\n                          className=\"form-control\"\r\n                          allowEmptyFormatting={true}\r\n                          allowLeadingZeros={true}\r\n                          thousandSeparator={true}\r\n                          allowNegative={false}\r\n                          prefix={\"Rp \"}\r\n                          onValueChange={(e) => {\r\n                            var data = Object.assign([], dataChecked);\r\n                            data[index].sellingPrice = e.floatValue\r\n                              ? e.floatValue\r\n                              : 0;\r\n                            setDataChecked(data);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogAddItems(false);\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isEnabledAdd() || loadingReq}\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogMedicine}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <TableOnly\r\n            dataHeader={headerTableMedicine}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            hecto={8}\r\n          >\r\n            {datas.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setDialogMedicine(false);\r\n              setDatas(dataSecond);\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogPackage}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {state === \"new\" ? (\r\n            <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.EDIT_PRODUCT\" />\r\n          )}\r\n        </DialogTitle>\r\n\r\n        <form autoComplete=\"off\" onSubmit={saveProduct}>\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_CODE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.barcode}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, barcode: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.nama}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, nama: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.unit}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      unit: e.target.value.toUpperCase(),\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loadingReq ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={addPackage?.harga}\r\n                  displayType={loadingReq ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  thousandSeparator={true}\r\n                  allowNegative={false}\r\n                  prefix={\"Rp \"}\r\n                  onValueChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      harga: e.floatValue ? e.floatValue : 0,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PACKAGE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Switch\r\n                  checked={addPackage?.iscomposite}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      iscomposite: e.target.checked,\r\n                    });\r\n                  }}\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            {addPackage?.iscomposite && (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.QTY\" />\r\n                    </th>\r\n                    <th className=\"text-right\" style={{ maxWidth: 80 }}>\r\n                      <button\r\n                        className=\"btn btn-warning btn-sm\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setDialogMedicine(true);\r\n                          setDatas(dataSecond);\r\n                        }}\r\n                      >\r\n                        <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n                      </button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataChecked.map((item, index) => {\r\n                    return (\r\n                      <tr key={index.toString()}>\r\n                        <td>{item.nama}</td>\r\n                        <td>{item.unit}</td>\r\n                        <td colSpan=\"2\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={item.qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataChecked);\r\n                              data[index].qty = e.target.value;\r\n                              setDataChecked(data);\r\n                            }}\r\n                            required={true}\r\n                            disabled={loadingReq}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogPackage(false);\r\n                setAddPackage({\r\n                  barcode: \"\",\r\n                  nama: \"\",\r\n                  unit: \"\",\r\n                  harga: 0,\r\n                  iscomposite: false,\r\n                });\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !isEnabled ||\r\n                (addPackage.iscomposite === true && dataChecked.length == 0) ||\r\n                loadingReq\r\n              }\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setState(\"new\");\r\n                setDialogPackage(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-prescription-bottle mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PACKAGE\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setDialogAddItems(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-capsules mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                  <TableCell>\r\n                    {item.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => {\r\n                        callApiEdit(item.id);\r\n                      }}\r\n                    >\r\n                      <i className=\"far fa-edit mx-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.EDIT\" />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListProduct));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListProduct from \"./ListProduct\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootMedicinePharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/pharmacist/medicine-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/medicine-page/list\"\r\n        component={(props) => <ListProduct {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootMedicinePharmacist));\r\n"],"sourceRoot":""}