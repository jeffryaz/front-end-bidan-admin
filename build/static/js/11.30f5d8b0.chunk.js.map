{"version":3,"sources":["app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","app/modules/Patient/RootPatientByDoctor.js"],"names":["headerTable","title","name","order","active","status","filter","type","data_ops","label","icon","injectIntl","connect","props","intl","useState","loading","setLoading","data","count","setData","err","setErr","suhbeader","useSubheader","position","useSelector","state","auth","user","shallowEqual","useLayoutEffect","setBreadcrumbs","pathname","formatMessage","id","setTitle","handleAction","history","push","Fragment","dataHeader","handleParams","params","listPatientPagination","then","result","rows","catch","MODAL","showSnackbar","countData","hecto","map","item","index","key","toString","kode_pasien","nama","window","moment","Date","created_at","format","kota","no_telp","email","jk","ops","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","style","fontWeight","optionParameter","value","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginLeft","marginRight","width","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","prov","kec","kel","statusData","setStatusData","match","callApiDataPatient","getDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","pendidikan","pekerjaan","useEffect","length","listProvince","forEach","Number","listCity","id_kota","listDistricts","id_kec","listWard","id_kel","LinearProgress","className","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","target","autoComplete","onSubmit","e","preventDefault","newParams","FormData","Object","assign","trim","keys","element","append","updateDataPatient","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","placeholder","tempat_lahir","disabled","onChange","options","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","onClick","selectedKey","MedicalRecord","ref","_props$color","color","valueBuffer","_props$variant","theme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","transform","direction","concat","_transform","root","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","palette","backgroundPrimary","primary","main","backgroundSecondary","secondary","overflow","colorAdjust","colorPrimary","backgroundColor","colorSecondary","marginTop","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","exact","from","to","path","component"],"mappings":"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","file":"static/js/11.30f5d8b0.chunk.js","sourcesContent":["import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatientByDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/patient\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatientByDoctor));\r\n"],"sourceRoot":""}