{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","Fragment","item","index","toString","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","handleFilter","dataSecond","dataFilter","htmlFor","onChange","i","j","toLowerCase","push","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","palette","action","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","controlled","default","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","role","undefined","input","newChecked","cursor","position","opacity","height","top","left","zIndex","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","useSelector","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","createSvgIcon","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","text","colorPrimary","main","hoverOpacity","colorSecondary","optionParameter","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","setScreeningPatient","setMedicinePatient","mqttPublish","topic","publish","qos","payload","error","console","log","callApiSaveMedicalRecord","forEach","element","barang_id","screenitems","trim","treatment_kind","detail_resep","put","saveMedicalRecord","callApiSubmitMedicalRecord","submitMedicalRecord","isDisabled","classNamePrefix","updated_at","upd_user","initialQty","focus","select","splice","cancelMedicalRecord","MedicalRecord","statusName","TableRow","TableCell","kode_pasien","tgl_book","setErr","dataChecked","setDataChecked","listMedicinePagination","Checkbox","barcode","unit","exact","from"],"mappings":"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","file":"static/js/12.5dce7470.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          props.setScreeningPatient(\r\n            result.data.data.screen ? result.data.data.screen : []\r\n          );\r\n          setDataScreening(result.data.data.screen);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-sm-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {item.updated_at\r\n                              ? window\r\n                                  .moment(new Date(item.updated_at))\r\n                                  .format(\"DD MMM YYYY HH:mm:ss\")\r\n                              : \"\"}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc || \"\"}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.target.focus();\r\n                              e.target.select();\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={handlingFee}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          e.target.focus();\r\n                          e.target.select();\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id)\r\n              .then((result) => {\r\n                history.push(`/doctor/dashboard`);\r\n              })\r\n              .catch((err) => {\r\n                MODAL.showSnackbar(\r\n                  intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n                );\r\n              });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}