{"version":3,"sources":["app/components/currency.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["format","countryCode","currency","number","options","style","currencyDisplay","Intl","NumberFormat","rupiah","injectIntl","connect","auth","props","intl","history","useHistory","useState","setLoading","data","setData","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","dataMedicine","setDataMedicine","handlingFee","setHandlingFee","id","match","params","antrian_id","medicalRecordId","medicinePatient","useSelector","state","shallowEqual","client","clientMqtt","useLayoutEffect","setBreadcrumbs","pathname","title","formatMessage","setTitle","useEffect","medical_id","axios","get","then","result","form","screen","labs","catch","err","MODAL","showSnackbar","length","Promise","resolve","reject","i","getMedicineById","composite_item","qty","Fragment","className","code_reg","created_at","window","moment","Date","pasien","poli","to","map","item","index","key","toString","label_kind","updated_at","upd_user","datatype","type","join","value","val_desc","onChange","e","Object","assign","target","rows","disabled","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","nama","min","max","kind","harga","onClick","idx","findIndex","splice","setMedicinePatient","backgroundColor","colSpan","displayType","allowEmptyFormatting","allowLeadingZeros","thousandSeparator","prefix","onValueChange","floatValue","count","countSubTotal","width","topic","publish","qos","payload","error","console","log","mqttPublish","put","cancelMedicalRecord","push","patient_id","MedicalRecord","headerTable","loading","dataHeader","hecto","TableRow","TableCell","kode_pasien","tgl_book","status","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","SwitchBase","root","concat","capitalize","checked","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","action","hoverOpacity","colorSecondary","name","order","active","filter","setErr","dataChecked","setDataChecked","handleParams","listMedicinePagination","countData","padding","barcode","unit","exact","from","path","component"],"mappings":"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","file":"static/js/13.e4752551.chunk.js","sourcesContent":["const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  const callApiGetMedicine = () => {\r\n    if (medicinePatient && medicinePatient.length > 0) {\r\n      var data = medicinePatient;\r\n      var waiting = new Promise((resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          getMedicineById(data[i].id)\r\n            .then((result) => {\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = 1;\r\n              if (i === data.length - 1) resolve();\r\n            })\r\n            .catch((err) => {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            });\r\n        }\r\n      });\r\n      waiting.then(() => setDataMedicine(data));\r\n    }\r\n  };\r\n\r\n  useEffect(callApiGetMedicine, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {window\r\n                              .moment(new Date(item.updated_at))\r\n                              .format(\"DD MMM YYYY HH:mm:ss\")}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            min={1}\r\n                            max={item.kind}\r\n                            value={item.qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              data[index].qty = e.target.value;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={0}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        // value={formik.values?.no_kk}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        // format=\"################\"\r\n                        // mask=\"_\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue);\r\n                        }}\r\n                        // onBlur={() => {\r\n                        //   formik.setFieldTouched(\"no_kk\", true);\r\n                        // }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id).catch((err) => {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n            });\r\n            props.setMedicinePatient([]);\r\n            history.push(`/doctor/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n        >\r\n          <i className=\"fas fa-save d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n        >\r\n          <i className=\"fas fa-check d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly dataHeader={headerTable} loading={loading} hecto={10}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.code_reg}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    {item.status === \"1\" ? (\r\n                      <FormattedMessage id=\"LABEL.BOOKING\" />\r\n                    ) : item.status === \"2\" ? (\r\n                      <FormattedMessage id=\"LABEL.CANCELED\" />\r\n                    ) : item.status === \"3\" ? (\r\n                      <FormattedMessage id=\"LABEL.CHECKIN_SCREENING\" />\r\n                    ) : item.status === \"4\" ? (\r\n                      <FormattedMessage id=\"LABEL.POLI_PROCESS\" />\r\n                    ) : item.status === \"5\" ? (\r\n                      <FormattedMessage id=\"LABEL.PHARMACIST\" />\r\n                    ) : item.status === \"6\" ? (\r\n                      <FormattedMessage id=\"LABEL.PAYMENT\" />\r\n                    ) : (\r\n                      <FormattedMessage id=\"LABEL.FINISH\" />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly dataHeader={headerTable} loading={loading} hecto={10}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.code_reg}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    {item.status === \"1\" ? (\r\n                      <FormattedMessage id=\"LABEL.BOOKING\" />\r\n                    ) : item.status === \"2\" ? (\r\n                      <FormattedMessage id=\"LABEL.CANCELED\" />\r\n                    ) : item.status === \"3\" ? (\r\n                      <FormattedMessage id=\"LABEL.CHECKIN_SCREENING\" />\r\n                    ) : item.status === \"4\" ? (\r\n                      <FormattedMessage id=\"LABEL.POLI_PROCESS\" />\r\n                    ) : item.status === \"5\" ? (\r\n                      <FormattedMessage id=\"LABEL.PHARMACIST\" />\r\n                    ) : item.status === \"6\" ? (\r\n                      <FormattedMessage id=\"LABEL.PAYMENT\" />\r\n                    ) : (\r\n                      <FormattedMessage id=\"LABEL.FINISH\" />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DRUG_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.MEDICINE_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT\",\r\n    name: \"kind\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.kind}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}