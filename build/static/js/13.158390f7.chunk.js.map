{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/tableOnly.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","item","dataFilter","Fragment","htmlFor","placeholder","formatMessage","onChange","e","i","length","j","name","toString","toLowerCase","target","value","push","component","Paper","index","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","SwitchBase","ref","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","_useControlled","controlled","default","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","root","role","undefined","input","newChecked","cursor","position","opacity","height","top","left","zIndex","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","useSelector","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","palette","text","secondary","colorPrimary","main","action","hoverOpacity","colorSecondary","optionParameter","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","setScreeningPatient","setMedicinePatient","mqttPublish","topic","publish","qos","payload","error","console","log","callApiSaveMedicalRecord","forEach","element","barang_id","screenitems","trim","treatment_kind","detail_resep","put","saveMedicalRecord","callApiSubmitMedicalRecord","submitMedicalRecord","isDisabled","classNamePrefix","updated_at","upd_user","initialQty","focus","select","splice","cancelMedicalRecord","MedicalRecord","statusName","TableRow","TableCell","kode_pasien","tgl_book","setErr","dataChecked","setDataChecked","listMedicinePagination","Checkbox","barcode","unit","exact","from","path"],"mappings":"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","file":"static/js/13.158390f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          anchorEl\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          props.setScreeningPatient(\r\n            result.data.data.screen ? result.data.data.screen : []\r\n          );\r\n          setDataScreening(result.data.data.screen);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-sm-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {item.updated_at\r\n                              ? window\r\n                                  .moment(new Date(item.updated_at))\r\n                                  .format(\"DD MMM YYYY HH:mm:ss\")\r\n                              : \"\"}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc || \"\"}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.target.focus();\r\n                              e.target.select();\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={handlingFee}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          e.target.focus();\r\n                          e.target.select();\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id).catch((err) => {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n            });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n            history.push(`/doctor/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}