{"version":3,"sources":["app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["headerTable","title","name","order","active","status","filter","type","data_ops","label","icon","injectIntl","connect","props","intl","useState","loading","setLoading","data","count","setData","err","setErr","suhbeader","useSubheader","position","useSelector","state","auth","user","shallowEqual","useLayoutEffect","setBreadcrumbs","pathname","formatMessage","id","setTitle","handleAction","history","push","Fragment","dataHeader","handleParams","params","listPatientPagination","then","result","rows","catch","MODAL","showSnackbar","countData","hecto","map","item","index","key","toString","kode_pasien","nama","window","moment","Date","created_at","format","kota","no_telp","email","jk","ops","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","style","fontWeight","optionParameter","value","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginLeft","marginRight","width","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","prov","kec","kel","statusData","setStatusData","match","callApiDataPatient","getDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","pendidikan","pekerjaan","useEffect","length","listProvince","forEach","Number","listCity","id_kota","listDistricts","id_kec","listWard","id_kel","LinearProgress","className","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","target","autoComplete","onSubmit","e","preventDefault","newParams","FormData","Object","assign","trim","keys","element","append","updateDataPatient","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","placeholder","tempat_lahir","disabled","onChange","options","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","onClick","selectedKey","MedicalRecord","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","min","formik","useFormik","initialValues","validationSchema","values","a","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","Dialog","open","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","dataSecondAddress","dataReq","reg_rule","add_user","RegisDataPatientOffline","response","messages","handleSaveRegis","exact","from","to","path","component","DetailMedicalRecord","PatientPage","ListPatientPage"],"mappings":"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","file":"static/js/9.4720a5d5.chunk.js","sourcesContent":["import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"kel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}