{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/currency.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","app/modules/HandlingPharmacist/DetailPharmacist.js","app/modules/HandlingPharmacist/RootHandlingPharmacist.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","format","countryCode","currency","number","options","style","currencyDisplay","Intl","NumberFormat","rupiah","getMedicalRecord","medical_id","axios","get","listMedicinePagination","params","getMedicineById","id","createMedicine","data","post","editMedicine","put","saveApotek","createItemMedicine","injectIntl","connect","auth","props","intl","history","useHistory","useState","setLoading","loadingSave","loadingSubmit","setLoadingSubmit","setData","setLab","suhbeader","useSubheader","setDataScreening","dataMedicine","setDataMedicine","readyOrder","setReadyOrder","resep_id","match","dataMedicinePatient","a","length","waiting","i","result","composite_item","qty","MODAL","showSnackbar","formatMessage","useSelector","state","medicinePatient","shallowEqual","clientMqtt","client","useLayoutEffect","setBreadcrumbs","pathname","title","setTitle","useEffect","form","screen","labs","callApiGetMedicine","resep","catch","Fragment","className","code_reg","created_at","window","moment","Date","pasien","poli","map","item","index","toString","nama","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","e","Object","assign","idx","findIndex","floatValue","harga","type","width","height","onChange","target","checked","push","splice","disabled","backgroundColor","onClick","otherArray","filter","current","other","forEach","element","barang_id","preorder","callApiSubmitMedicalRecord","exact","from","to","path","component"],"mappings":"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","file":"static/js/17.71db793f.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveApotek,\r\n  getMedicalRecord,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nfunction DetailPharmacist(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [readyOrder, setReadyOrder] = useState([]);\r\n  const id = props.match.params.id;\r\n  const resep_id = props.match.params.resep_id;\r\n  const medical_id = props.match.params.medical_id;\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/handling-page/process/${medical_id}/${resep_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medical_id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   async function callApiGetMedicine() {\r\n  //     if (medicinePatient && medicinePatient.length > 0) {\r\n  //       var data = medicinePatient;\r\n  //       var waiting = new Promise(async (resolve, reject) => {\r\n  //         for (let i = 0; i < data.length; i++) {\r\n  //           try {\r\n  //             var result = await getMedicineById(data[i].id);\r\n  //             data[i].composite_item = result.data.data.composite_item;\r\n  //             data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //             if (i === data.length - 1) resolve();\r\n  //           } catch (error) {\r\n  //             MODAL.showSnackbar(\r\n  //               intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //             );\r\n  //             if (i === data.length - 1) resolve();\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       await waiting;\r\n  //       setDataMedicine(data);\r\n  //     }\r\n  //   }\r\n  //   callApiGetMedicine();\r\n  // }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    var data = dataMedicine.filter(comparerData(readyOrder));\r\n    data.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      resep_id,\r\n      preorder: data,\r\n    };\r\n    saveApotek(data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        history.push(`/pharmacist/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar></CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.AVAILABLE\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], readyOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setReadyOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            history.push(`/pharmacist/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailPharmacist));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailPharmacist from \"./DetailPharmacist\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingPharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/pharmacist/handling-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/process/:medical_id/:resep_id\"\r\n        component={(props) => <DetailPharmacist {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingPharmacist));\r\n"],"sourceRoot":""}