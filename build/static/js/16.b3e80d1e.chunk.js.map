{"version":3,"sources":["app/components/currency.js","app/modules/HandlingPharmacist/DetailPharmacist.js","app/modules/HandlingPharmacist/RootHandlingPharmacist.js"],"names":["format","countryCode","currency","number","options","style","currencyDisplay","Intl","NumberFormat","rupiah","injectIntl","connect","auth","props","intl","useHistory","useState","loadingSave","loadingSubmit","data","suhbeader","useSubheader","dataMedicine","setDataMedicine","match","params","id","antrian_id","medicalRecordId","useSelector","state","medicinePatient","shallowEqual","clientMqtt","client","value","label","useLayoutEffect","setBreadcrumbs","pathname","title","formatMessage","setTitle","Fragment","className","code_reg","created_at","window","moment","Date","pasien","poli","map","item","index","key","toString","nama","qty","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","e","Object","assign","idx","findIndex","floatValue","harga","onClick","splice","setMedicinePatient","composite_item","backgroundColor","type","onChange","disabled","width","exact","from","to","path","component"],"mappings":"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","file":"static/js/16.b3e80d1e.chunk.js","sourcesContent":["const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailPharmacist(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/handling-page/process`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  // const callApiGetMedical = () => {\r\n  //   setLoading(true);\r\n  //   getMedicalRecord(medicalRecordId)\r\n  //     .then((result) => {\r\n  //       setLoading(false);\r\n  //       setData(result.data.data.form[0]);\r\n  //       setDataScreening(result.data.data.screen);\r\n  //       setLab(result.data.data.labs ? result.data.data.labs : {});\r\n  //       if (\r\n  //         (medicinePatient && medicinePatient.length === 0) ||\r\n  //         !medicinePatient\r\n  //       ) {\r\n  //         // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n  //         props.setMedicinePatient(\r\n  //           result.data.data.resep ? result.data.data.resep : []\r\n  //         );\r\n  //         callApiGetMedicine(\r\n  //           result.data.data.resep ? result.data.data.resep : []\r\n  //         );\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       setLoading(false);\r\n  //       MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(callApiGetMedical, []);\r\n\r\n  // async function callApiGetMedicine(dataMedicinePatient) {\r\n  //   if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n  //     var data = dataMedicinePatient;\r\n  //     var waiting = new Promise(async (resolve, reject) => {\r\n  //       for (let i = 0; i < data.length; i++) {\r\n  //         try {\r\n  //           var result = await getMedicineById(data[i].id);\r\n  //           data[i].composite_item = result.data.data.composite_item;\r\n  //           data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //           if (i === data.length - 1) resolve();\r\n  //         } catch (error) {\r\n  //           MODAL.showSnackbar(\r\n  //             intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //           );\r\n  //           if (i === data.length - 1) resolve();\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //     await waiting;\r\n  //     setDataMedicine(data);\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   async function callApiGetMedicine() {\r\n  //     if (medicinePatient && medicinePatient.length > 0) {\r\n  //       var data = medicinePatient;\r\n  //       var waiting = new Promise(async (resolve, reject) => {\r\n  //         for (let i = 0; i < data.length; i++) {\r\n  //           try {\r\n  //             var result = await getMedicineById(data[i].id);\r\n  //             data[i].composite_item = result.data.data.composite_item;\r\n  //             data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //             if (i === data.length - 1) resolve();\r\n  //           } catch (error) {\r\n  //             MODAL.showSnackbar(\r\n  //               intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //             );\r\n  //             if (i === data.length - 1) resolve();\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       await waiting;\r\n  //       setDataMedicine(data);\r\n  //     }\r\n  //   }\r\n  //   callApiGetMedicine();\r\n  // }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              {/* <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/pharmacist/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar> */}\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            // mqttPublish();\r\n            // cancelMedicalRecord(data.id).catch((err) => {\r\n            //   MODAL.showSnackbar(\r\n            //     intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            //   );\r\n            // });\r\n            // props.setMedicinePatient([]);\r\n            // history.push(`/pharmacist/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            // callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailPharmacist));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailPharmacist from \"./DetailPharmacist\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingPharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/pharmacist/handling-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/process\"\r\n        component={(props) => <DetailPharmacist {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingPharmacist));\r\n"],"sourceRoot":""}