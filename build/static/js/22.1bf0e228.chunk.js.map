{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/components/dualListbox/dualListBoxs.js","app/modules/Administrator/ScreeningSetting/ListScreeningSetting.js","app/modules/Administrator/ScreeningSetting/RootScreeningSetting.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","Fragment","item","index","toString","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","put","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","option","useStyles","makeStyles","dualListboxPadding","select","handleSelected","selected","setSelected","classes","allowDuplicates","canFilter","filterPlaceholder","simpleValue","onChange","selection","showHeaderLabels","icons","moveLeft","moveAllLeft","moveRight","moveAllRight","moveDown","moveUp","moveTop","moveBottom","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","optionParameterPoli","setOptionParameterPoli","selectedParameterPoli","setSelectedParameterPoli","dialog","setDialog","paramTable","setParamTable","statusDialog","setStatusDialog","dialogMedical","setDialogMedical","optionPoli","setOptionPoli","selectPoli","setSelectPoli","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","poli_id","required","kind_nm","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","then","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","statusIndex","findIndex","setFieldValue","setFieldTouched","selectPoli_","forEach","element","nama","push","poli","optionPoli_","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","minHeight","isDisabled","classNamePrefix","touched","errors","getFieldProps","DialogActions","isValid","keys","constructor","formkind_id","medkind_id","dokter_only","items","TableRow","TableCell","window","updated_at","path","exact"],"mappings":"iSAcMA,EAAgBC,aAAW,SAACC,GAAD,MAAY,CAC3CC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,SAAU,WACVC,UAAW,cAJON,CAMlBO,KAEW,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,IAGC,IAFDC,aAEC,MAFO,KAEP,MADDC,eACC,MADS,GACT,EACD,EAAgCC,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GACrB,SAASI,EAAYC,GACnBJ,EAAYI,EAAMC,eAEpB,SAASC,IACPN,EAAY,MAEd,IAAMO,EAAeV,IAAMW,aACzB,SAACC,EAAMjB,GACuB,oBAAjBC,GAA6BA,EAAagB,EAAMjB,GAC3Dc,MAEF,CAACb,EAAca,IAGbI,EAAWhB,EAEf,OACE,6BACGC,EACC,kBAACb,EAAD,CACE6B,MAAO,kBAAC,IAAD,CAAkBC,GAAIjB,IAC7BkB,UAAU,UAEV,kBAAC,IAAD,CACEC,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASd,GAET,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CACEW,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASd,EACTe,MAAO,CACLC,OAAQ,WACRC,QAAS,IAGX,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CACER,GAAG,YACHb,SAAUA,EACVsB,aAAW,EACXpB,KAAMA,EACNqB,QAAShB,EACTiB,WAAY,CACVL,MAAO,CACLM,MAAO,IACPC,YAAa,MAIhBf,EACEgB,QAAO,SAACC,GAAD,OAAS/B,EAAQgC,SAASD,EAAGlB,SACpCoB,KAAI,SAACF,EAAIf,GACI,IAAD,IAAX,OAAIe,EAAGG,GAEH,kBAAC,IAAD,CAAMC,IAAKnB,EAAIkB,GAAE,UAAEH,EAAGG,UAAL,aAAE,EAAOE,IAAKd,MAAK,UAAES,EAAGG,UAAL,aAAE,EAAOZ,OAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGe,UAAWN,EAAGO,QAEnB,kBAAC,IAAD,CACEC,QAAS,kBAAC,IAAD,CAAkBvB,GAAIe,EAAGhC,YAOxC,kBAAC,IAAD,CACEoC,IAAKnB,EACLK,QAAS,kBAAMV,EAAaoB,EAAGlB,KAAMjB,IACrC4C,SAAUT,EAAGS,UAEb,kBAAC,IAAD,KACE,uBAAGH,UAAWN,EAAGO,QAEnB,kBAAC,IAAD,CAAcC,QAAS,kBAAC,IAAD,CAAkBvB,GAAIe,EAAGhC,kB,iOCvFrD0C,G,QAAS,SAACC,GAAD,OAVP,SAACC,EAAaC,EAAUF,GACrC,IAAMG,EAAU,CACdD,WACAtB,MAAO,WACPwB,gBAAiB,UAGnB,OAAO,IAAIC,KAAKC,aAAaL,EAAaE,GAASI,OAAOP,GAG1BO,CAAO,QAAS,MAAOP,KAyb1CQ,gBAAWC,YAAQ,KAAM,KAAdA,EAvbX,SAACC,GACd,IACEC,EAQED,EARFC,KADF,EASID,EAPFE,kBAFF,MAEe,GAFf,EAGEC,EAMEH,EANFG,aAHF,EASIH,EALFI,eAJF,WASIJ,EAJFK,WALF,SAMEC,EAGEN,EAHFM,SANF,EASIN,EAFFO,iBAPF,MAOc,EAPd,IASIP,EADFQ,aARF,MAQU,EARV,EAUA,EAAsC3D,IAAMC,SAAS,CACnD2D,YAAa,EACbC,KAAM,EACNC,MAAOJ,EACPK,YAAa,KAJf,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,EAAgCjE,IAAMC,SAAS,CAC7CiE,KACEb,EAAWxB,QACT,SAACsC,GAAD,OAAkC,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UACtDC,OAAS,EACPlB,EACGxB,QACC,SAACsC,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UAC7C,GACDJ,KAAKM,QAAQ,MAAO,IACvB,GACNJ,QACEf,EAAWxB,QACT,SAACsC,GAAD,OAAkC,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UACtDC,OAAS,IACPlB,EAAWxB,QACT,SAACsC,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UAC7C,GAAGF,MAAMC,OAEjBzD,KACEyC,EAAWxB,QACT,SAACsC,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SACW,IAAvBF,EAAMC,MAAME,QACS,OAArBH,EAAMC,MAAMxD,QACd2D,OAAS,EACPlB,EAAWxB,QACT,SAACsC,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SACW,IAAvBF,EAAMC,MAAME,QACS,OAArBH,EAAMC,MAAMxD,QACd,GAAGwD,MAAMxD,KACX,OAlCR,mBAAO6D,EAAP,KAAiBC,EAAjB,KAoCA,EAAsC1E,IAAMC,SAAS,IAArD,mBAAO0E,EAAP,KAAoBC,EAApB,KACA,EAAoC5E,IAAMC,SAAS,CAAE4B,OAAQ,GAAIgD,KAAM,KAAvE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgC/E,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAqBM6E,EAAoBhF,IAAMW,aAC9B,SAACsE,EAAmBC,GAClB,IAdqBvF,EAcjBwF,EAAaC,OAAOC,OAAO,GAAIrB,GAC/BsB,EAAcR,EAClBQ,EAAYzD,OAvBU,SAAClC,GACzB,IAAI4F,EAAM,GACV,IAAK,IAAIC,KAAK7F,EACRA,EAAK6F,KAAID,GAAO,UAAYC,EAAI,KAAO7F,EAAK6F,GAAK,KAEvD,OAAOD,EAkBgBE,CACnBR,GAAwCN,GAE1CW,EAAYT,KAlBP,WADgBlF,EAoBnBuF,GAAoCT,GAnBtBP,KAAX,YACS,OAAdvE,EAAKiB,KACDjB,EAAKiB,KACH,MACA,OACFjB,EAAKyE,MACL,MACA,QAcJe,EAAWtB,KAAOsB,EAAWtB,KAAO,EACpCyB,EAAcF,OAAOC,OAAO,GAAIC,EAAaH,GAC7CJ,EAAc,eAAKO,IACnB,IAAII,EACFJ,EAAYzD,OACZ,QACAyD,EAAYzB,KACZ,gBACAyB,EAAYvB,YACZ,SACAuB,EAAYT,KACc,oBAAjBvB,GAA6BA,EAAaoC,KAEvD,CAACf,EAAaF,EAAUK,EAAY1B,EAAMY,IAwE5ChE,IAAM2F,UAAUX,EAAmB,IACnChF,IAAM2F,WAAU,WACd1B,EAAe,2BAAKD,GAAN,IAAmBF,MAAOJ,GAAa,OACpD,CAACA,IAEJ,IAIMjD,EAAc,WAClBN,EAAY,OAGd,OACE,kBAAC,IAAMyF,SAAP,KACE,6BACE,0BAAM7E,GAAG,kBAAkBqB,UAAU,2BACnC,0BAAMA,UAAU,wBACd,kBAAC,IAAD,CAAkBrB,GAAG,wBAEvB,yBAAKqB,UAAU,WACb,yBAAKA,UAAU,IACZiB,EACExB,QAAO,SAACsC,GAAD,OAAmC,IAAxBA,EAAMtC,OAAOyC,UAC/BtC,KAAI,SAAC6D,EAAMC,GACV,OACE,yBACE5D,IAAK4D,EAAMC,WACX3D,UAAU,+BACViC,OAAO,SACPtD,GAAI+E,GAEJ,yBACE1D,UAAU,aACVrB,GAAI,cAAgB+E,EACpB1E,QAAS,WA7B7BjB,EA8BkC2F,KAGd,8BACE,kBAAC,IAAD,CAAkB/E,GAAI8E,EAAK/E,QAD7B,KAGA,4BAAQO,MAAO,CAAE2E,aAAc,EAAGC,YAAa,IAC7C,0BACE7D,UAAU,eACVrB,GAAI,eAAiB+E,GAEC,aAArBD,EAAKhE,OAAOjB,MACb+D,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,KACjChC,EACE0D,OACEvB,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,OAGpB,UAArBqB,EAAKhE,OAAOjB,MACZ+D,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,KADrC,cAGEG,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,MAElB,SAArBqB,EAAKhE,OAAOjB,MACZ+D,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,KADrC,UAEG2B,IACD,IAAIC,KACFzB,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,OAEvCxB,OAAO,gBACT2B,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,OAG5CG,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,KAAO,KAC3C,0BAAMnD,MAAO,CAAEgF,MAAO,YACpB,kBAAC,IAAD,CAAkBtF,GAAG,gBAI3B,kBAAC,IAAD,CACEb,SAAUoG,SAASC,eAAT,qBACMrG,GAAsB,IAEtCsB,aAAa,EACbpB,KAAM0F,IAAU5F,EAChBuB,QAAShB,EACTiB,WAAY,CACVL,MAAO,CACLmF,UAAW,sCAIf,yBAAKpE,UAAU,QACb,yBAAKA,UAAU,cACS,aAArByD,EAAKhE,OAAOjB,KACX,kBAAC,IAAD,CACEuD,MACEQ,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,MACrC,GAEFiC,YAAY,QACZrE,UAAU,eACV8B,KAAM2B,EAAK3B,KAAKM,QAAQ,MAAO,IAC/BzD,GAAI8E,EAAK3B,KAAKM,QAAQ,MAAO,IAC7BkC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAsB,EACtBC,mBAAmB,EACnBC,OAAQ,MACRC,cAAe,SAACC,OAEK,UAArBnB,EAAKhE,OAAOjB,KACd,kBAAC,IAAD,CACEuD,MACEQ,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,MACrC,GAEFiC,YAAY,QACZrE,UAAU,eACV8B,KAAM2B,EAAK3B,KAAKM,QAAQ,MAAO,IAC/BzD,GAAI8E,EAAK3B,KAAKM,QAAQ,MAAO,IAC7BxB,OAAO,oBACPiE,KAAK,IACLL,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACC,OAGlB,2BACEpG,KAAMiF,EAAKhE,OAAOjB,KAClBwB,UAAU,eACV8E,IAAI,IACJhD,KAAM2B,EAAK3B,KAAKM,QAAQ,MAAO,IAC/BzD,GAAI8E,EAAK3B,KAAKM,QAAQ,MAAO,IAC7B2C,aACExC,EAAYkB,EAAK3B,KAAKM,QAAQ,MAAO,MACrC,GAEF4C,YAAahE,EAAKiE,cAAc,CAC9BtG,GAAI,cAENM,MAAO,CAAEM,MAAO,QAItB,yBAAKS,UAAU,UACb,4BACExB,KAAK,SACLwB,UAAU,yCACVhB,QAAS,YA7KX,SAACkG,EAAU1G,GACnC,IAAI2G,EAAe5C,EACnB4C,EAAaD,GAAYhB,SAASC,eAAee,GAAUnD,MAC9C,aAATvD,EACF2G,EAAaD,GAAYC,EAAaD,GACnC9C,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,KACD,UAAT5D,IACT2G,EAAaD,GAAYC,EAAaD,GAAU9C,QAAQ,YAAa,KAEvEI,EAAe,eAAK2C,IACpBvC,IAmK4BwC,CACE3B,EAAK3B,KAAKM,QAAQ,MAAO,IACzBqB,EAAKhE,OAAOjB,MAEdH,MAGF,kBAAC,IAAD,CAAkBM,GAAG,kBAEvB,4BACEH,KAAK,SACLwB,UAAU,+CACVhB,QAAS,YA5KZ,SAACkG,GACxB,IAAIC,EAAe5C,EACnB4C,EAAaD,GAAY,GACzBhB,SAASC,eAAee,GAAUnD,MAAQ,GAC1CS,EAAe,eAAK2C,IACpBvC,IAwK4ByC,CAAiB5B,EAAK3B,KAAKM,QAAQ,MAAO,KAC1C/D,MAGF,uBAAG2B,UAAU,mCACb,0BAAMA,UAAU,QACd,kBAAC,IAAD,CAAkBrB,GAAG,sCASvC,4BACEH,KAAK,SACLwB,UAAU,uDACVhB,QAAS,WAtLrBwD,EAAe,IACf0B,SAASC,eAAe,mBAAmBmB,QAC3C1C,EAAkB,MAwLN,kBAAC,IAAD,CAAkBjE,GAAG,iCAK7B,6BACE,kBAAC,IAAD,CAAgB4G,UAAWC,KACzB,kBAAC,IAAD,CAAOxF,UAAW,SAAWuB,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGN,EAAWrB,KAAI,SAAC6D,EAAMC,GACrB,OACE,kBAAC,IAAD,CACE1D,UAAS,qCACH,OAAJyD,QAAI,IAAJA,OAAA,EAAAA,EAAMgC,IAAN,OAAWhC,QAAX,IAAWA,OAAX,EAAWA,EAAMgC,GAAK,IAExB3F,IAAK4D,EAAMC,YAEVF,EAAKzB,MAAME,OACV,kBAAC,IAAD,CACEA,OACEG,EAASP,OAAS2B,EAAK3B,KAAKM,QAAQ,MAAO,IAE7CsD,UACoB,OAAlBrD,EAAS7D,KACL6D,EAAS7D,KACP,MACA,OACF6D,EAASL,MACT,MACA,OAENhD,QAAS,YAlQT,SAACyE,GACzB,IAAIkC,EAAYtD,EACZoB,EAAK3B,KAAKM,QAAQ,MAAO,MAAQuD,EAAU7D,KAC1B,OAAnB6D,EAAUnH,KACLmH,EAAUnH,MAAQmH,EAAUnH,KAC5BmH,EAAU3D,OAAS2D,EAAU3D,OAElC2D,EAAU7D,KAAO2B,EAAK3B,KAAKM,QAAQ,MAAO,IAC1CuD,EAAU3D,OAAQ,EAClB2D,EAAUnH,KAAO,MAEnB8D,EAAY,eACPqD,IAEL/C,IAqP0BgD,CAAkBnC,KAGpB,8BACE,kBAAC,IAAD,CAAkB9E,GAAI8E,EAAK/E,UAI/B,8BACE,kBAAC,IAAD,CAAkBC,GAAI8E,EAAK/E,eAQzC,kBAAC,IAAD,KAAY2C,IAGd,yBAAKrB,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZmB,GACC,8BACE,uBAAGnB,UAAU,2CACb,kBAAC,IAAD,CAAkBrB,GAAG,8BAGxByC,GACC,0BAAMpB,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBrB,GAAG,6BAOjC,kBAAC,IAAD,CACEkH,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACpDN,UAAU,MACV7D,MAAOE,EAAYF,MACnBC,YAAaC,EAAYD,YACzBF,KAAMG,EAAYH,KAClBqE,aAxUe,SAAC3H,EAAO4H,GAC/B,IAAIhD,EAAanB,EACjBmB,EAAWvB,YACTuE,EAAUhD,EAAWtB,KACjBsB,EAAWvB,YAAcuB,EAAWpB,YACpCoB,EAAWvB,YAAcuB,EAAWpB,YAC1CoB,EAAWtB,KAAOsE,EAClBlE,EAAe,eACVkB,IAELH,KA+TQoD,oBA5TsB,SAAC7H,GAC/B,IAAI4E,EAAanB,EACjBmB,EAAWtB,KAAO,EAClBsB,EAAWpB,YAAcsE,SAAS9H,EAAM+H,OAAOnE,MAAO,IACtDgB,EAAWvB,YAAc,EACzBK,EAAe,eACVkB,IAELH,e,kCC1JJ,+vCAEO,SAASuD,EAAqB7C,GACnC,OAAO8C,IAAMC,IAAN,wBAA2B/C,EAAS,IAAMA,EAAS,KAErD,SAASgD,EAAa3H,GAC3B,OAAOyH,IAAMG,OAAN,yBAA+B5H,IAEjC,SAAS6H,EAAmBlD,GACjC,OAAO8C,IAAMC,IAAN,sBAAyB/C,EAAS,IAAMA,EAAS,KAEnD,SAASmD,IACd,OAAOL,IAAMC,IAAN,gBAEF,SAASK,EAAanJ,GAC3B,OAAO6I,IAAMO,KAAN,iBAA6BpJ,GAE/B,SAASqJ,EAAWrJ,GACzB,OAAO6I,IAAMO,KAAN,eAA2BpJ,GAE7B,SAASsJ,EAAclI,GAC5B,OAAOyH,IAAMC,IAAN,yBAA4B1H,IAE9B,SAASmI,EAAYnI,GAC1B,OAAOyH,IAAMC,IAAN,uBAA0B1H,IAE5B,SAASoI,EAAepI,EAAIpB,GACjC,OAAO6I,IAAMO,KAAN,yBAA6BhI,GAAMpB,GAErC,SAASyJ,EAAarI,EAAIpB,GAC/B,OAAO6I,IAAMa,IAAN,uBAA0BtI,GAAMpB,GAElC,SAAS2J,EAAsB5D,GACpC,OAAO8C,IAAMC,IAAN,yBAA4B/C,EAAS,IAAMA,EAAS,KAEtD,SAAS6D,EAAc5J,GAC5B,OAAO6I,IAAMO,KAAN,kBAA8BpJ,GAEhC,SAAS6J,EAAYzI,EAAIpB,GAC9B,OAAO6I,IAAMO,KAAN,0BAA8BhI,GAAMpB,GAEtC,SAAS8J,EAAe1I,GAC7B,OAAOyH,IAAMC,IAAN,0BAA6B1H,IAE/B,SAAS2I,EAAkB3I,GAChC,OAAOyH,IAAMG,OAAN,0BAAgC5H,IAElC,SAAS4I,EAAYjE,GAC1B,OAAO8C,IAAMC,IAAN,yBAA4B/C,EAAS,IAAMA,EAAS,KAEtD,SAASkE,EAAe7I,GAC7B,OAAOyH,IAAMC,IAAN,0BAA6B1H,IAE/B,SAAS8I,EAAclK,GAC5B,OAAO6I,IAAMO,KAAN,kBAA8BpJ,GAEhC,SAASmK,EAAY/I,EAAIpB,GAC9B,OAAO6I,IAAMa,IAAN,0BAA6BtI,GAAMpB,GAErC,SAASoK,EAAgBrE,GAC9B,OAAO8C,IAAMC,IAAN,oCAAuC/C,EAAS,IAAMA,EAAS,KAEjE,SAASsE,IACd,OAAOxB,IAAMC,IAAN,oBAEF,SAASwB,EAAgBlJ,GAC9B,OAAOyH,IAAMa,IAAN,2BAA8BtI,IAEhC,SAASmJ,EAAenJ,GAC7B,OAAOyH,IAAMC,IAAN,2BAA8B1H,IAEhC,SAASoJ,IACd,OAAO3B,IAAMC,IAAN,uBAEF,SAAS2B,EAAkBrJ,GAChC,OAAOyH,IAAMG,OAAN,8BAAoC5H,IAEtC,SAASsJ,EAAkB1K,GAChC,OAAO6I,IAAMO,KAAN,sBAAkCpJ,GAEpC,SAAS2K,EAA+B5E,GAC7C,OAAO8C,IAAMC,IAAN,0BAA6B/C,EAAS,IAAMA,EAAS,KAEvD,SAAS6E,EAAuB5K,GACrC,OAAO6I,IAAMO,KAAN,mBAA+BpJ,GAEjC,SAAS6K,EAAqBzJ,EAAIpB,GACvC,OAAO6I,IAAMa,IAAN,2BAA8BtI,GAAMpB,GAEtC,SAAS8K,EAAwB1J,GACtC,OAAOyH,IAAMC,IAAN,6BAAgC1H,IAElC,SAAS2J,EAAkB/K,GAChC,OAAO6I,IAAMO,KAAN,sBAAkCpJ,GAEpC,SAASgL,EAAmB5J,GACjC,OAAOyH,IAAMC,IAAN,8BAAiC1H,IAEnC,SAAS6J,EAAsB7J,GACpC,OAAOyH,IAAMG,OAAN,8BAAoC5H,IAKtC,SAAS8J,EAAoBnF,GAClC,OAAO8C,IAAMC,IAAN,uBAA0B/C,EAAS,IAAMA,EAAS,KAEpD,SAASoF,EAAY/J,EAAIpB,GAC9B,OAAO6I,IAAMO,KAAN,wBAA4BhI,GAAMpB,GAEpC,SAASoL,EAAYhK,GAC1B,OAAOyH,IAAMa,IAAN,4BAA+BtI,IAEjC,SAASiK,EAAcjK,GAC5B,OAAOyH,IAAMa,IAAN,4BAA+BtI,M,+WC1GlCkK,G,QAAS,CACb,CAAE9G,MAAO,WAAYrE,MAAO,YAC5B,CAAEqE,MAAO,WAAYrE,MAAO,cAGxBoL,EAAYC,aAAW,SAAChM,GAAD,MAAY,CACvCiM,mBAAoB,CAClB7J,QAAS,YAwDE0B,cAAWC,YAAQ,KAAM,KAAdA,EApDL,SAACC,GACpB,IACEC,EAKED,EALFC,KADF,EAMID,EAJFZ,gBAFF,WAMIY,EAHFP,eAHF,MAGYqI,EAHZ,IAMI9H,EAFFkI,cAJF,MAIW,GAJX,EAKEC,EACEnI,EADFmI,eAEF,EAAgCtL,IAAMC,SAASoL,GAA/C,mBAAOE,EAAP,KAAiBC,EAAjB,KACMC,EAAUP,IAEhB,OACE,kBAAC,IAAMtF,SAAP,KACE,kBAACgC,EAAA,EAAD,CAAOxF,UAAWqJ,EAAQL,oBACxB,kBAAC,IAAD,CACEM,iBAAiB,EACjBC,WAAS,EACTC,kBAAmBxI,EAAKiE,cAAc,CACpCtG,GAAI,iBAEN8K,aAAa,EACbtJ,SAAUA,EACVK,QAASA,EACT2I,SAAUA,EACVO,SAAU,SAACP,EAAUQ,GACW,oBAAnBT,GACTA,EAAeC,EAAUQ,GAC3BP,EAAYD,IAEdS,kBAAkB,EAClBC,MAAO,CACLC,SAAU,0BAAM9J,UAAU,uBAC1B+J,YAAa,CACX,0BAAMjK,IAAK,EAAGE,UAAU,uBACxB,0BAAMF,IAAK,EAAGE,UAAU,wBAE1BgK,UAAW,0BAAMhK,UAAU,wBAC3BiK,aAAc,CACZ,0BAAMnK,IAAK,EAAGE,UAAU,wBACxB,0BAAMF,IAAK,EAAGE,UAAU,yBAE1BkK,SAAU,0BAAMlK,UAAU,uBAC1BmK,OAAQ,0BAAMnK,UAAU,qBACxBoK,QAAS,0BAAMpK,UAAU,0BACzBqK,WAAY,0BAAMrK,UAAU,qCCtBlCsK,EAAc,CAClB,CACE5L,MAAO,uBACPoD,KAAM,UACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,EACRzD,MAAM,GAERiB,OAAQ,CACNyC,QAAQ,EACR1D,KAAM,SAGV,CACEE,MAAO,0BACPoD,KAAM,OACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEVxC,OAAQ,CACNyC,QAAQ,EACR1D,KAAM,SAGV,CACEE,MAAO,qBACPoD,KAAM,aACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEVxC,OAAQ,CACNyC,QAAQ,EACR1D,KAAM,SAGV,CACEE,MAAO,4BACPoD,KAAM,SACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEVxC,OAAQ,CACNyC,QAAQ,EACR1D,KAAM,UAKN+L,EAAW,CACf,CACE7M,MAAO,aACPuC,KAAM,wCACNzB,KAAM,QAER,CACEd,MAAO,uBACPuC,KAAM,2BACNzB,KAAM,QAIJgM,EAAgB,GAsZP3J,kBAAWC,YAAQ,KAAM2J,IAAd3J,EApZ1B,SAA8BC,GAC5B,IAAQC,EAASD,EAATC,KACF0J,EAAYC,cAClB,EAA8B9M,oBAAS,GAAvC,mBAAOsD,EAAP,KAAgByJ,EAAhB,KACA,EAAwB/M,mBAAS,CAC/BN,KAAM,GACNmE,MAAO,IAFT,mBAAOnE,EAAP,KAAasN,EAAb,KAIA,EAAsBhN,oBAAS,GAA/B,mBAAOuD,EAAP,KAAY0J,EAAZ,KACA,EAAsCjN,oBAAS,GAA/C,mBAAOkN,EAAP,KAAoBC,EAApB,KACA,EAAsDnN,mBAAS,IAA/D,mBAAOoN,EAAP,KAA4BC,EAA5B,KACA,EAA0DrN,mBAAS,IAAnE,mBAAOsN,EAAP,KAA8BC,EAA9B,KACA,EAA4BvN,oBAAS,GAArC,oBAAOwN,GAAP,MAAeC,GAAf,MACA,GAAoCzN,mBAAS,IAA7C,qBAAO0N,GAAP,MAAmBC,GAAnB,MACA,GAAwC3N,mBAAS,MAAjD,qBAAO4N,GAAP,MAAqBC,GAArB,MACA,GAA0C7N,oBAAS,GAAnD,qBAAO8N,GAAP,MAAsBC,GAAtB,MACA,GAAoC/N,mBAAS,IAA7C,qBAAOgO,GAAP,MAAmBC,GAAnB,MACA,GAAoCjO,mBAAS,IAA7C,qBAAOkO,GAAP,MAAmBC,GAAnB,MAEAC,2BAAgB,WACdvB,EAAUwB,eAAe,CACvB,CACEC,SAAS,2BACTzN,MAAOsC,EAAKiE,cAAc,CAAEtG,GAAI,oBAElC,CACEwN,SAAS,mCACTzN,MAAOsC,EAAKiE,cAAc,CAAEtG,GAAI,+BAGpC+L,EAAU0B,SAASpL,EAAKiE,cAAc,CAAEtG,GAAI,+BAC3C,IAEH,IAAM0N,GAASC,MAAaC,MAAM,CAChCC,QAASF,MAAaG,SACpBzL,EAAKiE,cAAc,CACjBtG,GAAI,qCAGR+N,QAASJ,MAAaG,SACpBzL,EAAKiE,cAAc,CACjBtG,GAAI,uCAKJgO,GAASC,YAAU,CACvBpC,gBACAqC,iBAAkBR,GAClBS,SAAS,WAAD,4BAAE,WAAOC,EAAP,YAAAC,EAAA,wDAAiBC,UAAjB,EAA4BC,cACpClC,GAAe,GACVS,GAkBHrD,YAAqBqD,GAAcsB,GAChCI,MAAK,SAACC,GACLC,GAAW9B,IACXoB,GAAOW,YACPC,IAAMC,aACJxM,EAAKiE,cAAc,CAAEtG,GAAI,8BACzB,UACA,KAEF2M,IAAU,GACVN,GAAe,MAEhByC,OAAM,SAACrM,GAAS,IAAD,EACdsM,QAAQC,IAAIvM,GACZ4J,GAAe,GACfuC,IAAMC,aAAN,UAAmBpM,EAAIwM,gBAAvB,aAAmB,EAAcrQ,KAAKsQ,aAhC1C1F,YAAuB4E,GACpBI,MAAK,SAACC,GACLC,GAAW9B,IACXoB,GAAOW,YACPC,IAAMC,aACJxM,EAAKiE,cAAc,CAAEtG,GAAI,8BACzB,UACA,KAEF2M,IAAU,GACVN,GAAe,MAEhByC,OAAM,SAACrM,GAAS,IAAD,EACd4J,GAAe,GACfuC,IAAMC,aAAN,UAAmBpM,EAAIwM,gBAAvB,aAAmB,EAAcrQ,KAAKsQ,aAjBpC,2CAAF,qDAAC,KAyCLR,GAAa,SAAC/J,GAClBsH,GAAW,GACXC,EAAQ,2BACHtN,GADE,IAELmE,MAAO,EACPnE,KAAM,MAERuN,GAAO,GACPU,GAAclI,GACd4E,YAA+B5E,GAC5B6J,MAAK,SAACC,GACLxC,GAAW,GACXC,EAAQ,2BACHtN,GADE,IAELmE,MAAO,EACPnE,KAAM6P,EAAO7P,KAAKA,WAGrBkQ,OAAM,SAACrM,GACN0J,GAAO,GACPF,GAAW,GACX2C,IAAMC,aAAaxM,EAAKiE,cAAc,CAAEtG,GAAI,4BA/Gf,SAmHpBnB,GAnHoB,mFAmHnC,WAA4BgB,EAAMjB,GAAlC,eAAAyP,EAAA,yDACe,SAATxO,EADN,gBAEIkN,GAAgBnO,EAAKoB,IACrB0J,YAAwB9K,EAAKoB,IAC1BwO,MAAK,SAACC,GACL,IAAIU,EAAc7C,EAAoB8C,WACpC,SAACtK,GAAD,OAAUA,EAAK1B,QAAUqL,EAAO7P,KAAKA,KAAKiP,WAE5CpB,EAAyBH,EAAoB6C,IAC7CnB,GAAOqB,cAAc,UAAWZ,EAAO7P,KAAKA,KAAKiP,SACjDG,GAAOqB,cAAc,UAAWZ,EAAO7P,KAAKA,KAAKmP,SACjDC,GAAOsB,gBAAP,2BAA4BtB,IAA5B,IAAoCH,SAAS,KAC7ClB,IAAU,MAEXmC,OAAM,SAACrM,GACNmM,IAAMC,aAAaxM,EAAKiE,cAAc,CAAEtG,GAAI,2BAfpD,0BAiBsB,QAATH,EAjBb,wBAkBIkN,GAAgBnO,EAAKoB,IAlBzB,SAoBUuP,EAAc,GApBxB,UAqB2C3F,YAAmBhL,EAAKoB,IArBnE,eAsB+BpB,KAAKA,KAAK4Q,SAAQ,SAACC,GAC1C,IAAI3K,EAAO,CACT1B,MAAOqM,EAAQzP,GACfjB,MAAO0Q,EAAQC,KACf3P,MAAO0P,EAAQC,MAEjBH,EAAYI,KAAK7K,MAEnBuI,GAAckC,GACdtC,IAAiB,GA/BvB,kDAiCM2B,IAAMC,aAAaxM,EAAKiE,cAAc,CAAEtG,GAAI,wBAjClD,2DAnHmC,sBA4NnC,OApDA4E,qBAfwB,WACtBkD,cACG0G,MAAK,SAACC,GACL,IAAI7P,EAAO6P,EAAO7P,KAAKA,KACvBA,EAAK4Q,SAAQ,SAACC,GACZA,EAAQrM,MAAQqM,EAAQzP,GACxByP,EAAQ1Q,MAAQ0Q,EAAQG,QAE1BrD,EAAuB3N,MAExBkQ,OAAM,SAACrM,GACNmM,IAAMC,aAAaxM,EAAKiE,cAAc,CAAEtG,GAAI,6BAIvB,IAqB3B4E,qBAnB2B,WACzBwE,cACGoF,MAAK,SAACC,GACL,IAAIoB,EAAc,GAClBpB,EAAO7P,KAAKA,KAAK4Q,SAAQ,SAACC,GACxB,IAAI3K,EAAO,CACT1B,MAAOqM,EAAQzP,GACfjB,MAAO0Q,EAAQC,KACf3P,MAAO0P,EAAQC,MAEjBG,EAAYF,KAAK7K,MAEnBqI,GAAc0C,MAEff,OAAM,SAACrM,GACNmM,IAAMC,aAAaxM,EAAKiE,cAAc,CAAEtG,GAAI,6BAIpB,IAgC5B,kBAAC,IAAM6E,SAAP,KACE,kBAACiL,EAAA,EAAD,CACEzQ,KAAMqN,GACNqD,SAAS,KACTC,WAAW,EACXC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,KACGrD,GACC,kBAAC,IAAD,CAAkB9M,GAAG,eAErB,kBAAC,IAAD,CAAkBA,GAAG,eAGzB,0BACEqB,UAAU,OACV+O,aAAa,MACbjC,SAAUH,GAAOqC,cAEjB,kBAACC,EAAA,EAAD,KACE,yBAAKhQ,MAAO,CAAEiQ,UAAW,UACvB,yBAAKlP,UAAU,kBACb,2BAAOA,UAAU,2BACf,kBAAC,IAAD,CAAkBrB,GAAG,6BAEvB,yBAAKqB,UAAU,YACb,kBAAC,IAAD,CACE+B,MAAOoJ,EACP3K,QAASyK,EACTkE,WAAYpE,EACZ/K,UAAU,kCACVoP,gBAAgB,eAChB1F,SAAU,SAAC3H,GACTqJ,EAAyBrJ,GACzB4K,GAAOqB,cAAc,UAAWjM,EAAMA,UAGzC4K,GAAO0C,QAAQ7C,SAAWG,GAAO2C,OAAO9C,SACvC,0BAAMxM,UAAU,yBACb2M,GAAO2C,OAAO9C,WAKvB,yBAAKxM,UAAU,kBACb,2BAAOA,UAAU,2BACf,kBAAC,IAAD,CAAkBrB,GAAG,0BAEvB,yBAAKqB,UAAU,YACb,yCACExB,KAAK,OACLwB,UAAU,eACVG,SAAU4K,EACV0B,UAAQ,GACJE,GAAO4C,cAAc,aAE1B5C,GAAO0C,QAAQ3C,SAAWC,GAAO2C,OAAO5C,SACvC,0BAAM1M,UAAU,yBACb2M,GAAO2C,OAAO5C,aAO3B,kBAAC8C,EAAA,EAAD,KACE,4BACEhR,KAAK,SACLwB,UAAU,kBACVG,UACGwM,GAAO8C,SACgC,IAAvCzM,OAAO0M,KAAK/C,GAAO0C,SAASlN,QAC3BwK,GAAO0C,QAAQM,cAAgB3M,QACjC+H,GAGDA,EACC,uBAAG/K,UAAU,iCAEb,uBAAGA,UAAU,qBAEd+K,EACC,kBAAC,IAAD,CAAkBpM,GAAG,kBAErB,kBAAC,IAAD,CAAkBA,GAAG,gBAGzB,4BACEH,KAAK,SACLwB,UAAU,iBACVhB,QAAS,WACPsM,IAAU,GACVqB,GAAOW,aAETnN,SAAU4K,GAEV,uBAAG/K,UAAU,sBACb,kBAAC,IAAD,CAAkBrB,GAAG,qBAM7B,kBAAC8P,EAAA,EAAD,CACEzQ,KAAM2N,GACN+C,SAAS,KACTC,WAAW,EACXC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,aACA,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CACEzO,QAASqL,GACT5C,OAAQ8C,GACR7C,eAlJc,SAACC,EAAUQ,GACjC+D,QAAQC,IAAI,yBAA0BhE,EAAWA,GAC7CA,GAAaA,EAAUxH,OAAS,GAClCwH,EAAUwE,SAAQ,SAACC,GACjB,IAAI3K,EAAO,CACTmM,YAAanE,GACboE,WAAYzB,EAAQrM,MACpB+N,YAAa,IAKK,IAHH3G,EAAS4E,WACxB,SAACgC,GAAD,OAAWA,EAAMhO,QAAUqM,EAAQrM,SAGnCuG,YAAkB7E,GAAMgK,OAAM,SAACrM,GAC7BmM,IAAMC,aACJxM,EAAKiE,cAAc,CAAEtG,GAAI,2BAI7B6J,YAAsB4F,EAAQrM,OAAO0L,OAAM,SAACrM,GAC1CmM,IAAMC,aACJxM,EAAKiE,cAAc,CAAEtG,GAAI,kCAgI/B,kBAAC6Q,EAAA,EAAD,KACE,4BACEhR,KAAK,SACLwB,UAAU,kBACVhB,QAAS,WACP4M,IAAiB,KAGnB,kBAAC,IAAD,CAAkBjN,GAAG,gBAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYD,MAAM,IAChB,kBAAC,IAAD,KACE,4BACEF,KAAK,SACLwB,UAAU,kBACVhB,QAAS,WACP0M,GAAgB,MAChBJ,IAAU,KAGZ,uBAAGtL,UAAU,uBACb,kBAAC,IAAD,CAAkBrB,GAAG,iBAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEsC,WAAYqJ,EACZpJ,aAAcmM,GACdlM,QAASA,EACTC,IAAKA,EACLE,UAAW/D,EAAKmE,MAChBH,MAAO,GAENhE,EAAKA,KAAKqC,KAAI,SAAC6D,EAAMC,GACpB,OACE,kBAACsM,EAAA,EAAD,CAAUlQ,IAAK4D,EAAMC,YACnB,kBAACsM,EAAA,EAAD,YAAYxM,QAAZ,IAAYA,OAAZ,EAAYA,EAAMiJ,SAClB,kBAACuD,EAAA,EAAD,YAAYxM,QAAZ,IAAYA,OAAZ,EAAYA,EAAM8K,KAAKA,MACvB,kBAAC0B,EAAA,EAAD,KACGC,OACEnM,OAAO,IAAIC,KAAJ,OAASP,QAAT,IAASA,OAAT,EAASA,EAAM0M,aACtBvP,OAAO,gBAEZ,kBAACqP,EAAA,EAAD,KACE,kBAAC3S,EAAA,EAAD,CACEC,KAAMkG,EACNjG,aAAcA,GACdC,IAAK8M,iBC7dZ1J,sBAAWC,YAAQ,KAAM,KAAdA,EAhB1B,SAA8BC,GAC5B,OACE,kBAAC,IAAD,KAME,kBAAC,IAAD,CACEqP,KAAK,mCACL7K,UAAW,SAACxE,GAAD,OAAW,kBAAC,EAAyBA,IAChDsP,OAAK","file":"static/js/22.1bf0e228.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poli${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./styles.scss\";\r\n\r\nconst option = [\r\n  { value: \"contoh_1\", label: \"Option 1\" },\r\n  { value: \"contoh_2\", label: \"Option 2\" },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dualListboxPadding: {\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n\r\nconst DualListBoxs = (props) => {\r\n  const {\r\n    intl,\r\n    disabled = false,\r\n    options = option,\r\n    select = [],\r\n    handleSelected,\r\n  } = props;\r\n  const [selected, setSelected] = React.useState(select);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.dualListboxPadding}>\r\n        <DualListBox\r\n          allowDuplicates={false}\r\n          canFilter\r\n          filterPlaceholder={intl.formatMessage({\r\n            id: \"LABEL.SEARCH\",\r\n          })}\r\n          simpleValue={false}\r\n          disabled={disabled}\r\n          options={options}\r\n          selected={selected}\r\n          onChange={(selected, selection) => {\r\n            if (typeof handleSelected === \"function\")\r\n              handleSelected(selected, selection);\r\n            setSelected(selected);\r\n          }}\r\n          showHeaderLabels={true}\r\n          icons={{\r\n            moveLeft: <span className=\"fa fa-chevron-left\" />,\r\n            moveAllLeft: [\r\n              <span key={0} className=\"fa fa-chevron-left\" />,\r\n              <span key={1} className=\"fa fa-chevron-left\" />,\r\n            ],\r\n            moveRight: <span className=\"fa fa-chevron-right\" />,\r\n            moveAllRight: [\r\n              <span key={0} className=\"fa fa-chevron-right\" />,\r\n              <span key={1} className=\"fa fa-chevron-right\" />,\r\n            ],\r\n            moveDown: <span className=\"fa fa-chevron-down\" />,\r\n            moveUp: <span className=\"fa fa-chevron-up\" />,\r\n            moveTop: <span className=\"fa fa-double-angle-up\" />,\r\n            moveBottom: <span className=\"fa fa-double-angle-down\" />,\r\n          }}\r\n        />\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(DualListBoxs));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  ListScreeningSettingPagination,\r\n  craeteScreeningSetting,\r\n  listAllPoli,\r\n  editScreeningSetting,\r\n  getScreeningSettingById,\r\n  createMedicalForm,\r\n  getMedicalFormById,\r\n  deleteMedicalFormById,\r\n  ListMedKindPagination,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\nimport DualListBoxs from \"../../../components/dualListbox/dualListBoxs\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TYPE_SCREENING\",\r\n    name: \"kind_nm\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.SCREENING_SECTION\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.EDIT\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n  {\r\n    label: \"LABEL.SCREENING_FORM\",\r\n    icon: \"fas fa-bong text-primary\",\r\n    type: \"add\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListScreeningSetting(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [optionParameterPoli, setOptionParameterPoli] = useState([]);\r\n  const [selectedParameterPoli, setSelectedParameterPoli] = useState({});\r\n  const [dialog, setDialog] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n  const [dialogMedical, setDialogMedical] = useState(false);\r\n  const [optionPoli, setOptionPoli] = useState([]);\r\n  const [selectPoli, setSelectPoli] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/screening-setting`,\r\n        title: intl.formatMessage({ id: \"LABEL.SCREENING_SETTING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.SCREENING_SETTING\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    poli_id: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kind_nm: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        craeteScreeningSetting(values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editScreeningSetting(statusDialog, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    ListScreeningSettingPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  async function handleAction(type, data) {\r\n    if (type === \"open\") {\r\n      setStatusDialog(data.id);\r\n      getScreeningSettingById(data.id)\r\n        .then((result) => {\r\n          var statusIndex = optionParameterPoli.findIndex(\r\n            (item) => item.value === result.data.data.poli_id\r\n          );\r\n          setSelectedParameterPoli(optionParameterPoli[statusIndex]);\r\n          formik.setFieldValue(\"poli_id\", result.data.data.poli_id);\r\n          formik.setFieldValue(\"kind_nm\", result.data.data.kind_nm);\r\n          formik.setFieldTouched({ ...formik, poli_id: true });\r\n          setDialog(true);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (type === \"add\") {\r\n      setStatusDialog(data.id);\r\n      try {\r\n        var selectPoli_ = [];\r\n        var resultGetMedicalFormById = await getMedicalFormById(data.id);\r\n        resultGetMedicalFormById.data.data.forEach((element) => {\r\n          var item = {\r\n            value: element.id,\r\n            label: element.nama,\r\n            title: element.nama,\r\n          };\r\n          selectPoli_.push(item);\r\n        });\r\n        setSelectPoli(selectPoli_);\r\n        setDialogMedical(true);\r\n      } catch (error) {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      }\r\n    }\r\n  }\r\n\r\n  const callApiListPoli = () => {\r\n    listAllPoli()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.poli;\r\n        });\r\n        setOptionParameterPoli(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListPoli, []);\r\n\r\n  const callApiListMedKind = () => {\r\n    ListMedKindPagination()\r\n      .then((result) => {\r\n        var optionPoli_ = [];\r\n        result.data.data.forEach((element) => {\r\n          var item = {\r\n            value: element.id,\r\n            label: element.nama,\r\n            title: element.nama,\r\n          };\r\n          optionPoli_.push(item);\r\n        });\r\n        setOptionPoli(optionPoli_);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedKind, []);\r\n\r\n  const saveMedicalForm = (selected, selection) => {\r\n    console.log(\"selection && selection\", selection, selection);\r\n    if (selection && selection.length > 0) {\r\n      selection.forEach((element) => {\r\n        var item = {\r\n          formkind_id: statusDialog,\r\n          medkind_id: element.value,\r\n          dokter_only: 1,\r\n        };\r\n        var checkIndex = selected.findIndex(\r\n          (items) => items.value === element.value\r\n        );\r\n        if (checkIndex !== -1) {\r\n          createMedicalForm(item).catch((err) => {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n        } else {\r\n          deleteMedicalFormById(element.value).catch((err) => {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div style={{ minHeight: \"20rem\" }}>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-5 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.SCREENING_SECTION\" />\r\n                </label>\r\n                <div className=\"col-sm-7\">\r\n                  <Select\r\n                    value={selectedParameterPoli}\r\n                    options={optionParameterPoli}\r\n                    isDisabled={loadingSave}\r\n                    className=\"form-control border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameterPoli(value);\r\n                      formik.setFieldValue(\"poli_id\", value.value);\r\n                    }}\r\n                  />\r\n                  {formik.touched.poli_id && formik.errors.poli_id && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.poli_id}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-5 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.TYPE_SCREENING\" />\r\n                </label>\r\n                <div className=\"col-sm-7\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    disabled={loadingSave}\r\n                    required\r\n                    {...formik.getFieldProps(\"kind_nm\")}\r\n                  />\r\n                  {formik.touched.kind_nm && formik.errors.kind_nm && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.kind_nm}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loadingSave\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={dialogMedical}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>list</DialogTitle>\r\n        <DialogContent>\r\n          <DualListBoxs\r\n            options={optionPoli}\r\n            select={selectPoli}\r\n            handleSelected={saveMedicalForm}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={() => {\r\n              setDialogMedical(false);\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={5}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.kind_nm}</TableCell>\r\n                  <TableCell>{item?.poli.poli}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListScreeningSetting));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListScreeningSetting from \"./ListScreeningSetting\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootScreeningSetting(props) {\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect\r\n        exact\r\n        from=\"/administrator/doctor-page\"\r\n        to=\"/administrator/dashboard\"\r\n      /> */}\r\n      <Route\r\n        path=\"/administrator/screening-setting\"\r\n        component={(props) => <ListScreeningSetting {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootScreeningSetting));\r\n"],"sourceRoot":""}