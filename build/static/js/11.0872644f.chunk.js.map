{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","Fragment","item","index","toString","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","handleFilter","dataSecond","dataFilter","htmlFor","onChange","i","j","toLowerCase","push","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","setErr","kode_pasien","kota","no_telp","email","jk","user_id","active_user","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","id_kota","id_kec","id_kel","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","preventDefault","newParams","FormData","trim","keys","element","append","tempat_lahir","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","formik","useFormik","initialValues","validationSchema","values","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","console","log","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","handleSaveRegis","exact","from","path","DetailMedicalRecord","PatientPage","ListPatientPage"],"mappings":"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","file":"static/js/11.0872644f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"phone\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"email\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_TYPE\",\r\n    name: \"user_id\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"status\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={15}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>{item?.user_id ? \"Online\" : \"Offine\"}</TableCell>\r\n                  <TableCell>\r\n                    <span\r\n                      className={\r\n                        item.active_user === 1 ? \"text-primary\" : \"text-danger\"\r\n                      }\r\n                    >\r\n                      {item.active_user === 1 ? \"Active\" : \"Non Active\"}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string(),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched({ ...formik, nama: true });\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, no_kk: true });\r\n                  }}\r\n                />\r\n                {/* {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )} */}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, ktpno: true });\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, no_telp: true });\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched({ ...formik, alamat: true });\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, kel: true });\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched({ ...formik, partner: true });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, partner_tel: true });\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    if (dataReq.email)\r\n      dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        console.log(\"status\", status);\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}