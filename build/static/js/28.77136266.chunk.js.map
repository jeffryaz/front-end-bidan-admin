{"version":3,"sources":["app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/modules/Administrator/Report/ListDailyInComePage.js","app/modules/Administrator/Report/RootAdministratorReport.js"],"names":["rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","type","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","handleClose","Fragment","id","className","map","item","index","key","toString","onClick","title","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","width","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","activePoli","put","inactivePoli","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","editMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","createTakaran","editTakaran","deleteTakaran","getTakaran","getFormformat","createFolder","deleteFolders","createInput","deleteInput","headerTable","auth","suhbeader","useSubheader","setLoading","setData","setErr","useHistory","useLayoutEffect","setBreadcrumbs","pathname","setTitle","then","result","catch","MODAL","showSnackbar","TableRow","TableCell","window","days","total","feeamt","grand_total","visit_qty","exact","from","to","path"],"mappings":"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","file":"static/js/28.77136266.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poliall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function activePoli(id) {\r\n  return axios.put(`/api/v1/poli/enable/${id}`);\r\n}\r\nexport function inactivePoli(id) {\r\n  return axios.put(`/api/v1/poli/disable/${id}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function editMedicalKind(id, data) {\r\n  return axios.put(`/api/v1/medicalkind/${id}`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\nexport function createTakaran(data) {\r\n  return axios.post(`/api/v1/takaran`, data);\r\n}\r\nexport function editTakaran(id, data) {\r\n  return axios.put(`/api/v1/takaran/${id}`, data);\r\n}\r\nexport function deleteTakaran(id) {\r\n  return axios.delete(`/api/v1/takaran/${id}`);\r\n}\r\nexport function getTakaran() {\r\n  return axios.get(`/api/v1/takaran`);\r\n}\r\nexport function getFormformat(id) {\r\n  return axios.get(`/api/v1/formformat/get/${id}`);\r\n}\r\nexport function createFolder(data) {\r\n  return axios.post(`/api/v1/formformat/folder`, data);\r\n}\r\nexport function deleteFolders(id) {\r\n  return axios.delete(`/api/v1/formformat/folder/${id}`);\r\n}\r\nexport function createInput(data) {\r\n  return axios.post(`/api/v1/formformat/input`, data);\r\n}\r\nexport function deleteInput(id) {\r\n  return axios.delete(`/api/v1/formformat/input/${id}`);\r\n}\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { listDailyInCome } from \"../_redux/CrudAdministrator\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\n// import ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { rupiah } from \"../../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.EARNING_DATE\",\r\n    name: \"days\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_SALE\",\r\n    name: \"total\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.HANDLING_FEE\",\r\n    name: \"feeamt\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GRAND_TOTAL\",\r\n    name: \"grand_total\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.VISIT_TOTAL\",\r\n    name: \"visit_qty\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  // {\r\n  //   title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  //   name: \"action\",\r\n  //   order: {\r\n  //     active: false,\r\n  //     status: false,\r\n  //   },\r\n  //   filter: {\r\n  //     active: false,\r\n  //     type: \"true\",\r\n  //   },\r\n  // },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n  {\r\n    label: \"LABEL.DELETE\",\r\n    icon: \"fas fa-trash-alt text-danger\",\r\n    type: \"delete\",\r\n  },\r\n];\r\n\r\nfunction ListDailyInComePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/report-page/daily-income`,\r\n        title: intl.formatMessage({ id: \"LABEL.DAILY_INCOME\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DAILY_INCOME\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listDailyInCome(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  // const handleAction = (type, data) => {};\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {window.moment(new Date(item?.days)).format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{rupiah(item.total)}</TableCell>\r\n                  <TableCell>{rupiah(item.feeamt)}</TableCell>\r\n                  <TableCell>{rupiah(item.grand_total)}</TableCell>\r\n                  <TableCell>\r\n                    {item.visit_qty} <FormattedMessage id=\"LABEL.VISIT\" />\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell> */}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDailyInComePage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListDailyInComePage from \"./ListDailyInComePage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorReport(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/report-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/report-page/daily-income\"\r\n        component={(props) => <ListDailyInComePage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorReport));\r\n"],"sourceRoot":""}