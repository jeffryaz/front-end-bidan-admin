{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","app/modules/Screening/_redux/CrudScreening.js","app/modules/Screening/ListScreeningPage.js","app/modules/Screening/ScreeningPatientPage.js","app/modules/Screening/RootScreening.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","td","key","title","Tablelvl2Context","TableContext","TableContainer","ref","classes","_props$component","Component","other","root","width","overflowX","Table","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","table","Provider","role","theme","display","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","tablelvl2","variant","TableHead","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","backgroundColor","action","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","borderBottom","divider","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","default","TableBody","updateLabsById","medical_id","axios","put","regisLabs","post","headerTable","setLoading","setData","setDataSecond","dataTemp","setDataTemp","initialValues","setInitialValues","loadingRegis","setLoadingRegis","dialogLab","setDialogLab","dialogTypeScreening","setDialogTypeScreening","dataTypeScreening","setDataTypeScreening","dataTypeScreening_","setDataTypeScreening_","suhbeader","useSubheader","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","hb","required","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","lab_id","then","result","callApiListNotCome","resetForm","MODAL","showSnackbar","catch","get","forEach","element","statusName","status","useEffect","callApiLabs","setValues","response","messages","callApiTypeScreening","poli_id","Dialog","open","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","to","pasien_id","kind_nm","DialogActions","onClick","autoComplete","handleSubmit","kode_pasien","disabled","nama","poli","getFieldProps","tgl_book","useStyles","makeStyles","heading","heading_new","flexBasis","flexShrink","secondaryHeading","details","alignItems","column","ListItem","onChangesValue","subtitle","idx","input","adx","medkind","datatype","val_desc","trim","dokter_only","rows","unit","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Divider","dataCheckIn","setDataCheckIn","dataScreeningLoading","setDataScreeningLoading","dataScreeningErr","patient_id","match","params","reservasi_id","client","useSelector","clientMqtt","shallowEqual","dataCustom","setDataCustom","dataLoopSave","loopSaveScreening","Promise","res","rej","array","medkind_id","medform_id","formkind_id","mqttPublish","topic","publish","qos","payload","topicCallDoctor","callDoctor","qosCallDoctor","payloadCallDoctor","error","console","log","indexList","indexInput","listIndex","split","data_","cloneDeep","history","goBack","preventDefault","setTimeout","regisScreeningData","screenitems","window","moment","Date","format","exact","from","path"],"mappings":"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","file":"static/js/17.2c30beee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className={`bg-primary text-uppercase ${\r\n                        item?.td ? item?.td : \"\"\r\n                      }`}\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends(_extends({}, theme.typography.body2), {}, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends(_extends({}, theme.typography.body2), {}, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import axios from \"axios\";\r\n\r\nexport function listReservationOffline() {\r\n  return axios.get(`/api/v1/reservasioff`);\r\n}\r\nexport function listReservationOnline() {\r\n  return axios.get(`/api/v1/reservasion`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function getPatientById(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function regisReservation(data) {\r\n  return axios.post(`/api/v1/reservasioff`, data);\r\n}\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listReservationPagination(params) {\r\n  return axios.get(`/api/v1/reservasiall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function cancelReservation(id, data) {\r\n  return axios.put(`/api/v1/cancelreservasi/${id}`, data);\r\n}\r\nexport function getScreeningData(id) {\r\n  return axios.get(`/api/v1/screeningform/${id}`);\r\n}\r\nexport function regisScreeningData(data) {\r\n  return axios.post(`/api/v1/submitscreen`, data);\r\n}\r\nexport function listNotYetCome() {\r\n  return axios.get(`/api/v1/reservasiuncoming`);\r\n}\r\nexport function listScreening() {\r\n  return axios.get(`/api/v1/reservasitoday`);\r\n}\r\nexport function getReservationById(id) {\r\n  return axios.get(`/api/v1/reservation/${id}`);\r\n}\r\nexport function getLabsById(medical_id) {\r\n  return axios.get(`/api/v1/labs/${medical_id}`);\r\n}\r\nexport function updateLabsById(medical_id, data) {\r\n  return axios.put(`/api/v1/labs/${medical_id}`, data);\r\n}\r\nexport function regisLabs(data) {\r\n  return axios.post(`/api/v1/labs`, data);\r\n}\r\nexport function typeScreening(id) {\r\n  return axios.get(`/api/v1/formkind/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function getFormformat(id) {\r\n  return axios.get(`/api/v1/formformat/get/${id}`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport {\r\n  listScreening,\r\n  getLabsById,\r\n  updateLabsById,\r\n  regisLabs,\r\n  typeScreening,\r\n} from \"./_redux/CrudScreening\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListScreeningPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [dataTemp, setDataTemp] = useState({});\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [loadingRegis, setLoadingRegis] = useState(false);\r\n  const [dialogLab, setDialogLab] = useState(false);\r\n  const [dialogTypeScreening, setDialogTypeScreening] = useState(false);\r\n  const [dataTypeScreening, setDataTypeScreening] = useState([]);\r\n  const [dataTypeScreening_, setDataTypeScreening_] = useState({});\r\n  const suhbeader = useSubheader();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/registry/screening/list\",\r\n        title: intl.formatMessage({ id: \"LABEL.SCREENING_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.SCREENING_LIST\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    hb: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    hbsag: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    hiv: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    sifilis: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    asam_urat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kolesterol: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    gol_dar: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    pp_test: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    protein_urine: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ph: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    glukosa: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      var data = values;\r\n      data.medical_id = dataTemp.medical_id;\r\n      setLoadingRegis(true);\r\n      if (dataTemp.lab_id) {\r\n        updateLabsById(dataTemp.medical_id, data)\r\n          .then((result) => {\r\n            callApiListNotCome();\r\n            setLoadingRegis(false);\r\n            setInitialValues({});\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n            setDialogLab(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingRegis(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      } else {\r\n        regisLabs(data)\r\n          .then((result) => {\r\n            callApiListNotCome();\r\n            setLoadingRegis(false);\r\n            setInitialValues({});\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n            setDialogLab(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingRegis(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const callApiListNotCome = () => {\r\n    setLoading(true);\r\n    listScreening()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListNotCome, []);\r\n\r\n  const callApiLabs = () => {\r\n    if (dataTemp.lab_id) {\r\n      getLabsById(dataTemp.medical_id)\r\n        .then((result) => {\r\n          var data = {\r\n            hb: result.data.data.hb,\r\n            hbsag: result.data.data.hbsag,\r\n            hiv: result.data.data.hiv,\r\n            sifilis: result.data.data.sifilis,\r\n            asam_urat: result.data.data.asam_urat,\r\n            kolesterol: result.data.data.kolesterol,\r\n            gol_dar: result.data.data.gol_dar,\r\n            pp_test: result.data.data.pp_test,\r\n            protein_urine: result.data.data.protein_urine,\r\n            ph: result.data.data.ph,\r\n            glukosa: result.data.data.glukosa,\r\n          };\r\n          formik.setValues(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(callApiLabs, [dataTemp]);\r\n\r\n  function callApiTypeScreening(poli_id) {\r\n    typeScreening(poli_id)\r\n      .then((result) => {\r\n        setDataTypeScreening(result.data.data);\r\n        setDialogTypeScreening(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  }\r\n\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogTypeScreening}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.TYPE_SCREENING\" />\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          {dataTypeScreening.map((item, index) => {\r\n            return (\r\n              <Link\r\n                key={index.toString()}\r\n                className=\"btn btn-primary  w-100 my-2\"\r\n                to={`/registry/screening/patient/${dataTypeScreening_.pasien_id}/${item.id}/${dataTypeScreening_.id}`}\r\n              >\r\n                {item.kind_nm}\r\n              </Link>\r\n            );\r\n          })}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setDialogTypeScreening(false);\r\n            }}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            <FormattedMessage id=\"LABEL.CANCEL\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogLab}\r\n        // keepMounted\r\n        maxWidth=\"lg\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.LAB_RESULT\" />\r\n        </DialogTitle>\r\n        <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n          <DialogContent>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_CODE\" />\r\n                  </label>\r\n                  <div className=\"col-sm-9\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataTemp?.kode_pasien}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_NAME\" />\r\n                  </label>\r\n                  <div className=\"col-sm-9\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataTemp?.nama}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    <FormattedMessage id=\"LABEL.POLI\" />\r\n                  </label>\r\n                  <div className=\"col-sm-9\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataTemp?.poli}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Hemoglobin (HB)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"hb\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"hbsag\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Human Immunodeficiency Virus (HIV)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"hiv\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Raja Singa (Sifilis)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"sifilis\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Asam Urat</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"asam_urat\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Kolestrol</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"kolesterol\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Gelongan Darah</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"gol_dar\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Plano Test (PP Test)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"pp_test\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Protein Urine</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"protein_urine\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>PH</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"ph\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Gula Darah (Glucose)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"glukosa\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogLab(false);\r\n                formik.resetForm();\r\n              }}\r\n              className=\"btn btn-danger\"\r\n              disabled={loadingRegis}\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              {loadingRegis ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingRegis ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell className=\"text-uppercase\">\r\n                    {item.statusName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {item.status === \"1\" && (\r\n                      <button\r\n                        className=\"btn btn-warning\"\r\n                        onClick={async () => {\r\n                          callApiTypeScreening(item.poli_id);\r\n                          setDataTypeScreening_(item);\r\n                        }}\r\n                      >\r\n                        <FormattedMessage id=\"LABEL.SCREENING\" />\r\n                      </button>\r\n                    )}\r\n                    {(item.status === \"4\" ||\r\n                      item.status === \"5\" ||\r\n                      item.status === \"6\") && (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => {\r\n                          setDataTemp(item);\r\n                          setDialogLab(true);\r\n                          if (item.lab_id) {\r\n                            callApiLabs();\r\n                          }\r\n                        }}\r\n                      >\r\n                        {item.lab_id ? (\r\n                          <i className=\"fas fa-edit pr-2\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-pen pr-2\"></i>\r\n                        )}\r\n                        <FormattedMessage id=\"LABEL.LAB_RESULT\" />\r\n                      </button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListScreeningPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n  CardHeaderTitle,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport {\r\n  regisScreeningData,\r\n  getReservationById,\r\n  getFormformat,\r\n} from \"./_redux/CrudScreening\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { publish, callDoctor } from \"../../../redux/MqttOptions\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport {\r\n  Divider,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  heading_new: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"96.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n    display: \"block\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n}));\r\n\r\nfunction ScreeningPatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [dataCheckIn, setDataCheckIn] = useState({});\r\n  const [dataScreeningLoading, setDataScreeningLoading] = useState(false);\r\n  const [dataScreeningErr, setDataScreeningErr] = useState(false);\r\n  const patient_id = props.match.params.patient_id;\r\n  const poli = props.match.params.poli;\r\n  const reservasi_id = props.match.params.reservasi_id;\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const classes = useStyles();\r\n  const [dataCustom, setDataCustom] = React.useState([]);\r\n  let dataLoopSave = [];\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/registry/screening/list\",\r\n        title: intl.formatMessage({ id: \"LABEL.SCREENING_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/screening/patient/${patient_id}/${poli}/${reservasi_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_SCREENING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_SCREENING\" }));\r\n  }, []);\r\n\r\n  const loopSaveScreening = async (data) => {\r\n    await new Promise(async (res, rej) => {\r\n      if (data.input.length > 0) {\r\n        data.input.forEach((element, index, array) => {\r\n          var val_desc = element.val_desc ? element.val_desc : \"\";\r\n          var item = {\r\n            medkind_id: element.medkind_id,\r\n            medform_id: element.id,\r\n            formkind_id: data.formkind_id,\r\n            val_desc,\r\n          };\r\n          if (val_desc.trim().length != 0) {\r\n            dataLoopSave.push(item);\r\n          }\r\n          if (index === array.length - 1) res();\r\n        });\r\n      } else {\r\n        res();\r\n      }\r\n    });\r\n\r\n    await new Promise(async (res, rej) => {\r\n      if (data.subtitle.length > 0) {\r\n        data.subtitle.forEach(async (element, index, array) => {\r\n          await loopSaveScreening(element);\r\n          if (index === array.length - 1) res();\r\n        });\r\n      } else {\r\n        res();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveScreening = (e) => {\r\n    e.preventDefault();\r\n    setDataScreeningLoading(true);\r\n    let data = cloneDeep(dataCustom);\r\n    data.forEach(async (element) => {\r\n      await loopSaveScreening(element);\r\n    });\r\n    setTimeout(() => {\r\n      var dataReq = {\r\n        reservasi_id,\r\n        screenitems: dataLoopSave,\r\n        formkind_id: poli,\r\n      };\r\n      regisScreeningData(dataReq)\r\n        .then((result) => {\r\n          setDataScreeningLoading(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\",\r\n            3000\r\n          );\r\n          mqttPublish();\r\n          props.history.goBack();\r\n        })\r\n        .catch((err) => {\r\n          setDataScreeningLoading(false);\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    }, 1500);\r\n  };\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      const { topicCallDoctor, qosCallDoctor, payloadCallDoctor } = callDoctor;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n      client.publish(\r\n        topicCallDoctor,\r\n        payloadCallDoctor,\r\n        { qosCallDoctor },\r\n        (error) => {\r\n          if (error) {\r\n            console.log(\"Publish error: \", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const callApiDetail = () => {\r\n    getFormformat(poli)\r\n      .then((result) => {\r\n        setDataCustom(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDetail, []);\r\n\r\n  const callApiGetPasienById = () => {\r\n    getReservationById(reservasi_id)\r\n      .then((result) => {\r\n        setDataCheckIn(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetPasienById, []);\r\n\r\n  const onChangesValue = (indexList, indexInput, e) => {\r\n    let listIndex = indexList.split(\",\");\r\n    let data_ = cloneDeep(dataCustom);\r\n    if (listIndex.length === 1) {\r\n      data_[listIndex[0]].input[indexInput].val_desc = e.target.value;\r\n      setDataCustom(data_);\r\n    } else if (listIndex.length === 2) {\r\n      data_[listIndex[0]].subtitle[listIndex[1]].input[indexInput].val_desc =\r\n        e.target.value;\r\n      setDataCustom(data_);\r\n    } else if (listIndex.length === 3) {\r\n      data_[listIndex[0]].subtitle[listIndex[1]].subtitle[listIndex[2]].input[\r\n        indexInput\r\n      ].val_desc = e.target.value;\r\n      setDataCustom(data_);\r\n    } else if (listIndex.length === 4) {\r\n      data_[listIndex[0]].subtitle[listIndex[1]].subtitle[\r\n        listIndex[2]\r\n      ].subtitle[listIndex[3]].input[indexInput].val_desc = e.target.value;\r\n      setDataCustom(data_);\r\n    } else if (listIndex.length === 5) {\r\n      data_[listIndex[0]].subtitle[listIndex[1]].subtitle[\r\n        listIndex[2]\r\n      ].subtitle[listIndex[3]].subtitle[listIndex[4]].input[\r\n        indexInput\r\n      ].val_desc = e.target.value;\r\n      setDataCustom(data_);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"card-title\">\r\n            <CardHeaderTitle>\r\n              <FormattedMessage id=\"LABEL.SCREENING\" />\r\n            </CardHeaderTitle>\r\n          </div>\r\n          <CardHeaderToolbar>\r\n            {dataScreeningLoading && (\r\n              <span className=\"text-danger\">\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              </span>\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                props.history.goBack();\r\n              }}\r\n              disabled={dataScreeningLoading}\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`btn btn-primary mx-1 ${\r\n                dataScreeningErr ? \"d-none\" : \"\"\r\n              }`}\r\n              disabled={dataScreeningLoading}\r\n              onClick={saveScreening}\r\n            >\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n              <i className=\"fas fa-save ml-2\"></i>\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form autoComplete=\"off\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_CODE\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataCheckIn.kode_pasien}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_NAME\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataCheckIn.nama}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.POLI\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataCheckIn.poli}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.DATE_OF_VISIT\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={\r\n                        dataCheckIn.tgl_book\r\n                          ? window\r\n                              .moment(new Date(dataCheckIn.tgl_book))\r\n                              .format(\"DD MMM YYYY\")\r\n                          : \"\"\r\n                      }\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-12\">\r\n                <h6>\r\n                  <FormattedMessage id=\"LABEL.PATIENT_SCREENING\" />\r\n                </h6>\r\n              </div>\r\n            </div>\r\n            {dataCustom.map((item, index) => (\r\n              <ListItem\r\n                key={index.toString()}\r\n                index={index.toString()}\r\n                item={item}\r\n                classes={classes}\r\n                onChangesValue={onChangesValue}\r\n              />\r\n            ))}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction ListItem({ item, classes, index, onChangesValue }) {\r\n  let children = null;\r\n  children = (\r\n    <div className=\"w-100\">\r\n      <div className=\"row\">\r\n        {item.subtitle.map((i, idx) => (\r\n          <div className=\"col-12\" key={idx.toString()}>\r\n            <ListItem\r\n              item={i}\r\n              index={\r\n                index && typeof index === \"string\"\r\n                  ? index + \",\" + idx.toString()\r\n                  : null\r\n              }\r\n              classes={classes}\r\n              onChangesValue={onChangesValue}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        {item.input.map((a, adx) => (\r\n          <div className=\"col-12\" key={adx.toString()}>\r\n            <div className=\"form-group\">\r\n              <label>{a.medkind?.nama}</label>\r\n              <div className=\"input-group mb-3\">\r\n                {a.medkind.datatype === 1 ||\r\n                a.medkind.datatype === 2 ||\r\n                a.medkind.datatype === 3 ||\r\n                a.medkind.datatype === 4 ? (\r\n                  <input\r\n                    id={`input-${item.id}-${a.id}`}\r\n                    type={\r\n                      a.medkind.datatype === 1\r\n                        ? \"text\"\r\n                        : a.medkind.datatype === 2 || a.medkind.datatype === 3\r\n                        ? \"number\"\r\n                        : \"date\"\r\n                    }\r\n                    className={`form-control ${\r\n                      a.val_desc && a.val_desc.trim().length !== 0\r\n                        ? \"border-valid-input\"\r\n                        : \"\"\r\n                    }`}\r\n                    disabled={a.dokter_only === 2}\r\n                    value={a.val_desc || \"\"}\r\n                    onChange={(e) => {\r\n                      onChangesValue(index, adx, e);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <textarea\r\n                    rows=\"3\"\r\n                    id={`input-${item.id}-${a.id}`}\r\n                    className={`form-control ${\r\n                      a.val_desc && a.val_desc.trim().length !== 0\r\n                        ? \"border-valid-input\"\r\n                        : \"\"\r\n                    }`}\r\n                    disabled={a.dokter_only === 2}\r\n                    value={a.val_desc || \"\"}\r\n                    onChange={(e) => {\r\n                      onChangesValue(index, adx, e);\r\n                    }}\r\n                  ></textarea>\r\n                )}\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">{a.medkind?.unit}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ExpansionPanel defaultExpanded={false} className=\"my-5 rounded-top w-100\">\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span className={classes.heading_new} id={index}>\r\n          {item.title}\r\n        </span>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className={classes.details}>\r\n        {children}\r\n      </ExpansionPanelDetails>\r\n      <Divider />\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ScreeningPatientPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListScreeningPage from \"./ListScreeningPage\";\r\nimport ScreeningPatientPage from \"./ScreeningPatientPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootScreening(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/registry/screening\"\r\n        to=\"/registry/screening/list\"\r\n      />\r\n      <Route\r\n        path=\"/registry/screening/list\"\r\n        component={(props) => <ListScreeningPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/screening/patient/:patient_id/:poli/:reservasi_id\"\r\n        component={(props) => <ScreeningPatientPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootScreening));\r\n"],"sourceRoot":""}