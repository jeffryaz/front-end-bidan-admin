{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","index","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","Fragment","item","toString","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listProvince","axios","get","listCity","prov","listDistricts","city","listWard","districts","headerTable","data_ops","setLoading","setData","setErr","suhbeader","useSubheader","useLayoutEffect","setBreadcrumbs","pathname","setTitle","history","push","listPatientPagination","then","result","rows","catch","MODAL","showSnackbar","TableRow","TableCell","kode_pasien","nama","window","moment","Date","created_at","format","kota","no_telp","email","jk","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","useSelector","state","auth","user","shallowEqual","match","callApiDataPatient","getDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","Number","id_kota","id_kec","id_kel","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","e","preventDefault","newParams","FormData","trim","keys","element","append","post","updateDataPatient","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","tempat_lahir","onChange","options","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","formik","useFormik","initialValues","validationSchema","values","a","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","handleSaveRegis","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","exact","from","path"],"mappings":"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","file":"static/js/4.3c8c70a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\n// import { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"Tanggal Kunjungan\",\r\n  },\r\n  {\r\n    title: \"Nomor Kunjungan\",\r\n  },\r\n  {\r\n    title: \"Poli\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    // listPatientPagination(params)\r\n    //   .then((result) => {\r\n    //     setLoading(false);\r\n    //     setData({\r\n    //       ...data,\r\n    //       count: result.data.data.count || 0,\r\n    //       data: result.data.data.rows,\r\n    //     });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setErr(true);\r\n    //     setLoading(false);\r\n    //     MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n    //   });\r\n  };\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={loading}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${!statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"kel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}