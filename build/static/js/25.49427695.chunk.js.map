{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/buttonAction/ButtonAction.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/HandlingPharmacist/DrugPurchasePage.js","app/modules/HandlingPharmacist/ListDrugPage.js","app/modules/HandlingPharmacist/RootDrugPurchase.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","url","className","icon","primary","disabled","getMedicalRecord","medical_id","axios","get","listMedicinePagination","params","getMedicineById","createMedicine","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","getListPreOrder","getListStockName","listAllPatient","addDrugNonDoctor","getPoDrug","ListItemIcon","props","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","color","palette","action","active","flexShrink","display","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","component","multiline","flex","marginBottom","paddingLeft","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","injectIntl","connect","auth","intl","loading","setLoading","stateForm","setStateForm","suhbeader","useSubheader","selectedParameterPatient","setSelectedParameterPatient","optionParameterPatient","setOptionParameterPatient","cust_nm","phone_no","formNonMember","setFormNonMember","history","useHistory","dataMedicine","setDataMedicine","medicinePatient","useSelector","state","shallowEqual","client","clientMqtt","useLayoutEffect","setBreadcrumbs","pathname","formatMessage","setTitle","useEffect","item","JSON","parse","localStorage","getItem","setItem","stringify","result","rows","active_user","forEach","element","kode_pasien","nama","catch","MODAL","showSnackbar","a","length","waiting","i","composite_item","qty","callApiGetMedicine","mqttPublish","topic","publish","qos","payload","console","log","changeLocalStorage","Fragment","minHeight","htmlFor","options","isDisabled","classNamePrefix","onChange","placeholder","e","target","required","autoComplete","displayType","format","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","push","index","toString","allowNegative","Object","assign","idx","findIndex","initialQty","focus","select","rupiah","harga","splice","setMedicinePatient","backgroundColor","colSpan","count","countSubTotal","removeItem","window","$","isEmptyObject","barang_id","transtype","detail_resep","pasien_id","callApiSubmitMedicalRecord","headerTable","order","status","setData","setErr","dataChecked","setDataChecked","dataHeader","handleParams","countData","hecto","TableRow","TableCell","Checkbox","indeterminate","checked","barcode","unit","exact"],"mappings":"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","file":"static/js/25.49427695.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\nexport function getListPreOrder() {\r\n  return axios.get(`/api/v1/getpreorder`);\r\n}\r\nexport function getListStockName() {\r\n  return axios.get(`/api/v1/stockitem`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function addDrugNonDoctor(data) {\r\n  return axios.post(`/api/v1/reseppos`, data);\r\n}\r\nexport function getPoDrug(id) {\r\n  return axios.put(`/api/v1/takemissitem/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport {\r\n  listAllPatient,\r\n  getMedicineById,\r\n  addDrugNonDoctor,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\n\r\nfunction DrugPurchasePage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [stateForm, setStateForm] = useState(2);\r\n  const suhbeader = useSubheader();\r\n  const [selectedParameterPatient, setSelectedParameterPatient] = useState({});\r\n  const [optionParameterPatient, setOptionParameterPatient] = useState([]);\r\n  const [formNonMember, setFormNonMember] = useState({\r\n    cust_nm: \"\",\r\n    phone_no: \"\",\r\n  });\r\n  const history = useHistory();\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  let { medicinePatient } = useSelector((state) => state.auth, shallowEqual);\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/drug-purchase\",\r\n        title: intl.formatMessage({ id: \"LABEL.DRUG_PURCHASE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DRUG_PURCHASE\" }));\r\n  }, []);\r\n\r\n  const callApiListPatient = () => {\r\n    var item = {\r\n      data: stateForm === 2 ? selectedParameterPatient : formNonMember,\r\n      stateForm,\r\n    };\r\n    try {\r\n      var data = JSON.parse(localStorage.getItem(\"choicePeople\"));\r\n      if (data.stateForm === 2) {\r\n        setSelectedParameterPatient(data.data);\r\n      } else {\r\n        setFormNonMember(data.data);\r\n      }\r\n      setStateForm(data.stateForm);\r\n    } catch (error) {\r\n      localStorage.setItem(\"choicePeople\", JSON.stringify(item));\r\n    }\r\n    listAllPatient()\r\n      .then((result) => {\r\n        result.data.data.rows = result.data.data.rows.filter(\r\n          (item) => item.active_user === 1\r\n        );\r\n        var data = result.data.data.rows;\r\n        data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.kode_pasien + \"-\" + element.nama;\r\n        });\r\n        setOptionParameterPatient(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListPatient, []);\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoading(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      transtype: stateForm,\r\n      detail_resep: dataMedicine,\r\n    };\r\n    if (stateForm === 2) {\r\n      data.pasien_id = selectedParameterPatient.value;\r\n    } else {\r\n      data.cust_nm = formNonMember.cust_nm;\r\n      data.phone_no = formNonMember.phone_no;\r\n    }\r\n    addDrugNonDoctor(data)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        props.setMedicinePatient([]);\r\n        setDataMedicine([]);\r\n        setSelectedParameterPatient({});\r\n        setFormNonMember({ ...formNonMember, cust_nm: \"\", phone_no: \"\" });\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const changeLocalStorage = (data) => {\r\n    var item = {\r\n      data,\r\n      stateForm,\r\n    };\r\n    localStorage.setItem(\"choicePeople\", JSON.stringify(item));\r\n  };\r\n\r\n  const disabledState = () => {\r\n    if (stateForm === 2) {\r\n      if (window.$.isEmptyObject(selectedParameterPatient)) return true;\r\n      return false;\r\n    } else {\r\n      if (!(formNonMember.cust_nm && formNonMember.phone_no)) return true;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row gutter-b\">\r\n            <div className=\"col-6\">\r\n              <div\r\n                className={`bg-light-${\r\n                  stateForm === 2 ? \"primary\" : \"secondary\"\r\n                } px-3 py-4 rounded-xl text-left`}\r\n              >\r\n                <div\r\n                  className={`font-size-h4 d-block my-2 text-${\r\n                    stateForm === 2 ? \"primary\" : \"secondary\"\r\n                  } d-flex justify-content-between`}\r\n                  style={{ minHeight: 30 }}\r\n                >\r\n                  <div>\r\n                    <FormattedMessage id=\"LABEL.PATIENT\" />\r\n                  </div>\r\n                  <div>\r\n                    <i\r\n                      className={`far ${\r\n                        stateForm === 2 ? \"fa-check-circle\" : \"fa-circle\"\r\n                      } text-${\r\n                        stateForm === 2 ? \"primary\" : \"secondary\"\r\n                      } font-size-h1 cursor-pointer`}\r\n                      onClick={() => {\r\n                        setStateForm(2);\r\n                        setFormNonMember({\r\n                          ...formNonMember,\r\n                          cust_nm: \"\",\r\n                          phone_no: \"\",\r\n                        });\r\n                        changeLocalStorage({});\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">\r\n                      <FormattedMessage id=\"LABEL.CHOOSE\" />\r\n                    </label>\r\n                    <Select\r\n                      value={selectedParameterPatient}\r\n                      options={optionParameterPatient}\r\n                      isDisabled={stateForm !== 2}\r\n                      className=\"form-control border-0 p-0 h-100 rounded-0\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterPatient(value);\r\n                        changeLocalStorage(value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div\r\n                className={`bg-light-${\r\n                  stateForm === 3 ? \"primary\" : \"secondary\"\r\n                } px-3 py-4 rounded-xl text-left`}\r\n              >\r\n                <div\r\n                  className={`font-size-h4 d-block my-2 text-${\r\n                    stateForm === 3 ? \"primary\" : \"secondary\"\r\n                  } d-flex justify-content-between`}\r\n                  style={{ minHeight: 30 }}\r\n                >\r\n                  <div>\r\n                    <FormattedMessage id=\"LABEL.NON_PATIENT\" />\r\n                  </div>\r\n                  <div>\r\n                    <i\r\n                      className={`far ${\r\n                        stateForm === 3 ? \"fa-check-circle\" : \"fa-circle\"\r\n                      } text-${\r\n                        stateForm === 3 ? \"primary\" : \"secondary\"\r\n                      } font-size-h1 cursor-pointer`}\r\n                      onClick={() => {\r\n                        setStateForm(3);\r\n                        setSelectedParameterPatient({});\r\n                        changeLocalStorage({ cust_nm: \"\", phone_no: \"\" });\r\n                      }}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                  <form>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"name\">\r\n                            <FormattedMessage id=\"LABEL.NAME\" />\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"name\"\r\n                            placeholder={intl.formatMessage({\r\n                              id: \"LABEL.NAME\",\r\n                            })}\r\n                            value={formNonMember.cust_nm}\r\n                            onChange={(e) => {\r\n                              setFormNonMember({\r\n                                ...formNonMember,\r\n                                cust_nm: e.target.value,\r\n                              });\r\n                              changeLocalStorage({\r\n                                cust_nm: e.target.value,\r\n                                phone_no: formNonMember.phone_no,\r\n                              });\r\n                            }}\r\n                            disabled={stateForm !== 3}\r\n                            required\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"name\">\r\n                            <FormattedMessage id=\"LABEL.NAME\" />\r\n                          </label>\r\n                          <NumberFormat\r\n                            id={\r\n                              stateForm !== 3\r\n                                ? \"NumberFormat-text\"\r\n                                : \"NumberFormat-input\"\r\n                            }\r\n                            value={formNonMember.phone_no}\r\n                            displayType={stateForm !== 3 ? \"text\" : \"input\"}\r\n                            className=\"form-control\"\r\n                            format=\"+62 ###-###-###-####\"\r\n                            mask=\"_\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={true}\r\n                            onValueChange={(e) => {\r\n                              setFormNonMember({\r\n                                ...formNonMember,\r\n                                phone_no: e.floatValue,\r\n                              });\r\n                              changeLocalStorage({\r\n                                cust_nm: formNonMember.cust_nm,\r\n                                phone_no: e.floatValue,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardHeader title=\"Resep Yang Diberikan\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                history.push(`/pharmacist/drug-purchase/medicine-list`);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n              Penambahan Obat\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nama Obat</th>\r\n                <th>Unit</th>\r\n                <th>Harga</th>\r\n                <th>Sub Total</th>\r\n                <th>Aksi</th>\r\n              </tr>\r\n            </thead>\r\n            {dataMedicine.map((item, index) => {\r\n              return (\r\n                <tbody key={index.toString()}>\r\n                  <tr>\r\n                    <td>{item.nama}</td>\r\n                    <td>\r\n                      <NumberFormat\r\n                        value={item.qty}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={false}\r\n                        allowNegative={false}\r\n                        onValueChange={(e) => {\r\n                          var data = Object.assign([], dataMedicine);\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                          if (\r\n                            data[idx].composite_item &&\r\n                            data[idx].composite_item.length > 0\r\n                          ) {\r\n                            data[idx].composite_item.map((value) => {\r\n                              if (!value.initialQty) {\r\n                                value.initialQty = value.qty;\r\n                              }\r\n                              return (value.qty =\r\n                                value.initialQty * data[idx].qty);\r\n                            });\r\n                          }\r\n                          setDataMedicine(data);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          e.target.focus();\r\n                          e.target.select();\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{rupiah(item.harga)}</td>\r\n                    <td>{rupiah(item.harga * item.qty)}</td>\r\n                    <td>\r\n                      <i\r\n                        className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                        onClick={() => {\r\n                          var data = Object.assign([], dataMedicine);\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                          setDataMedicine(data);\r\n                          props.setMedicinePatient(data);\r\n                        }}\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                  {item.composite_item &&\r\n                    item.composite_item.map((value, idx) => {\r\n                      return (\r\n                        <tr\r\n                          key={idx.toString()}\r\n                          style={{ backgroundColor: \"#F3F6F9\" }}\r\n                        >\r\n                          <td className=\"pl-10\">{value.nama}</td>\r\n                          <td>\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control\"\r\n                              value={value.qty}\r\n                              onChange={() => {}}\r\n                              disabled\r\n                            />\r\n                          </td>\r\n                          <td>{rupiah(0)}</td>\r\n                          <td>{rupiah(0)}</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              );\r\n            })}\r\n            <tbody>\r\n              <tr>\r\n                <th colSpan=\"2\"></th>\r\n                <th>Total</th>\r\n                <td colSpan=\"2\">{rupiah(countSubTotal(dataMedicine))}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loading}\r\n          onClick={() => {\r\n            history.push(`/pharmacist/dashboard`);\r\n            props.setMedicinePatient(null);\r\n            localStorage.removeItem(\"choicePeople\");\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={\r\n            loading ||\r\n            (medicinePatient && medicinePatient.length === 0) ||\r\n            disabledState() ||\r\n            dataMedicine.length === 0\r\n          }\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loading ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DrugPurchasePage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingPharmacist\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/drug-purchase`,\r\n        title: intl.formatMessage({ id: \"LABEL.DRUG_PURCHASE\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/drug-purchase/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(`/pharmacist/drug-purchase`);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(`/pharmacist/drug-purchase`);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  // Redirect\r\n} from \"react-router-dom\";\r\nimport DrugPurchasePage from \"./DrugPurchasePage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootDrugPurchase(props) {\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect\r\n        exact={true}\r\n        from=\"/pharmacist/drug-purchase\"\r\n        to=\"/pharmacist/dashboard\"\r\n      /> */}\r\n      <Route\r\n        path=\"/pharmacist/drug-purchase/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/drug-purchase\"\r\n        component={(props) => <DrugPurchasePage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootDrugPurchase));\r\n"],"sourceRoot":""}