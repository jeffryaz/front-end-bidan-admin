{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/Administrator/Doctor/ListDoctorPage.js","app/modules/Administrator/Doctor/RootAdministratorDoctor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","url","className","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","Fragment","item","index","toString","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","activePoli","put","inactivePoli","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","editMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","createTakaran","editTakaran","deleteTakaran","getTakaran","getFormformat","createFolder","deleteFolders","createInput","deleteInput","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","palette","action","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","useHistory","optionParameterPoli","setOptionParameterPoli","selectedParameterPoli","setSelectedParameterPoli","dialog","setDialog","init","load","photo_","setPhoto_","photo","setPhoto","paramTable","setParamTable","statusDialog","setStatusDialog","deleteDialog","setDeleteDialog","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","nama","required","tempat","tgl_lahir","pendidikan","poli_id","email","desc","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","newParams","FormData","dataReq","keys","forEach","element","append","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","statusIndex","findIndex","setValues","setFieldTouched","poli","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","backgroundImage","toAbsoluteUrl","hostBase","data-action","data-toggle","data-original-title","accept","onChange","fr","FileReader","onload","readAsDataURL","files","setFieldValue","getFieldProps","errors","isDisabled","classNamePrefix","menuPlacement","onBlur","rows","DialogActions","isValid","TableRow","TableCell","exact","from"],"mappings":"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","file":"static/js/21.8a890fe1.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poliall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function activePoli(id) {\r\n  return axios.put(`/api/v1/poli/enable/${id}`);\r\n}\r\nexport function inactivePoli(id) {\r\n  return axios.put(`/api/v1/poli/disable/${id}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function editMedicalKind(id, data) {\r\n  return axios.put(`/api/v1/medicalkind/${id}`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\nexport function createTakaran(data) {\r\n  return axios.post(`/api/v1/takaran`, data);\r\n}\r\nexport function editTakaran(id, data) {\r\n  return axios.put(`/api/v1/takaran/${id}`, data);\r\n}\r\nexport function deleteTakaran(id) {\r\n  return axios.delete(`/api/v1/takaran/${id}`);\r\n}\r\nexport function getTakaran() {\r\n  return axios.get(`/api/v1/takaran`);\r\n}\r\nexport function getFormformat(id) {\r\n  return axios.get(`/api/v1/formformat/get/${id}`);\r\n}\r\nexport function createFolder(data) {\r\n  return axios.post(`/api/v1/formformat/folder`, data);\r\n}\r\nexport function deleteFolders(id) {\r\n  return axios.delete(`/api/v1/formformat/folder/${id}`);\r\n}\r\nexport function createInput(data) {\r\n  return axios.post(`/api/v1/formformat/input`, data);\r\n}\r\nexport function deleteInput(id) {\r\n  return axios.delete(`/api/v1/formformat/input/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listDoctorPagination,\r\n  listAllPoli,\r\n  craeteDoctor,\r\n  getDoctorById,\r\n  editDoctorById,\r\n  deleteDoctor,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EDUCATION\",\r\n    name: \"pendidikan\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"edit\",\r\n  },\r\n  {\r\n    label: \"LABEL.DELETE\",\r\n    icon: \"fas fa-trash-alt text-danger\",\r\n    type: \"delete\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListDoctorPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [optionParameterPoli, setOptionParameterPoli] = useState([]);\r\n  const [selectedParameterPoli, setSelectedParameterPoli] = useState({});\r\n  const [dialog, setDialog] = useState(false);\r\n  const [photo_, setPhoto_] = useState({\r\n    init: \"\",\r\n    load: \"\",\r\n  });\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/doctor-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.DOCTOR_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DOCTOR_LIST\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    pendidikan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    poli_id: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    desc: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!photo && values.photo) delete values.photo;\r\n      let newParams = new FormData();\r\n      var dataReq = Object.assign({}, values);\r\n      Object.keys(dataReq).forEach((element) => {\r\n        newParams.append(element, dataReq[element]);\r\n      });\r\n      if (!statusDialog) {\r\n        craeteDoctor(newParams)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n            setSelectedParameterPoli({});\r\n            setPhoto_({ ...photo_, init: \"\", load: \"\" });\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editDoctorById(statusDialog, newParams)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n            setSelectedParameterPoli({});\r\n            setPhoto_({ ...photo_, init: \"\", load: \"\" });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listDoctorPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    if (type === \"edit\") {\r\n      setStatusDialog(data.id);\r\n      getDoctorById(data.id)\r\n        .then((result) => {\r\n          var statusIndex = optionParameterPoli.findIndex(\r\n            (item) => item.value === result.data.data.poli_id\r\n          );\r\n          setSelectedParameterPoli(optionParameterPoli[statusIndex]);\r\n          setPhoto_({ ...photo_, init: result.data.data.photo });\r\n          formik.setValues(result.data.data);\r\n          formik.setFieldTouched({ ...formik, nama: true });\r\n          setDialog(true);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setStatusDialog(data.id);\r\n      setDeleteDialog(true);\r\n    }\r\n  };\r\n\r\n  const callApiListPoli = () => {\r\n    listAllPoli()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.poli;\r\n        });\r\n        setOptionParameterPoli(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListPoli, []);\r\n\r\n  const getUserPic = () => {\r\n    if (!photo_.init) {\r\n      return \"none\";\r\n    }\r\n    return `url(${hostBase()}/storage/app/dokter_photo/${photo_.init})`;\r\n  };\r\n\r\n  const callApiDeleteDoctor = () => {\r\n    setLoadingSave(true);\r\n    deleteDoctor(statusDialog)\r\n      .then((result) => {\r\n        requestApi(paramTable);\r\n        setLoadingSave(false);\r\n        setDeleteDialog(false);\r\n        setStatusDialog(null);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.FOTO\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <div\r\n                  className=\"image-input image-input-outline\"\r\n                  id=\"kt_profile_avatar\"\r\n                  style={{\r\n                    backgroundImage: `url(${toAbsoluteUrl(\r\n                      \"/media/users/blank.png\"\r\n                    )}`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"image-input-wrapper\"\r\n                    style={{\r\n                      backgroundImage: `${\r\n                        photo ? `url('${photo_.load}')` : getUserPic()\r\n                      }`,\r\n                    }}\r\n                  />\r\n                  <label\r\n                    className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                    data-action=\"change\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"\"\r\n                    data-original-title=\"Change avatar\"\r\n                  >\r\n                    <i className=\"fa fa-pen icon-sm text-muted\"></i>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".png, .jpg, .jpeg\"\r\n                      disabled={loadingSave}\r\n                      onChange={(e) => {\r\n                        let fr = new FileReader();\r\n                        fr.onload = () => {\r\n                          setPhoto_({ ...photo_, load: fr.result });\r\n                        };\r\n                        fr.readAsDataURL(e.target.files[0]);\r\n                        setPhoto(e.target.files[0]);\r\n                        formik.setFieldValue(\"photo\", e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </label>\r\n                  <span\r\n                    className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                    data-action=\"cancel\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"\"\r\n                    data-original-title=\"Cancel avatar\"\r\n                  >\r\n                    <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                  </span>\r\n                </div>\r\n                <span className=\"form-text text-muted\">\r\n                  Hanya menerima type file: png, jpg, jpeg.\r\n                </span>\r\n                <span className=\"text-left text-danger\">\r\n                  <FormattedMessage id=\"LABEL.VALIDATION_REQUIRED_FIELD\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.NAME\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PLACE_OF_BIRTH\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  {...formik.getFieldProps(\"tempat\")}\r\n                />\r\n                {formik.errors.tempat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.DATE_OF_BIRTH\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.EDUCATION\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  {...formik.getFieldProps(\"pendidikan\")}\r\n                />\r\n                {formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.EMAIL\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.POLI\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterPoli}\r\n                  options={optionParameterPoli}\r\n                  isDisabled={loadingSave}\r\n                  className=\"form-control border-0 p-0 h-100 rounded-0\"\r\n                  classNamePrefix=\"react-select\"\r\n                  menuPlacement=\"top\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterPoli(value);\r\n                    formik.setFieldValue(\"poli_id\", value.value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, poli_id: true });\r\n                  }}\r\n                />\r\n                {formik.errors.poli_id && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.poli_id}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.DESC\" />\r\n                <span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"3\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"desc\")}\r\n                ></textarea>\r\n                {formik.errors.desc && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.desc}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid || loadingSave || (!photo && !photo_.init)\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n                setPhoto_({ ...photo_, init: \"\", load: \"\" });\r\n                setSelectedParameterPoli({});\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Dialog\r\n        open={deleteDialog}\r\n        maxWidth=\"sm\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.DELETE\" />\r\n        </DialogTitle>\r\n        <DialogContent>Apakah Anda yakin ingin menghapusnya?</DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            disabled={loadingSave}\r\n            onClick={callApiDeleteDoctor}\r\n          >\r\n            {loadingSave ? (\r\n              <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-save ml-2\"></i>\r\n            )}\r\n            {loadingSave ? (\r\n              <FormattedMessage id=\"LABEL.WAITING\" />\r\n            ) : (\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              setDeleteDialog(false);\r\n            }}\r\n            disabled={loadingSave}\r\n          >\r\n            <i className=\"fas fa-times px-1\"></i>\r\n            <FormattedMessage id=\"LABEL.CANCEL\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.pendidikan}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>{item?.poli?.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDoctorPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListDoctorPage from \"./ListDoctorPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/doctor-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/doctor-page/list\"\r\n        component={(props) => <ListDoctorPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorDoctor));\r\n"],"sourceRoot":""}