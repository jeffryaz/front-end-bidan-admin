{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/modules/Administrator/Doctor/ListDoctorPage.js","app/modules/Administrator/Doctor/RootAdministratorDoctor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","handleParams","loading","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","index","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","Fragment","item","toString","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","craeteDoctor","axios","post","editDoctorById","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","useHistory","optionParameterPoli","setOptionParameterPoli","selectedParameterPoli","setSelectedParameterPoli","dialog","setDialog","init","load","photo_","setPhoto_","photo","setPhoto","paramTable","setParamTable","statusDialog","setStatusDialog","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","nama","required","tempat","tgl_lahir","pendidikan","poli_id","email","desc","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","newParams","FormData","dataReq","keys","forEach","element","append","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","get","listDoctorPagination","statusIndex","findIndex","setValues","setFieldTouched","poli","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","backgroundImage","toAbsoluteUrl","hostBase","data-action","data-original-title","accept","onChange","e","fr","FileReader","onload","readAsDataURL","files","setFieldValue","getFieldProps","touched","errors","options","isDisabled","classNamePrefix","menuPlacement","onBlur","rows","DialogActions","isValid","constructor","TableRow","TableCell","exact","from","path"],"mappings":"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","file":"static/js/9.8306a6a3.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listDoctorPagination,\r\n  listAllPoli,\r\n  craeteDoctor,\r\n  getDoctorById,\r\n  editDoctorById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EDUCATION\",\r\n    name: \"pendidikan\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListDoctorPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [optionParameterPoli, setOptionParameterPoli] = useState([]);\r\n  const [selectedParameterPoli, setSelectedParameterPoli] = useState({});\r\n  const [dialog, setDialog] = useState(false);\r\n  const [photo_, setPhoto_] = useState({\r\n    init: \"\",\r\n    load: \"\",\r\n  });\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/doctor-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.DOCTOR_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DOCTOR_LIST\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    pendidikan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    poli_id: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    desc: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!photo && values.photo) delete values.photo;\r\n      let newParams = new FormData();\r\n      var dataReq = Object.assign({}, values);\r\n      Object.keys(dataReq).forEach((element) => {\r\n        newParams.append(element, dataReq[element]);\r\n      });\r\n      if (!statusDialog) {\r\n        craeteDoctor(newParams)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n            setSelectedParameterPoli({});\r\n            setPhoto_({ ...photo_, init: \"\", load: \"\" });\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editDoctorById(statusDialog, newParams)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n            setSelectedParameterPoli({});\r\n            setPhoto_({ ...photo_, init: \"\", load: \"\" });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listDoctorPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    setStatusDialog(data.id);\r\n    getDoctorById(data.id)\r\n      .then((result) => {\r\n        var statusIndex = optionParameterPoli.findIndex(\r\n          (item) => item.value === result.data.data.poli_id\r\n        );\r\n        setSelectedParameterPoli(optionParameterPoli[statusIndex]);\r\n        setPhoto_({ ...photo_, init: result.data.data.photo });\r\n        formik.setValues(result.data.data);\r\n        formik.setFieldTouched(\"nama\", true);\r\n        setDialog(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListPoli = () => {\r\n    listAllPoli()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.poli;\r\n        });\r\n        setOptionParameterPoli(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListPoli, []);\r\n\r\n  const getUserPic = () => {\r\n    if (!photo_.init) {\r\n      return \"none\";\r\n    }\r\n    return `url(${hostBase()}/storage/app/dokter_photo/${photo_.init})`;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.EDIT\" />\r\n          <FormattedMessage id=\"LABEL.ADD\" />\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.FOTO\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <div\r\n                  className=\"image-input image-input-outline\"\r\n                  id=\"kt_profile_avatar\"\r\n                  style={{\r\n                    backgroundImage: `url(${toAbsoluteUrl(\r\n                      \"/media/users/blank.png\"\r\n                    )}`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"image-input-wrapper\"\r\n                    style={{\r\n                      backgroundImage: `${\r\n                        photo ? `url('${photo_.load}')` : getUserPic()\r\n                      }`,\r\n                    }}\r\n                  />\r\n                  <label\r\n                    className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                    data-action=\"change\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"\"\r\n                    data-original-title=\"Change avatar\"\r\n                  >\r\n                    <i className=\"fa fa-pen icon-sm text-muted\"></i>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".png, .jpg, .jpeg\"\r\n                      disabled={loadingSave}\r\n                      onChange={(e) => {\r\n                        let fr = new FileReader();\r\n                        fr.onload = () => {\r\n                          setPhoto_({ ...photo_, load: fr.result });\r\n                        };\r\n                        fr.readAsDataURL(e.target.files[0]);\r\n                        setPhoto(e.target.files[0]);\r\n                        formik.setFieldValue(\"photo\", e.target.files[0]);\r\n                      }}\r\n                    />\r\n                  </label>\r\n                  <span\r\n                    className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                    data-action=\"cancel\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"\"\r\n                    data-original-title=\"Cancel avatar\"\r\n                  >\r\n                    <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\r\n                  </span>\r\n                </div>\r\n                <span className=\"form-text text-muted\">\r\n                  Hanya menerima type file: png, jpg, jpeg.\r\n                </span>\r\n                <span className=\"text-left text-danger\">\r\n                  <FormattedMessage id=\"LABEL.VALIDATION_REQUIRED_FIELD\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.NAME\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PLACE_OF_BIRTH\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat\")}\r\n                />\r\n                {formik.touched.tempat && formik.errors.tempat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.DATE_OF_BIRTH\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.EDUCATION\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"pendidikan\")}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.EMAIL\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.POLI\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterPoli}\r\n                  options={optionParameterPoli}\r\n                  isDisabled={loadingSave}\r\n                  className=\"form-control border-0 p-0 h-100 rounded-0\"\r\n                  classNamePrefix=\"react-select\"\r\n                  menuPlacement=\"top\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterPoli(value);\r\n                    formik.setFieldValue(\"poli_id\", value.value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"poli_id\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.poli_id && formik.errors.poli_id && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.poli_id}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.DESC\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"3\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"desc\")}\r\n                ></textarea>\r\n                {formik.touched.desc && formik.errors.desc && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.desc}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loadingSave ||\r\n                (!photo && !photo_.init)\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n                setPhoto_({ ...photo_, init: \"\", load: \"\" });\r\n                setSelectedParameterPoli({});\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.pendidikan}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>---</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDoctorPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListDoctorPage from \"./ListDoctorPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/doctor-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/doctor-page/list\"\r\n        component={(props) => <ListDoctorPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorDoctor));\r\n"],"sourceRoot":""}