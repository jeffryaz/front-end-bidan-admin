{"version":3,"sources":["app/components/tableCustomV1/table.js","app/modules/Administrator/Testimonial/TestimonialPage.js","app/modules/Administrator/Testimonial/_redux/CrudTestimonial.js","app/modules/Administrator/Testimonial/RootAdministratorTestimonial.js"],"names":["rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","type","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","handleClose","Fragment","id","className","map","item","index","key","toString","onClick","title","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","width","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","headerTable","setLoading","suhbeader","useSubheader","setData","setErr","paramTable","setParamTable","useLayoutEffect","setBreadcrumbs","pathname","setTitle","requestApi","axios","get","getListTestimonialPagination","then","result","catch","MODAL","showSnackbar","callApiPublish","put","publishTestimonial","callApiUnPublish","unPublishTestimonial","callApiDeletePublish","delete","deleteTestimonial","TableRow","TableCell","pasien","nama","Array","star","itm","idx","fontSize","testimoni","window","updated_at","publish","path","exact"],"mappings":"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","file":"static/js/29.5e721bd7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  getListTestimonialPagination,\r\n  publishTestimonial,\r\n  unPublishTestimonial,\r\n  deleteTestimonial,\r\n} from \"./_redux/CrudTestimonial\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport Select from \"react-select\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n    td: \"td-20\",\r\n  },\r\n  {\r\n    title: \"LABEL.SATISFACTION_LAVEL\",\r\n    name: \"tingkat_kepuasan\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n    td: \"td-15\",\r\n  },\r\n  {\r\n    title: \"LABEL.COMMENT\",\r\n    name: \"komentar\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n    td: \"td-15\",\r\n  },\r\n  {\r\n    title: \"LABEL.PUBLISH\",\r\n    name: \"publish\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction TestimonialPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/administrator/testimonial\",\r\n        title: intl.formatMessage({ id: \"LABEL.TESTIMONIAL\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.TESTIMONIAL\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    getListTestimonialPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiPublish = (id) => {\r\n    publishTestimonial(id)\r\n      .then((result) => {\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        requestApi(paramTable);\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiUnPublish = (id) => {\r\n    unPublishTestimonial(id)\r\n      .then((result) => {\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        requestApi(paramTable);\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiDeletePublish = (id) => {\r\n    deleteTestimonial(id)\r\n      .then((result) => {\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        requestApi(paramTable);\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.pasien.nama}</TableCell>\r\n                  <TableCell>\r\n                    {[...Array(item?.star || 0)].map((itm, idx) => {\r\n                      return (\r\n                        <i\r\n                          className=\"fas fa-star\"\r\n                          style={{ color: \"#FFD700\", fontSize: \"large\" }}\r\n                          key={idx.toString()}\r\n                        ></i>\r\n                      );\r\n                    })}\r\n                    {[...Array(5 - (item?.star || 0))].map((itm, idx) => {\r\n                      return (\r\n                        <i\r\n                          className=\"far fa-star\"\r\n                          style={{ color: \"#FFD700\", fontSize: \"large\" }}\r\n                          key={idx.toString()}\r\n                        ></i>\r\n                      );\r\n                    })}\r\n                  </TableCell>\r\n                  <TableCell>{item?.testimoni}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY HH:mm:ss\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {item?.publish === 1 ? (\r\n                      <i\r\n                        className=\"fas fa-toggle-on font-size-h2 text-primary cursor-pointer\"\r\n                        onClick={() => {\r\n                          callApiUnPublish(item.id);\r\n                        }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i\r\n                        className=\"fas fa-toggle-off font-size-h2 text-danger cursor-pointer\"\r\n                        onClick={() => {\r\n                          callApiPublish(item.id);\r\n                        }}\r\n                      ></i>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-danger\"\r\n                      onClick={() => {\r\n                        callApiDeletePublish(item.id);\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"LABEL.DELETE\" />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(TestimonialPage));\r\n","import axios from \"axios\";\r\n\r\nexport function listReservationOffline() {\r\n  return axios.get(`/api/v1/reservasioff`);\r\n}\r\nexport function listReservationOnline() {\r\n  return axios.get(`/api/v1/reservasion`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function getPatientById(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function regisReservation(data) {\r\n  return axios.post(`/api/v1/reservasioff`, data);\r\n}\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listReservationPagination(params) {\r\n  return axios.get(`/api/v1/reservasiall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function cancelReservation(id, data) {\r\n  return axios.put(`/api/v1/cancelreservasi/${id}`, data);\r\n}\r\nexport function getScreeningData(id) {\r\n  return axios.get(`/api/v1/screeningform/${id}`);\r\n}\r\nexport function regisScreeningData(data) {\r\n  return axios.post(`/api/v1/submitscreen`, data);\r\n}\r\nexport function listNotYetCome() {\r\n  return axios.get(`/api/v1/reservasiuncoming`);\r\n}\r\nexport function listScreening() {\r\n  return axios.get(`/api/v1/reservasitoday`);\r\n}\r\nexport function getReservationById(id) {\r\n  return axios.get(`/api/v1/reservation/${id}`);\r\n}\r\nexport function getLabsById(medical_id) {\r\n  return axios.get(`/api/v1/labs/${medical_id}`);\r\n}\r\nexport function updateLabsById(medical_id, data) {\r\n  return axios.put(`/api/v1/labs/${medical_id}`, data);\r\n}\r\nexport function regisLabs(data) {\r\n  return axios.post(`/api/v1/labs`, data);\r\n}\r\nexport function typeScreening(id) {\r\n  return axios.get(`/api/v1/formkind/${id}`);\r\n}\r\nexport function testimonialByStaf(data) {\r\n  return axios.post(`/api/v1/testimoni/staff`, data);\r\n}\r\nexport function getListTestimonialPagination(params) {\r\n  return axios.get(`/api/v1/testimoni${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function publishTestimonial(id) {\r\n  return axios.put(`/api/v1/testimoni/publish/${id}`);\r\n}\r\nexport function unPublishTestimonial(id) {\r\n  return axios.put(`/api/v1/testimoni/unpublish/${id}`);\r\n}\r\nexport function deleteTestimonial(id) {\r\n  return axios.delete(`/api/v1/testimoni/staff/${id}`);\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport TestimonialPage from \"./TestimonialPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorTestimonial(props) {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path=\"/administrator/testimonial\"\r\n        component={(props) => <TestimonialPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorTestimonial));\r\n"],"sourceRoot":""}