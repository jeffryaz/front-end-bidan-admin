{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/modules/HandlingTeller/_redux/CrudHandlingTeller.js","app/modules/HandlingTeller/DetailTeller.js","app/modules/HandlingTeller/NeedClosingPage.js","app/modules/HandlingTeller/RootHandlingTeller.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","getMedicalRecord","medical_id","axios","get","getMedicineById","savePayment","post","listDailyInCome","params","handOver","listNeedClosing","auth","history","useHistory","setLoading","loadingSubmit","setLoadingSubmit","setData","suhbeader","useSubheader","dataMedicine","setDataMedicine","resep_id","match","handlingFee","setHandlingFee","payment","setPayment","dataMedicinePatient","a","waiting","result","composite_item","qty","MODAL","showSnackbar","useSelector","clientMqtt","client","shallowEqual","useLayoutEffect","setBreadcrumbs","pathname","setTitle","useEffect","form","fee","callApiGetMedicine","resep","catch","countSubTotal","count","harga","code_reg","created_at","window","moment","Date","format","pasien","poli","nama","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","Object","assign","idx","findIndex","floatValue","rupiah","style","backgroundColor","disabled","colSpan","thousandSeparator","prefix","width","onClick","pay_amt","console","log","callApiSubmitMedicalRecord","headerTable","setDataSecond","grandTotal","setGrandTotal","callApiListNeedClosing","grand_total","forEach","element","Number","response","messages","message","TableRow","TableCell","kode_trans","total","exact","from","to","path"],"mappings":"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","file":"static/js/19.a3f24b5e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function savePayment(data) {\r\n  return axios.post(`/api/v1/paymentsubmit`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function handOver() {\r\n  return axios.post(`/api/v1/handover`);\r\n}\r\nexport function listNeedClosing() {\r\n  return axios.get(`/api/v1/needclosinglist`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  savePayment,\r\n  getMedicalRecord,\r\n} from \"./_redux/CrudHandlingTeller\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nfunction DetailTeller(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const resep_id = props.match.params.resep_id;\r\n  const medical_id = props.match.params.medical_id;\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const [payment, setPayment] = useState(0);\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/teller/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/teller/handling-page/process/${resep_id}/${medical_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.DRUG_PAYMENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DRUG_PAYMENT\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medical_id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee);\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n  useEffect(() => {\r\n    setPayment((handlingFee || 0) + countSubTotal(dataMedicine || []));\r\n  }, [handlingFee, dataMedicine]);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   async function callApiGetMedicine() {\r\n  //     if (medicinePatient && medicinePatient.length > 0) {\r\n  //       var data = medicinePatient;\r\n  //       var waiting = new Promise(async (resolve, reject) => {\r\n  //         for (let i = 0; i < data.length; i++) {\r\n  //           try {\r\n  //             var result = await getMedicineById(data[i].id);\r\n  //             data[i].composite_item = result.data.data.composite_item;\r\n  //             data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //             if (i === data.length - 1) resolve();\r\n  //           } catch (error) {\r\n  //             MODAL.showSnackbar(\r\n  //               intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //             );\r\n  //             if (i === data.length - 1) resolve();\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       await waiting;\r\n  //       setDataMedicine(data);\r\n  //     }\r\n  //   }\r\n  //   callApiGetMedicine();\r\n  // }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    var data = {\r\n      resep_id,\r\n      pay_amt: payment,\r\n    };\r\n    savePayment(data)\r\n      .then((result) => {\r\n        console.log(\"result\", result);\r\n        setLoadingSubmit(false);\r\n        history.push(`/teller/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar></CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">{rupiah(handlingFee)}</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <th colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Bayar</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={payment}\r\n                        id={\r\n                          loadingSubmit\r\n                            ? \"NumberFormat-text\"\r\n                            : \"NumberFormat-input\"\r\n                        }\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={false}\r\n                        allowNegative={false}\r\n                        thousandSeparator={true}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setPayment(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Kembalian</th>\r\n                    <th colSpan=\"2\">\r\n                      {rupiah(\r\n                        payment - (handlingFee + countSubTotal(dataMedicine))\r\n                      )}\r\n                    </th>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSubmit}\r\n          onClick={() => {\r\n            history.push(`/teller/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={\r\n            loadingSubmit ||\r\n            payment - (handlingFee + countSubTotal(dataMedicine)) < 0\r\n          }\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailTeller));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { handOver, listNeedClosing } from \"./_redux/CrudHandlingTeller\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n  Switch,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TRANSACTION_CODE\",\r\n    name: \"kode_trans\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_SALE\",\r\n    name: \"total\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.HANDLING_FEE\",\r\n    name: \"fee\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.GRAND_TOTAL\",\r\n    name: \"grand_total\",\r\n    filter: true,\r\n  },\r\n];\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nfunction NeedClosingPage(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const suhbeader = useSubheader();\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [grandTotal, setGrandTotal] = useState(0);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/teller/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/teller/handling-page/need-closing`,\r\n        title: intl.formatMessage({ id: \"LABEL.NEED_CLOSING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.NEED_CLOSING\" }));\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiListNeedClosing = () => {\r\n    setLoading(true);\r\n    listNeedClosing()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var grand_total = 0;\r\n        result.data.data.forEach((element) => {\r\n          grand_total += Number(element.grand_total);\r\n        });\r\n        setData(result.data.data);\r\n        setDataSecond(result.data.data);\r\n        setGrandTotal(grand_total);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(\r\n          err.response?.data.messages || err.response?.data.message\r\n        );\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListNeedClosing, []);\r\n\r\n  const callApiProcess = () => {\r\n    setLoading(true);\r\n    handOver()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        callApiListNeedClosing();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(\r\n          err.response?.data.messages || err.response?.data.message\r\n        );\r\n      });\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title={rupiah(grandTotal)}>\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-primary\"\r\n                  onClick={callApiProcess}\r\n                  disabled={loading || data.length === 0}\r\n                >\r\n                  <i\r\n                    className={`fas fa-sync ${loading ? \"fa-spin\" : \"\"} px-1`}\r\n                  ></i>\r\n                  <FormattedMessage id=\"LABEL.PROCESS\" />\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <TableOnly\r\n                dataHeader={headerTable}\r\n                dataSecond={dataSecond}\r\n                handleFilter={handleFilter}\r\n                loading={false}\r\n                hecto={10}\r\n              >\r\n                {data.map((item, index) => {\r\n                  return (\r\n                    <TableRow key={index.toString()}>\r\n                      <TableCell>{item.kode_trans}</TableCell>\r\n                      <TableCell>{rupiah(item.total)}</TableCell>\r\n                      <TableCell>{rupiah(item.fee)}</TableCell>\r\n                      <TableCell>{rupiah(item.grand_total)}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableOnly>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(NeedClosingPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailTeller from \"./DetailTeller\";\r\nimport NeedClosingPage from \"./NeedClosingPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingTeller(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/teller/handling-page\" to=\"/teller/dashboard\" />\r\n      <Route\r\n        path=\"/teller/handling-page/process/:resep_id/:medical_id\"\r\n        component={(props) => <DetailTeller {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/teller/handling-page/need-closing\"\r\n        component={(props) => <NeedClosingPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingTeller));\r\n"],"sourceRoot":""}