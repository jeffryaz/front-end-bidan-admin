{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/HandlingPharmacist/DetailPharmacist.js","app/modules/HandlingPharmacist/ListEmptyItemPage.js","app/modules/HandlingPharmacist/ListStockIsRunningOutPage.js","app/modules/HandlingPharmacist/ListPreOrderPage.js","app/modules/HandlingPharmacist/RootHandlingPharmacist.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","injectIntl","connect","props","intl","dataHeader","loading","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","push","component","Paper","map","index","td","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","getMedicalRecord","medical_id","axios","get","listMedicinePagination","params","getMedicineById","createMedicine","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","getListPreOrder","getListStockName","listAllPatient","addDrugNonDoctor","getPoDrug","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","color","palette","action","active","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","paddingLeft","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","auth","history","useHistory","setLoading","loadingSave","loadingSubmit","setLoadingSubmit","setData","setLab","suhbeader","useSubheader","setDataScreening","dataMedicine","setDataMedicine","readyOrder","setReadyOrder","resep_id","match","client","useSelector","state","medicinePatient","shallowEqual","clientMqtt","dataMedicinePatient","a","waiting","result","composite_item","qty","MODAL","showSnackbar","useLayoutEffect","setBreadcrumbs","pathname","setTitle","useEffect","form","screen","labs","callApiGetMedicine","resep","catch","callApiSubmitMedicalRecord","otherArray","current","forEach","element","barang_id","preorder","topic","publish","qos","payload","console","log","mqttPublish","replace","code_reg","created_at","window","moment","Date","format","pasien","poli","nama","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","Object","assign","idx","findIndex","floatValue","rupiah","harga","height","checked","splice","backgroundColor","headerTable","setDataSecond","iscompositeName","iscomposite","TableRow","TableCell","barcode","unit","in_qty","out_qty","stock","callApiListStockRunningOut","kode_trans","buy_time","nama_pasien","$","removeClass","addClass","exact","from"],"mappings":"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","file":"static/js/20.67fdb012.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className={`bg-primary text-uppercase ${\r\n                        item?.td ? item?.td : \"\"\r\n                      }`}\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\nexport function getListPreOrder() {\r\n  return axios.get(`/api/v1/getpreorder`);\r\n}\r\nexport function getListStockName() {\r\n  return axios.get(`/api/v1/stockitem`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function addDrugNonDoctor(data) {\r\n  return axios.post(`/api/v1/reseppos`, data);\r\n}\r\nexport function getPoDrug(id) {\r\n  return axios.put(`/api/v1/takemissitem/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveApotek,\r\n  getMedicalRecord,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nfunction DetailPharmacist(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [readyOrder, setReadyOrder] = useState([]);\r\n  const id = props.match.params.id;\r\n  const resep_id = props.match.params.resep_id;\r\n  const medical_id = props.match.params.medical_id;\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/handling-page/process/${medical_id}/${resep_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medical_id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   async function callApiGetMedicine() {\r\n  //     if (medicinePatient && medicinePatient.length > 0) {\r\n  //       var data = medicinePatient;\r\n  //       var waiting = new Promise(async (resolve, reject) => {\r\n  //         for (let i = 0; i < data.length; i++) {\r\n  //           try {\r\n  //             var result = await getMedicineById(data[i].id);\r\n  //             data[i].composite_item = result.data.data.composite_item;\r\n  //             data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //             if (i === data.length - 1) resolve();\r\n  //           } catch (error) {\r\n  //             MODAL.showSnackbar(\r\n  //               intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //             );\r\n  //             if (i === data.length - 1) resolve();\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       await waiting;\r\n  //       setDataMedicine(data);\r\n  //     }\r\n  //   }\r\n  //   callApiGetMedicine();\r\n  // }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    var data = dataMedicine.filter(comparerData(readyOrder));\r\n    data.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      resep_id,\r\n      preorder: data,\r\n    };\r\n    saveApotek(data)\r\n      .then((result) => {\r\n        mqttPublish();\r\n        setLoadingSubmit(false);\r\n        history.replace(`/pharmacist/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar></CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.AVAILABLE\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], readyOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setReadyOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty * item.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            history.push(`/pharmacist/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailPharmacist));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListEmptyMedicine } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscompositeName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.NUMBER_OF_ENTRIES\",\r\n    name: \"in_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.EXIT_AMOUNT\",\r\n    name: \"out_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STOCK\",\r\n    name: \"stock\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.CANCEL\",\r\n    icon: \"fas fa-ban text-danger\",\r\n    type: \"cancel\",\r\n  },\r\n];\r\n\r\nfunction ListEmptyItemPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-empty\",\r\n        title: intl.formatMessage({ id: \"LABEL.OUT_OF_MEDICINE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.OUT_OF_MEDICINE\" }));\r\n  }, []);\r\n\r\n  const callApiListEmptyMedicine = () => {\r\n    setLoading(true);\r\n    getListEmptyMedicine()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.iscompositeName =\r\n            element.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\";\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListEmptyMedicine, []);\r\n\r\n  const handleAction = (type, data) => {};\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>{item.iscompositeName}</TableCell>\r\n                  <TableCell>{item.in_qty}</TableCell>\r\n                  <TableCell>{item.out_qty}</TableCell>\r\n                  <TableCell>{item.stock}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && item.status !== \"7\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListEmptyItemPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListStockRunningOut } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscompositeName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.NUMBER_OF_ENTRIES\",\r\n    name: \"in_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.EXIT_AMOUNT\",\r\n    name: \"out_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STOCK\",\r\n    name: \"stock\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.CANCEL\",\r\n    icon: \"fas fa-ban text-danger\",\r\n    type: \"cancel\",\r\n  },\r\n];\r\n\r\nfunction ListStockIsRunningOutPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-stock\",\r\n        title: intl.formatMessage({ id: \"LABEL.DRUG_STOCKS_ARE_RUNNING_OUT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(\r\n      intl.formatMessage({ id: \"LABEL.DRUG_STOCKS_ARE_RUNNING_OUT\" })\r\n    );\r\n  }, []);\r\n\r\n  const callApiListStockRunningOut = () => {\r\n    setLoading(true);\r\n    getListStockRunningOut()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.iscompositeName =\r\n            element.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\";\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListStockRunningOut, []);\r\n\r\n  const handleAction = (type, data) => {};\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>{item.iscompositeName}</TableCell>\r\n                  <TableCell>{item.in_qty}</TableCell>\r\n                  <TableCell>{item.out_qty}</TableCell>\r\n                  <TableCell>{item.stock}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && item.status !== \"7\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListStockIsRunningOutPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListPreOrder, getPoDrug } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TRANSACTION_CODE\",\r\n    name: \"kode_trans\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscompositeName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.BUY_DATE\",\r\n    name: \"buy_time\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama_pasien\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.HANDOVER\",\r\n    icon: \"fas fa-hand-holding-heart text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPreOrderPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-preorder\",\r\n        title: intl.formatMessage({ id: \"LABEL.PRE_ORDER\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PRE_ORDER\" }));\r\n  }, []);\r\n\r\n  const callApiListStockRunningOut = () => {\r\n    setLoading(true);\r\n    getListPreOrder()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.iscompositeName =\r\n            element.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\";\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListStockRunningOut, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  const handleAction = (index, id) => {\r\n    window.$(`#iconAction-${index}`).removeClass(\"fa-hand-holding-heart\");\r\n    window.$(`#iconAction-${index}`).addClass(\"fa-spinner fa-pulse\");\r\n    getPoDrug(id)\r\n      .then((result) => {\r\n        window.$(`#iconAction-${index}`).removeClass(\"fa-spinner fa-pulse\");\r\n        window.$(`#iconAction-${index}`).addClass(\"fa-hand-holding-heart\");\r\n        callApiListStockRunningOut();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        window.$(`#iconAction-${index}`).removeClass(\"fa-spinner fa-pulse\");\r\n        window.$(`#iconAction-${index}`).addClass(\"fa-hand-holding-heart\");\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_trans}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>{item.iscompositeName}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.buy_time))\r\n                      .format(\"DD MMM YYYY HH:mm:ss\")}\r\n                  </TableCell>\r\n                  <TableCell>{item.nama_pasien}</TableCell>\r\n                  <TableCell>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-primary\"\r\n                      onClick={() => {\r\n                        handleAction(index, item.id);\r\n                      }}\r\n                    >\r\n                      <i\r\n                        id={`iconAction-${index}`}\r\n                        className=\"px-2 fas fa-hand-holding-heart\"\r\n                      ></i>\r\n                      <FormattedMessage id=\"LABEL.HANDOVER\" />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPreOrderPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailPharmacist from \"./DetailPharmacist\";\r\nimport ListEmptyItemPage from \"./ListEmptyItemPage\";\r\nimport ListStockIsRunningOutPage from \"./ListStockIsRunningOutPage\";\r\nimport ListPreOrderPage from \"./ListPreOrderPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingPharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/pharmacist/handling-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/process/:medical_id/:resep_id\"\r\n        component={(props) => <DetailPharmacist {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-empty\"\r\n        component={(props) => <ListEmptyItemPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-stock\"\r\n        component={(props) => <ListStockIsRunningOutPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-preorder\"\r\n        component={(props) => <ListPreOrderPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingPharmacist));\r\n"],"sourceRoot":""}