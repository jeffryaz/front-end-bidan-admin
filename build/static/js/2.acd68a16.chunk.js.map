{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","className","map","item","index","key","toString","id","title","listPatientPagination","params","axios","get","getDataPatient","updateDataPatient","data","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","to","url","icon","primary","disabled","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","openFilterTable","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","setLoading","setData","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","match","medicalRecordId","antrian_id","position","useSelector","state","auth","user","shallowEqual","useLayoutEffect","window","location","pathname","split","setBreadcrumbs","setTitle","then","result","form","screen","labs","catch","MODAL","showSnackbar","code_reg","created_at","moment","Date","format","pasien","poli","dokter","label_kind","datatype","join","val_desc","onChange","rows","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","headerTable","data_ops","history","push","setErr","kode_pasien","nama","kota","no_telp","email","jk","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","Number","id_kota","id_kec","id_kel","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","e","preventDefault","newParams","FormData","trim","keys","element","append","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","tempat_lahir","options","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord"],"mappings":"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","file":"static/js/2.acd68a16.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/list/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>Resep Yang Diberikan</CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={false}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.code_reg}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n"],"sourceRoot":""}