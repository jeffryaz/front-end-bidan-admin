{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/modules/Administrator/CheckingHandOver/CheckingPage.js","app/modules/Administrator/CheckingHandOver/RootAdministratorCheckingHandOver.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","listDoctorPagination","params","axios","get","deleteDoctor","delete","listPoliPagination","activePoli","put","inactivePoli","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","editMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","headerTable","headerTables","auth","suhbeader","useHistory","useSubheader","useSelector","clientMqtt","client","shallowEqual","setLoading","setData","setDataSecond","dialog","setDialog","datas","setDatas","dataSeconds","setDataSeconds","useLayoutEffect","setBreadcrumbs","pathname","setTitle","callApiListHandOver","then","result","forEach","element","staff_name","staff","nama","catch","MODAL","showSnackbar","response","messages","message","useEffect","Dialog","open","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TableRow","TableCell","trans_kode","rupiah","total","DialogActions","onClick","closing_amt","window","moment","Date","closing_date","format","status","$","addClass","removeClass","callApiProcess","exact","from","to","path"],"mappings":"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","file":"static/js/29.14d1d2d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poliall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function activePoli(id) {\r\n  return axios.put(`/api/v1/poli/enable/${id}`);\r\n}\r\nexport function inactivePoli(id) {\r\n  return axios.put(`/api/v1/poli/disable/${id}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function editMedicalKind(id, data) {\r\n  return axios.put(`/api/v1/medicalkind/${id}`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  processHandOver,\r\n  listHandOver,\r\n  detailHandOver,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport { publish } from \"../../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n  Switch,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.STAFF\",\r\n    name: \"staff_name\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_SALE\",\r\n    name: \"closing_amt\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE\",\r\n    name: \"closing_date\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst headerTables = [\r\n  {\r\n    title: \"LABEL.TRANSACTION_CODE\",\r\n    name: \"trans_kode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_SALE\",\r\n    name: \"total\",\r\n    filter: true,\r\n  },\r\n  // {\r\n  //   title: \"LABEL.HANDLING_FEE\",\r\n  //   name: \"fee\",\r\n  //   filter: true,\r\n  // },\r\n  // {\r\n  //   title: \"LABEL.GRAND_TOTAL\",\r\n  //   name: \"grand_total\",\r\n  //   filter: true,\r\n  // },\r\n];\r\n\r\nfunction CheckingPage(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const suhbeader = useSubheader();\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [datas, setDatas] = useState([]);\r\n  const [dataSeconds, setDataSeconds] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/handling-page/need-closing`,\r\n        title: intl.formatMessage({ id: \"LABEL.HANDOVER\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.HANDOVER\" }));\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiListHandOver = () => {\r\n    setLoading(true);\r\n    listHandOver()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        result.data.data.forEach((element) => {\r\n          element.staff_name = element.staff.nama;\r\n        });\r\n        setData(result.data.data);\r\n        setDataSecond(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(\r\n          err.response?.data.messages || err.response?.data.message\r\n        );\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListHandOver, []);\r\n\r\n  const callApiProcess = (id, index) => {\r\n    window.$(`#loading-${index}`).addClass(\"fa-spin\");\r\n    processHandOver(id)\r\n      .then((result) => {\r\n        window.$(`#loading-${index}`).removeClass(\"fa-spin\");\r\n        callApiListHandOver();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        window.$(`#loading-${index}`).removeClass(\"fa-spin\");\r\n        MODAL.showSnackbar(\r\n          err.response?.data.messages || err.response?.data.message\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  const handleFilters = (data) => {\r\n    setDatas(data);\r\n  };\r\n\r\n  const callApiDetail = (id) => {\r\n    detailHandOver(id)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setDatas(result.data.data);\r\n        setDataSeconds(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(\r\n          err.response?.data.messages || err.response?.data.message\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.DETAIL\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TableOnly\r\n            dataHeader={headerTables}\r\n            dataSecond={dataSeconds}\r\n            handleFilter={handleFilters}\r\n            loading={false}\r\n            hecto={5}\r\n          >\r\n            {datas.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.trans_kode}</TableCell>\r\n                  <TableCell>{rupiah(item.total)}</TableCell>\r\n                  {/* <TableCell>{rupiah(item.fee)}</TableCell>\r\n                  <TableCell>{rupiah(item.grand_total)}</TableCell> */}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardBody>\r\n              <TableOnly\r\n                dataHeader={headerTable}\r\n                dataSecond={dataSecond}\r\n                handleFilter={handleFilter}\r\n                loading={loading}\r\n                hecto={10}\r\n              >\r\n                {data.map((item, index) => {\r\n                  return (\r\n                    <TableRow key={index.toString()}>\r\n                      <TableCell>{item.staff_name}</TableCell>\r\n                      <TableCell>{rupiah(item.closing_amt)}</TableCell>\r\n                      <TableCell>\r\n                        {window\r\n                          .moment(new Date(item.closing_date))\r\n                          .format(\"DD MMM YYYY\")}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm btn-primary mx-1\"\r\n                          onClick={() => {\r\n                            callApiDetail(item.id);\r\n                          }}\r\n                        >\r\n                          <FormattedMessage id=\"LABEL.DETAIL\" />\r\n                        </button>\r\n                        {item.status === 1 && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-sm btn-primary mx-1\"\r\n                            onClick={() => {\r\n                              callApiProcess(item.id, index);\r\n                            }}\r\n                          >\r\n                            <i\r\n                              className={`fas fa-sync px-1`}\r\n                              id={`loading-${index}`}\r\n                            ></i>\r\n                            <FormattedMessage id=\"LABEL.PROCESS\" />\r\n                          </button>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableOnly>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(CheckingPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport CheckingPage from \"./CheckingPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorCheckingHandOver(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/handling-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/handling-page/need-closing\"\r\n        component={(props) => <CheckingPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(\r\n  connect(null, null)(RootAdministratorCheckingHandOver)\r\n);\r\n"],"sourceRoot":""}