{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/tableCustomV1/table.js","app/components/currency.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingPharmacist/ListProduct.js","app/modules/HandlingPharmacist/RootMedicinePharmacist.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","className","map","item","index","key","toString","id","title","rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","type","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","handleClose","data-toggle","aria-expanded","onClick","paddingRight","paddingLeft","Number","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","width","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","getMedicalRecord","medical_id","axios","get","listMedicinePagination","getMedicineById","createMedicine","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","SwitchBase","root","concat","capitalize","checked","disabled","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","headerTable","headerTableMedicine","auth","useHistory","setLoading","loadingReq","setLoadingReq","setData","setErr","dialogPackage","setDialogPackage","dialogMedicine","setDialogMedicine","barcode","nama","unit","harga","iscomposite","addPackage","setAddPackage","suhbeader","useSubheader","useSelector","clientMqtt","client","shallowEqual","dataChecked","setDataChecked","state","setState","paramTable","setParamTable","dialogAddItems","setDialogAddItems","useLayoutEffect","setBreadcrumbs","pathname","setTitle","requestApi","then","result","catch","MODAL","showSnackbar","isEnabled","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","onSubmit","preventDefault","forEach","element","barang_id","sellingPrice","items","response","messages","DialogContent","qty","onChange","required","colSpan","allowNegative","floatValue","DialogActions","undefined","TableRow","TableCell","padding","Checkbox","findIndex","push","idx","splice","autoComplete","itemcomposite","toUpperCase","Switch","composite_item","exact","from","to","path"],"mappings":"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","file":"static/js/14.1e800a23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  listMedicinePagination,\r\n  createMedicine,\r\n  editMedicine,\r\n  getMedicineById,\r\n  createItemMedicine,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n  Switch,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscomposite\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst headerTableMedicine = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n  },\r\n];\r\n\r\nfunction ListProduct(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingReq, setLoadingReq] = useState(false);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dialogPackage, setDialogPackage] = useState(false);\r\n  const [dialogMedicine, setDialogMedicine] = useState(false);\r\n  const [addPackage, setAddPackage] = useState({\r\n    barcode: \"\",\r\n    nama: \"\",\r\n    unit: \"\",\r\n    harga: 0,\r\n    iscomposite: false,\r\n  });\r\n  const suhbeader = useSubheader();\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const [state, setState] = useState(\"new\");\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [dialogAddItems, setDialogAddItems] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/medicine-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }));\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const saveProduct = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = {\r\n      barcode: addPackage?.barcode,\r\n      nama: addPackage?.nama,\r\n      unit: addPackage?.unit,\r\n      harga: addPackage?.harga,\r\n      iscomposite: addPackage?.iscomposite,\r\n    };\r\n    if (addPackage?.iscomposite) {\r\n      dataChecked.forEach((element) => (element.barang_id = element.id));\r\n      data.itemcomposite = dataChecked;\r\n    }\r\n    if (state === \"new\") {\r\n      createMedicine(data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    } else {\r\n      editMedicine(state, data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    }\r\n  };\r\n\r\n  const callApiEdit = (id) => {\r\n    getMedicineById(id)\r\n      .then((result) => {\r\n        setAddPackage({\r\n          ...addPackage,\r\n          barcode: result.data.data.barcode,\r\n          nama: result.data.data.nama,\r\n          unit: result.data.data.unit,\r\n          harga: result.data.data.harga,\r\n          iscomposite: result.data.data.iscomposite === 0 ? false : true,\r\n        });\r\n        if (result.data.data.iscomposite === 1) {\r\n          setDataChecked(result.data.data.composite_item);\r\n        }\r\n        setState(id);\r\n        setDialogPackage(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiAddItems = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = Object.assign([], dataChecked);\r\n    data.forEach((element) => {\r\n      element.barang_id = element.id;\r\n      element.harga = element.sellingPrice;\r\n      delete element.id;\r\n      delete element.sellingPrice;\r\n    });\r\n    createItemMedicine({ items: data })\r\n      .then((result) => {\r\n        setDataChecked([]);\r\n        setLoadingReq(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        requestApi(paramTable);\r\n        setDialogAddItems(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingReq(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n\r\n  function isEnabledAdd() {\r\n    if (dataChecked.length == 0) return true;\r\n    var data = dataChecked.filter((item) => {\r\n      return (\r\n        item.qty === null ||\r\n        item.qty === undefined ||\r\n        item.sellingPrice === null ||\r\n        item.sellingPrice === undefined\r\n      );\r\n    });\r\n    return data.length === 0 ? false : true;\r\n  }\r\n\r\n  const isEnabled =\r\n    addPackage.barcode.length > 0 &&\r\n    addPackage.nama.length > 0 &&\r\n    addPackage.unit.length > 0;\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogAddItems}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.ADD_ITEM\" />\r\n        </DialogTitle>\r\n        <form onSubmit={callApiAddItems}>\r\n          <DialogContent>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.QTY\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.SELLING_PRICE\" />\r\n                  </th>\r\n                  <th className=\"text-right\" style={{ maxWidth: 90 }}>\r\n                    <button\r\n                      className=\"btn btn-warning btn-sm\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setDialogMedicine(true);\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"LABEL.ADD_ITEM\" />\r\n                    </button>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataChecked.map((item, index) => {\r\n                  return (\r\n                    <tr key={index.toString()}>\r\n                      <td>{item.nama}</td>\r\n                      <td>{item.unit}</td>\r\n                      <td>{rupiah(item.harga)}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          value={item.qty}\r\n                          onChange={(e) => {\r\n                            var data = Object.assign([], dataChecked);\r\n                            data[index].qty = e.target.value;\r\n                            setDataChecked(data);\r\n                          }}\r\n                          required={true}\r\n                          disabled={loadingReq}\r\n                        />\r\n                      </td>\r\n                      <td colSpan=\"2\">\r\n                        <NumberFormat\r\n                          id={\r\n                            loadingReq\r\n                              ? \"NumberFormat-text\"\r\n                              : \"NumberFormat-input\"\r\n                          }\r\n                          value={item.sellingPrice}\r\n                          displayType={loadingReq ? \"text\" : \"input\"}\r\n                          className=\"form-control\"\r\n                          allowEmptyFormatting={true}\r\n                          allowLeadingZeros={true}\r\n                          thousandSeparator={true}\r\n                          allowNegative={false}\r\n                          prefix={\"Rp \"}\r\n                          onValueChange={(e) => {\r\n                            var data = Object.assign([], dataChecked);\r\n                            data[index].sellingPrice = e.floatValue\r\n                              ? e.floatValue\r\n                              : 0;\r\n                            setDataChecked(data);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogAddItems(false);\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isEnabledAdd() || loadingReq}\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogMedicine}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <TableOnly dataHeader={headerTableMedicine} hecto={8}>\r\n            {data.data\r\n              .filter((item) => item.iscomposite === 0)\r\n              .map((item, index) => {\r\n                return (\r\n                  <TableRow key={index.toString()}>\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        indeterminate={false}\r\n                        checked={\r\n                          dataChecked.findIndex(\r\n                            (value) => value.id === item.id\r\n                          ) !== -1\r\n                        }\r\n                        onChange={(e) => {\r\n                          var data = Object.assign([], dataChecked);\r\n                          if (e.target.checked) {\r\n                            data.push(item);\r\n                          } else {\r\n                            var idx = data.findIndex(\r\n                              (value) => value.id === item.id\r\n                            );\r\n                            data.splice(idx, 1);\r\n                          }\r\n                          setDataChecked(data);\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{item.barcode}</TableCell>\r\n                    <TableCell>{item.nama}</TableCell>\r\n                    <TableCell>{item.unit}</TableCell>\r\n                    <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableOnly>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setDialogMedicine(false);\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogPackage}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {state === \"new\" ? (\r\n            <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.EDIT_PRODUCT\" />\r\n          )}\r\n        </DialogTitle>\r\n\r\n        <form autoComplete=\"off\" onSubmit={saveProduct}>\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_CODE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.barcode}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, barcode: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.nama}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, nama: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.unit}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      unit: e.target.value.toUpperCase(),\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loadingReq ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={addPackage?.harga}\r\n                  displayType={loadingReq ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  thousandSeparator={true}\r\n                  allowNegative={false}\r\n                  prefix={\"Rp \"}\r\n                  onValueChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      harga: e.floatValue ? e.floatValue : 0,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PACKAGE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Switch\r\n                  checked={addPackage?.iscomposite}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      iscomposite: e.target.checked,\r\n                    });\r\n                  }}\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            {addPackage?.iscomposite && (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.QTY\" />\r\n                    </th>\r\n                    <th className=\"text-right\" style={{ maxWidth: 80 }}>\r\n                      <button\r\n                        className=\"btn btn-warning btn-sm\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setDialogMedicine(true);\r\n                        }}\r\n                      >\r\n                        <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n                      </button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataChecked.map((item, index) => {\r\n                    return (\r\n                      <tr key={index.toString()}>\r\n                        <td>{item.nama}</td>\r\n                        <td>{item.unit}</td>\r\n                        <td colSpan=\"2\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={item.qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataChecked);\r\n                              data[index].qty = e.target.value;\r\n                              setDataChecked(data);\r\n                            }}\r\n                            required={true}\r\n                            disabled={loadingReq}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogPackage(false);\r\n                setAddPackage({\r\n                  barcode: \"\",\r\n                  nama: \"\",\r\n                  unit: \"\",\r\n                  harga: 0,\r\n                  iscomposite: false,\r\n                });\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !isEnabled ||\r\n                (addPackage.iscomposite === true && dataChecked.length == 0) ||\r\n                loadingReq\r\n              }\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setState(\"new\");\r\n                setDialogPackage(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-prescription-bottle mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PACKAGE\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setDialogAddItems(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-capsules mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                  <TableCell>\r\n                    {item.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => {\r\n                        callApiEdit(item.id);\r\n                      }}\r\n                    >\r\n                      <i className=\"far fa-edit mx-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.EDIT\" />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListProduct));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListProduct from \"./ListProduct\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootMedicinePharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/pharmacist/medicine-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/medicine-page/list\"\r\n        component={(props) => <ListProduct {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootMedicinePharmacist));\r\n"],"sourceRoot":""}