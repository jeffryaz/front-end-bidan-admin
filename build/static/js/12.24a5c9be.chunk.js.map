{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","SwitchBase","ref","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","_useControlled","controlled","default","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","root","role","undefined","input","newChecked","cursor","position","opacity","height","top","left","zIndex","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","useSelector","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","palette","text","secondary","colorPrimary","main","action","hoverOpacity","colorSecondary","optionParameter","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","setScreeningPatient","setMedicinePatient","mqttPublish","topic","publish","qos","payload","error","console","log","callApiSaveMedicalRecord","forEach","element","barang_id","screenitems","trim","treatment_kind","detail_resep","put","saveMedicalRecord","callApiSubmitMedicalRecord","submitMedicalRecord","isDisabled","classNamePrefix","updated_at","upd_user","initialQty","focus","select","splice","cancelMedicalRecord","MedicalRecord","statusName","TableRow","TableCell","kode_pasien","tgl_book","setErr","dataChecked","setDataChecked","listMedicinePagination","Checkbox","barcode","unit","exact","from","path"],"mappings":"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","file":"static/js/12.24a5c9be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          props.setScreeningPatient(\r\n            result.data.data.screen ? result.data.data.screen : []\r\n          );\r\n          setDataScreening(result.data.data.screen);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-sm-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {item.updated_at\r\n                              ? window\r\n                                  .moment(new Date(item.updated_at))\r\n                                  .format(\"DD MMM YYYY HH:mm:ss\")\r\n                              : \"\"}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc || \"\"}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.target.focus();\r\n                              e.target.select();\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={handlingFee}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          e.target.focus();\r\n                          e.target.select();\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id).catch((err) => {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n            });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n            history.push(`/doctor/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}