{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/ListPatientPage.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/StepConnector/StepConnector.js","../node_modules/@material-ui/core/esm/Stepper/Stepper.js","../node_modules/@material-ui/core/esm/Step/Step.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js","../node_modules/@material-ui/core/esm/StepIcon/StepIcon.js","../node_modules/@material-ui/core/esm/StepLabel/StepLabel.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","Fragment","item","index","toString","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","handleFilter","dataSecond","dataFilter","htmlFor","onChange","i","j","toLowerCase","push","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","palette","action","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","setErr","kode_pasien","kota","no_telp","email","jk","active_user","_props$color","valueBuffer","_props$variant","useTheme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","concat","_transform","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","backgroundPrimary","main","backgroundSecondary","overflow","height","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","Nav","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginRight","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","id_kota","id_kec","id_kel","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","preventDefault","newParams","FormData","trim","keys","element","append","tempat_lahir","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord","createSvgIcon","childrenProp","_props$component","imgProps","sizes","srcSet","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","fontFamily","typography","pxToRem","lineHeight","borderRadius","userSelect","background","default","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","boxSizing","spacing","breakpoints","up","values","reduce","acc","breakpoint","maxWidthXs","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","_props$alternativeLab","alternativeLabel","completed","_props$orientation","orientation","line","lineHorizontal","lineVertical","horizontal","vertical","borderColor","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","minHeight","defaultConnector","_props$activeStep","activeStep","_props$connector","connector","connectorProp","_props$nonLinear","nonLinear","childrenArray","toArray","steps","step","controlProps","last","elevation","flexDirection","_props$active","_props$completed","_props$disabled","_props$expanded","expanded","child","cx","cy","r","_props$error","error","Warning","CheckCircle","text","x","y","textAnchor","fill","contrastText","caption","optional","StepIconComponentProp","StepIconComponent","StepIconProps","iconContainer","labelContainer","Typography","cursor","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","required","formik","useFormik","initialValues","validationSchema","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","setFieldValue","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","handleSaveRegis","exact","from","DetailMedicalRecord","PatientPage","ListPatientPage"],"mappings":"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","file":"static/js/9.475888f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"phone\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"email\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"status\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <span\r\n                      className={\r\n                        item.active_user === 1 ? \"text-primary\" : \"text-danger\"\r\n                      }\r\n                    >\r\n                      {item.active_user === 1 ? \"Active\" : \"Non Active\"}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto'\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      marginLeft: 12,\n      // half icon\n      padding: '0 0 8px'\n    },\n\n    /* Styles applied to the root element if `alternativeLabel={true}`. */\n    alternativeLabel: {\n      position: 'absolute',\n      top: 8 + 4,\n      left: 'calc(-50% + 20px)',\n      right: 'calc(50% + 20px)'\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the line element. */\n    line: {\n      display: 'block',\n      borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    lineHorizontal: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    lineVertical: {\n      borderLeftStyle: 'solid',\n      borderLeftWidth: 1,\n      minHeight: 24\n    }\n  };\n};\nvar StepConnector = React.forwardRef(function StepConnector(props, ref) {\n  var active = props.active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      classes = props.classes,\n      className = props.className,\n      completed = props.completed,\n      disabled = props.disabled,\n      index = props.index,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"classes\", \"className\", \"completed\", \"disabled\", \"index\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.line, {\n      'horizontal': classes.lineHorizontal,\n      'vertical': classes.lineVertical\n    }[orientation])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepConnector'\n})(StepConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends(_extends(_extends({}, controlProps), state), step.props))];\n  });\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * An element to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nvar Step = React.forwardRef(function Step(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      connector = props.connector,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$expanded = props.expanded,\n      expanded = _props$expanded === void 0 ? false : _props$expanded,\n      index = props.index,\n      last = props.last,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"connector\", \"disabled\", \"expanded\", \"index\", \"last\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 && React.cloneElement(connector, {\n    orientation: orientation,\n    alternativeLabel: alternativeLabel,\n    index: index,\n    active: active,\n    completed: completed,\n    disabled: disabled\n  }), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Step component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.cloneElement(child, _extends({\n      active: active,\n      alternativeLabel: alternativeLabel,\n      completed: completed,\n      disabled: disabled,\n      expanded: expanded,\n      last: last,\n      icon: index + 1,\n      orientation: orientation\n    }, child.props));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   */\n  expanded: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport withStyles from '../styles/withStyles';\nimport SvgIcon from '../SvgIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      color: theme.palette.text.disabled,\n      '&$completed': {\n        color: theme.palette.primary.main\n      },\n      '&$active': {\n        color: theme.palette.primary.main\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the SVG text element. */\n    text: {\n      fill: theme.palette.primary.contrastText,\n      fontSize: theme.typography.caption.fontSize,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {}\n  };\n};\n\nvar _ref = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nvar StepIcon = React.forwardRef(function StepIcon(props, ref) {\n  var _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      icon = props.icon,\n      _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      classes = props.classes;\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    var className = clsx(classes.root, active && classes.active, error && classes.error, completed && classes.completed);\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    if (completed) {\n      return /*#__PURE__*/React.createElement(CheckCircle, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SvgIcon, {\n      className: className,\n      ref: ref\n    }, _ref, /*#__PURE__*/React.createElement(\"text\", {\n      className: classes.text,\n      x: \"12\",\n      y: \"16\",\n      textAnchor: \"middle\"\n    }, icon));\n  }\n\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepIcon'\n})(StepIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport StepIcon from '../StepIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      '&$alternativeLabel': {\n        flexDirection: 'column'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {},\n\n    /* Styles applied to the `Typography` component which wraps `children`. */\n    label: {\n      color: theme.palette.text.secondary,\n      '&$active': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$completed': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$alternativeLabel': {\n        textAlign: 'center',\n        marginTop: 16\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Pseudo-class applied to the `Typography` component if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the `Typography` component if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the `icon` container element. */\n    iconContainer: {\n      flexShrink: 0,\n      // Fix IE 11 issue\n      display: 'flex',\n      paddingRight: 8,\n      '&$alternativeLabel': {\n        paddingRight: 0\n      }\n    },\n\n    /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */\n    alternativeLabel: {},\n\n    /* Styles applied to the container element which wraps `Typography` and `optional`. */\n    labelContainer: {\n      width: '100%'\n    }\n  };\n};\nvar StepLabel = React.forwardRef(function StepLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      expanded = props.expanded,\n      icon = props.icon,\n      last = props.last,\n      optional = props.optional,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      StepIconComponentProp = props.StepIconComponent,\n      StepIconProps = props.StepIconProps,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"error\", \"expanded\", \"icon\", \"last\", \"optional\", \"orientation\", \"StepIconComponent\", \"StepIconProps\"]);\n\n  var StepIconComponent = StepIconComponentProp;\n\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),\n    ref: ref\n  }, other), icon || StepIconComponent ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.iconContainer, alternativeLabel && classes.alternativeLabel)\n  }, /*#__PURE__*/React.createElement(StepIconComponent, _extends({\n    completed: completed,\n    active: active,\n    error: error,\n    icon: icon\n  }, StepIconProps))) : null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.labelContainer\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: clsx(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error),\n    display: \"block\"\n  }, children), optional));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * The component to render in place of the [`StepIcon`](/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`StepIcon`](/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default withStyles(styles, {\n  name: 'MuiStepLabel'\n})(StepLabel);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched({ ...formik, nama: true });\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, no_kk: true });\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, ktpno: true });\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, no_telp: true });\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched({ ...formik, alamat: true });\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, kel: true });\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched({ ...formik, partner: true });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, partner_tel: true });\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}