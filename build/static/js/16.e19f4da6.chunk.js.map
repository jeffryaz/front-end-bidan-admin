{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","app/modules/Screening/_redux/CrudScreening.js","app/modules/Screening/ListScreeningPage.js","app/modules/Screening/ScreeningPatientPage.js","app/modules/Screening/RootScreening.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","Tablelvl2Context","TableContext","TableContainer","ref","classes","_props$component","Component","other","root","width","overflowX","Table","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","table","Provider","role","theme","display","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","tablelvl2","variant","TableHead","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","backgroundColor","action","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","borderBottom","divider","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","default","TableBody","updateLabsById","medical_id","axios","put","regisLabs","post","headerTable","setLoading","setData","setDataSecond","dataTemp","setDataTemp","initialValues","setInitialValues","loadingRegis","setLoadingRegis","dialogLab","setDialogLab","dialogTypeScreening","setDialogTypeScreening","dataTypeScreening","setDataTypeScreening","dataTypeScreening_","setDataTypeScreening_","suhbeader","useSubheader","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","hb","required","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","lab_id","then","result","callApiListNotCome","resetForm","MODAL","showSnackbar","catch","console","log","get","forEach","element","statusName","status","useEffect","callApiLabs","setValues","response","messages","callApiTypeScreening","poli_id","Dialog","open","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","to","pasien_id","kind_nm","DialogActions","onClick","autoComplete","handleSubmit","kode_pasien","disabled","nama","poli","getFieldProps","tgl_book","screeningItem","label","useStyles","makeStyles","heading","secondaryHeading","details","alignItems","column","flexBasis","dataCheckIn","setDataCheckIn","dataScreeningLoading","setDataScreeningLoading","dataScreening","setDataScreening","dataScreeningErr","setDataScreeningErr","patient_id","match","params","reservasi_id","client","useSelector","clientMqtt","shallowEqual","mqttPublish","topic","publish","qos","payload","topicCallDoctor","callDoctor","qosCallDoctor","payloadCallDoctor","error","cloneDeep","items","group_id","history","goBack","preventDefault","screenitems","screenitems_","val_desc","document","getElementById","join","medkind_id","medform_id","trim","regisScreeningData","formkind_id","window","moment","Date","format","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","idx","datatype","dokter_only","rows","Divider","exact","from","path"],"mappings":"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","file":"static/js/16.e19f4da6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends(_extends({}, theme.typography.body2), {}, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends(_extends({}, theme.typography.body2), {}, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import axios from \"axios\";\r\n\r\nexport function listReservationOffline() {\r\n  return axios.get(`/api/v1/reservasioff`);\r\n}\r\nexport function listReservationOnline() {\r\n  return axios.get(`/api/v1/reservasion`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function getPatientById(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function regisReservation(data) {\r\n  return axios.post(`/api/v1/reservasioff`, data);\r\n}\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listReservationPagination(params) {\r\n  return axios.get(`/api/v1/reservasiall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function cancelReservation(id, data) {\r\n  return axios.put(`/api/v1/cancelreservasi/${id}`, data);\r\n}\r\nexport function getScreeningData(id) {\r\n  return axios.get(`/api/v1/screeningform/${id}`);\r\n}\r\nexport function regisScreeningData(data) {\r\n  return axios.post(`/api/v1/submitscreen`, data);\r\n}\r\nexport function listNotYetCome() {\r\n  return axios.get(`/api/v1/reservasiuncoming`);\r\n}\r\nexport function listScreening() {\r\n  return axios.get(`/api/v1/reservasitoday`);\r\n}\r\nexport function getReservationById(id) {\r\n  return axios.get(`/api/v1/reservation/${id}`);\r\n}\r\nexport function getLabsById(medical_id) {\r\n  return axios.get(`/api/v1/labs/${medical_id}`);\r\n}\r\nexport function updateLabsById(medical_id, data) {\r\n  return axios.put(`/api/v1/labs/${medical_id}`, data);\r\n}\r\nexport function regisLabs(data) {\r\n  return axios.post(`/api/v1/labs`, data);\r\n}\r\nexport function typeScreening(id) {\r\n  return axios.get(`/api/v1/formkind/${id}`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport {\r\n  listScreening,\r\n  getLabsById,\r\n  updateLabsById,\r\n  regisLabs,\r\n  typeScreening,\r\n} from \"./_redux/CrudScreening\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListScreeningPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [dataTemp, setDataTemp] = useState({});\r\n  const [initialValues, setInitialValues] = useState({});\r\n  const [loadingRegis, setLoadingRegis] = useState(false);\r\n  const [dialogLab, setDialogLab] = useState(false);\r\n  const [dialogTypeScreening, setDialogTypeScreening] = useState(false);\r\n  const [dataTypeScreening, setDataTypeScreening] = useState([]);\r\n  const [dataTypeScreening_, setDataTypeScreening_] = useState({});\r\n  const suhbeader = useSubheader();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/registry/screening/list\",\r\n        title: intl.formatMessage({ id: \"LABEL.SCREENING_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.SCREENING_LIST\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    hb: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    hbsag: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    hiv: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    sifilis: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    asam_urat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kolesterol: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    gol_dar: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    pp_test: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    protein_urine: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ph: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    glukosa: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      var data = values;\r\n      data.medical_id = dataTemp.medical_id;\r\n      setLoadingRegis(true);\r\n      if (dataTemp.lab_id) {\r\n        updateLabsById(dataTemp.medical_id, data)\r\n          .then((result) => {\r\n            callApiListNotCome();\r\n            setLoadingRegis(false);\r\n            setInitialValues({});\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n            setDialogLab(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingRegis(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      } else {\r\n        regisLabs(data)\r\n          .then((result) => {\r\n            callApiListNotCome();\r\n            setLoadingRegis(false);\r\n            setInitialValues({});\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n            setDialogLab(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingRegis(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      }\r\n      console.log(\"values\", values);\r\n    },\r\n  });\r\n\r\n  const callApiListNotCome = () => {\r\n    setLoading(true);\r\n    listScreening()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListNotCome, []);\r\n\r\n  const callApiLabs = () => {\r\n    if (dataTemp.lab_id) {\r\n      getLabsById(dataTemp.medical_id)\r\n        .then((result) => {\r\n          var data = {\r\n            hb: result.data.data.hb,\r\n            hbsag: result.data.data.hbsag,\r\n            hiv: result.data.data.hiv,\r\n            sifilis: result.data.data.sifilis,\r\n            asam_urat: result.data.data.asam_urat,\r\n            kolesterol: result.data.data.kolesterol,\r\n            gol_dar: result.data.data.gol_dar,\r\n            pp_test: result.data.data.pp_test,\r\n            protein_urine: result.data.data.protein_urine,\r\n            ph: result.data.data.ph,\r\n            glukosa: result.data.data.glukosa,\r\n          };\r\n          formik.setValues(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(callApiLabs, [dataTemp]);\r\n\r\n  function callApiTypeScreening(poli_id) {\r\n    typeScreening(poli_id)\r\n      .then((result) => {\r\n        setDataTypeScreening(result.data.data);\r\n        setDialogTypeScreening(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  }\r\n\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogTypeScreening}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.TYPE_SCREENING\" />\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          {dataTypeScreening.map((item, index) => {\r\n            return (\r\n              <Link\r\n                key={index.toString()}\r\n                className=\"btn btn-primary  w-100 my-2\"\r\n                to={`/registry/screening/patient/${dataTypeScreening_.pasien_id}/${item.id}/${dataTypeScreening_.id}`}\r\n              >\r\n                {item.kind_nm}\r\n              </Link>\r\n            );\r\n          })}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setDialogTypeScreening(false);\r\n            }}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            <FormattedMessage id=\"LABEL.CANCEL\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogLab}\r\n        // keepMounted\r\n        maxWidth=\"lg\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.LAB_RESULT\" />\r\n        </DialogTitle>\r\n        <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n          <DialogContent>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_CODE\" />\r\n                  </label>\r\n                  <div className=\"col-sm-9\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataTemp?.kode_pasien}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_NAME\" />\r\n                  </label>\r\n                  <div className=\"col-sm-9\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataTemp?.nama}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-3 col-form-label\">\r\n                    <FormattedMessage id=\"LABEL.POLI\" />\r\n                  </label>\r\n                  <div className=\"col-sm-9\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataTemp?.poli}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Hemoglobin (HB)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"hb\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"hbsag\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Human Immunodeficiency Virus (HIV)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"hiv\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Raja Singa (Sifilis)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"sifilis\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Asam Urat</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"asam_urat\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Kolestrol</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"kolesterol\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Gelongan Darah</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"gol_dar\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Plano Test (PP Test)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"pp_test\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Protein Urine</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"protein_urine\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>PH</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"ph\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label>Gula Darah (Glucose)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    disabled={loadingRegis}\r\n                    {...formik.getFieldProps(\"glukosa\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogLab(false);\r\n                formik.resetForm();\r\n              }}\r\n              className=\"btn btn-danger\"\r\n              disabled={loadingRegis}\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              {loadingRegis ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingRegis ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell className=\"text-uppercase\">\r\n                    {item.statusName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {item.status === \"1\" && (\r\n                      <button\r\n                        className=\"btn btn-warning\"\r\n                        onClick={async () => {\r\n                          callApiTypeScreening(item.poli_id);\r\n                          setDataTypeScreening_(item);\r\n                        }}\r\n                      >\r\n                        <FormattedMessage id=\"LABEL.SCREENING\" />\r\n                      </button>\r\n                    )}\r\n                    {(item.status === \"4\" ||\r\n                      item.status === \"5\" ||\r\n                      item.status === \"6\") && (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => {\r\n                          setDataTemp(item);\r\n                          setDialogLab(true);\r\n                          if (item.lab_id) {\r\n                            callApiLabs();\r\n                          }\r\n                        }}\r\n                      >\r\n                        {item.lab_id ? (\r\n                          <i className=\"fas fa-edit pr-2\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-pen pr-2\"></i>\r\n                        )}\r\n                        <FormattedMessage id=\"LABEL.LAB_RESULT\" />\r\n                      </button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListScreeningPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n  CardHeaderTitle,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport {\r\n  regisScreeningData,\r\n  getScreeningData,\r\n  getReservationById,\r\n} from \"./_redux/CrudScreening\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { publish, callDoctor } from \"../../../redux/MqttOptions\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst screeningItem = [\r\n  {\r\n    label: \"Anamnesa\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Pemeriksaan Fisik\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Pemeriksaan Penunjang\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Diagnosa\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Penata Laksanaan\",\r\n    item: [],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n}));\r\n\r\nfunction ScreeningPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  const [dataCheckIn, setDataCheckIn] = useState({});\r\n  const [dataScreeningLoading, setDataScreeningLoading] = useState(false);\r\n  const [dataScreening, setDataScreening] = useState(screeningItem);\r\n  const [dataScreeningErr, setDataScreeningErr] = useState(false);\r\n  const patient_id = props.match.params.patient_id;\r\n  const poli = props.match.params.poli;\r\n  const reservasi_id = props.match.params.reservasi_id;\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/registry/screening/list\",\r\n        title: intl.formatMessage({ id: \"LABEL.SCREENING_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/screening/patient/${patient_id}/${poli}/${reservasi_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_SCREENING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_SCREENING\" }));\r\n  }, []);\r\n\r\n  const saveScreening = (e) => {\r\n    e.preventDefault();\r\n    setDataScreeningLoading(true);\r\n    var screenitems = [];\r\n    var screenitems_ = [\r\n      ...dataScreening[0].item,\r\n      ...dataScreening[1].item,\r\n      ...dataScreening[2].item,\r\n      ...dataScreening[3].item,\r\n      ...dataScreening[4].item,\r\n    ];\r\n    for (let i = 0; i < screenitems_.length; i++) {\r\n      var val_desc = document.getElementById(\r\n        (screenitems_[i].nama + screenitems_[i].id)\r\n          .match(/[a-zA-Z0-9]+/g)\r\n          .join(\"\")\r\n      ).value;\r\n      var item = {\r\n        medkind_id: screenitems_[i].medkind_id,\r\n        medform_id: screenitems_[i].medform_id,\r\n        val_desc,\r\n      };\r\n      if (val_desc.trim().length != 0) screenitems.push(item);\r\n    }\r\n    var dataReq = {\r\n      reservasi_id,\r\n      screenitems,\r\n      formkind_id: poli,\r\n    };\r\n    regisScreeningData(dataReq)\r\n      .then((result) => {\r\n        setDataScreeningLoading(false);\r\n        setDataScreening(screeningItem);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\",\r\n          3000\r\n        );\r\n        mqttPublish();\r\n        props.history.goBack();\r\n      })\r\n      .catch((err) => {\r\n        setDataScreeningLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      const { topicCallDoctor, qosCallDoctor, payloadCallDoctor } = callDoctor;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n      client.publish(\r\n        topicCallDoctor,\r\n        payloadCallDoctor,\r\n        { qosCallDoctor },\r\n        (error) => {\r\n          if (error) {\r\n            console.log(\"Publish error: \", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const callApiGetScreeningData = () => {\r\n    setDataScreeningErr(false);\r\n    setDataScreeningLoading(true);\r\n    setDataScreening(screeningItem);\r\n    getScreeningData(poli)\r\n      .then((result) => {\r\n        setDataScreeningLoading(false);\r\n        var data = cloneDeep(dataScreening);\r\n        var items = result.data.data;\r\n        data[0].item = items.filter((item) => item.group_id === 1);\r\n        data[1].item = items.filter((item) => item.group_id === 2);\r\n        data[2].item = items.filter((item) => item.group_id === 3);\r\n        data[3].item = items.filter((item) => item.group_id === 4);\r\n        data[4].item = items.filter((item) => item.group_id === 5);\r\n        setDataScreening(data);\r\n      })\r\n      .catch((err) => {\r\n        setDataScreeningErr(true);\r\n        setDataScreeningLoading(false);\r\n        MODAL.showSnackbar(err.response.data.messages);\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetScreeningData, []);\r\n\r\n  const callApiGetPasienById = () => {\r\n    getReservationById(reservasi_id)\r\n      .then((result) => {\r\n        setDataCheckIn(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(err.response.data.messages);\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetPasienById, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"card-title\">\r\n            <CardHeaderTitle>\r\n              <FormattedMessage id=\"LABEL.SCREENING\" />\r\n            </CardHeaderTitle>\r\n            {dataScreeningLoading && (\r\n              <span className=\"text-danger\">\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              </span>\r\n            )}\r\n          </div>\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                props.history.goBack();\r\n              }}\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`btn btn-primary mx-1 ${\r\n                dataScreeningErr ? \"d-none\" : \"\"\r\n              }`}\r\n              disabled={dataScreeningLoading}\r\n              onClick={saveScreening}\r\n            >\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n              <i className=\"fas fa-save ml-2\"></i>\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form autoComplete=\"off\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_CODE\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataCheckIn.kode_pasien}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.PATIENT_NAME\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataCheckIn.nama}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.POLI\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={dataCheckIn.poli}\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                  <label className=\"col-sm-4\">\r\n                    <FormattedMessage id=\"LABEL.DATE_OF_VISIT\" />\r\n                  </label>\r\n                  <div className=\"col-sm-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={\r\n                        dataCheckIn.tgl_book\r\n                          ? window\r\n                              .moment(new Date(dataCheckIn.tgl_book))\r\n                              .format(\"DD MMM YYYY\")\r\n                          : \"\"\r\n                      }\r\n                      onChange={() => {}}\r\n                      disabled={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-12\">\r\n                <h6>\r\n                  <FormattedMessage id=\"LABEL.PATIENT_SCREENING\" />\r\n                </h6>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {dataScreening.map((item, index) => {\r\n                return (\r\n                  <ExpansionPanel\r\n                    defaultExpanded={true}\r\n                    key={index.toString()}\r\n                    className=\"my-5 rounded-top w-100\"\r\n                  >\r\n                    <ExpansionPanelSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1c-content\"\r\n                      id=\"panel1c-header\"\r\n                    >\r\n                      {item.label}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails className={classes.details}>\r\n                      <div className=\"row w-100\">\r\n                        {item.item.map((value, idx) => {\r\n                          return (\r\n                            <div key={idx.toString()} className=\"col-sm-4\">\r\n                              <div className=\"form-group\">\r\n                                <label>{value.nama}</label>\r\n                                {value.datatype === 1 ||\r\n                                value.datatype === 2 ||\r\n                                value.datatype === 3 ||\r\n                                value.datatype === 4 ? (\r\n                                  <input\r\n                                    type={\r\n                                      value.datatype === 1\r\n                                        ? \"text\"\r\n                                        : value.datatype === 2 ||\r\n                                          value.datatype === 3\r\n                                        ? \"number\"\r\n                                        : \"date\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    id={(value.nama + value.id)\r\n                                      .match(/[a-zA-Z0-9]+/g)\r\n                                      .join(\"\")}\r\n                                    disabled={\r\n                                      dataScreeningLoading ||\r\n                                      value.dokter_only === 2\r\n                                    }\r\n                                  />\r\n                                ) : (\r\n                                  <textarea\r\n                                    rows=\"3\"\r\n                                    id={(value.nama + value.id)\r\n                                      .match(/[a-zA-Z0-9]+/g)\r\n                                      .join(\"\")}\r\n                                    className=\"form-control\"\r\n                                    disabled={\r\n                                      dataScreeningLoading ||\r\n                                      value.dokter_only === 2\r\n                                    }\r\n                                  ></textarea>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </ExpansionPanelDetails>\r\n                    <Divider />\r\n                  </ExpansionPanel>\r\n                );\r\n              })}\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ScreeningPatientPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListScreeningPage from \"./ListScreeningPage\";\r\nimport ScreeningPatientPage from \"./ScreeningPatientPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootScreening(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/registry/screening\"\r\n        to=\"/registry/screening/list\"\r\n      />\r\n      <Route\r\n        path=\"/registry/screening/list\"\r\n        component={(props) => <ListScreeningPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/screening/patient/:patient_id/:poli/:reservasi_id\"\r\n        component={(props) => <ScreeningPatientPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootScreening));\r\n"],"sourceRoot":""}