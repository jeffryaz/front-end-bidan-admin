{"version":3,"sources":["app/components/tableCustomV1/table.js","app/components/buttonAction/ButtonAction.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/components/dualListbox/dualListBoxs.js","app/modules/Administrator/ScreeningSetting/ListScreeningSetting.js","app/modules/Administrator/ScreeningSetting/RootScreeningSetting.js"],"names":["rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","type","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","handleClose","Fragment","id","className","map","item","index","key","toString","onClick","title","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","width","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","Boolean","handleClick","currentTarget","handleChange","listUsed","placement","aria-label","aria-controls","aria-haspopup","margin","padding","marginLeft","el","includes","to","url","icon","primary","disabled","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","activePoli","put","inactivePoli","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","editMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","createTakaran","editTakaran","deleteTakaran","getTakaran","option","useStyles","makeStyles","dualListboxPadding","select","handleSelected","selected","setSelected","classes","allowDuplicates","canFilter","filterPlaceholder","simpleValue","onChange","selection","showHeaderLabels","icons","moveLeft","moveAllLeft","moveRight","moveAllRight","moveDown","moveUp","moveTop","moveBottom","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","optionParameterPoli","setOptionParameterPoli","selectedParameterPoli","setSelectedParameterPoli","dialog","setDialog","paramTable","setParamTable","statusDialog","setStatusDialog","dialogMedical","setDialogMedical","optionPoli","setOptionPoli","selectPoli","setSelectPoli","selectPoli__","setSelectPoli__","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","poli_id","required","kind_nm","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","then","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","statusIndex","findIndex","setFieldValue","setFieldTouched","selectPoli_","resultGetMedicalFormById","forEach","element","nama","push","poli","optionPoli_","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","minHeight","isDisabled","classNamePrefix","errors","getFieldProps","touched","DialogActions","isValid","formkind_id","medkind_id","dokter_only","items","item_","medform_id","TableRow","TableCell","window","updated_at","path","exact"],"mappings":"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","file":"static/js/23.a411a969.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poliall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function activePoli(id) {\r\n  return axios.put(`/api/v1/poli/enable/${id}`);\r\n}\r\nexport function inactivePoli(id) {\r\n  return axios.put(`/api/v1/poli/disable/${id}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function editMedicalKind(id, data) {\r\n  return axios.put(`/api/v1/medicalkind/${id}`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\nexport function createTakaran(data) {\r\n  return axios.post(`/api/v1/takaran`, data);\r\n}\r\nexport function editTakaran(id, data) {\r\n  return axios.put(`/api/v1/takaran/${id}`, data);\r\n}\r\nexport function deleteTakaran(id) {\r\n  return axios.delete(`/api/v1/takaran/${id}`);\r\n}\r\nexport function getTakaran() {\r\n  return axios.get(`/api/v1/takaran`);\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport DualListBox from \"react-dual-listbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./styles.scss\";\r\n\r\nconst option = [\r\n  { value: \"contoh_1\", label: \"Option 1\" },\r\n  { value: \"contoh_2\", label: \"Option 2\" },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dualListboxPadding: {\r\n    padding: \"10px\",\r\n  },\r\n}));\r\n\r\nconst DualListBoxs = (props) => {\r\n  const {\r\n    intl,\r\n    disabled = false,\r\n    options = option,\r\n    select = [],\r\n    handleSelected,\r\n  } = props;\r\n  const [selected, setSelected] = React.useState(select);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.dualListboxPadding}>\r\n        <DualListBox\r\n          allowDuplicates={false}\r\n          canFilter\r\n          filterPlaceholder={intl.formatMessage({\r\n            id: \"LABEL.SEARCH\",\r\n          })}\r\n          simpleValue={false}\r\n          disabled={disabled}\r\n          options={options}\r\n          selected={selected}\r\n          onChange={(selected, selection) => {\r\n            if (typeof handleSelected === \"function\")\r\n              handleSelected(selected, selection);\r\n            setSelected(selected);\r\n          }}\r\n          showHeaderLabels={true}\r\n          icons={{\r\n            moveLeft: <span className=\"fa fa-chevron-left\" />,\r\n            moveAllLeft: [\r\n              <span key={0} className=\"fa fa-chevron-left\" />,\r\n              <span key={1} className=\"fa fa-chevron-left\" />,\r\n            ],\r\n            moveRight: <span className=\"fa fa-chevron-right\" />,\r\n            moveAllRight: [\r\n              <span key={0} className=\"fa fa-chevron-right\" />,\r\n              <span key={1} className=\"fa fa-chevron-right\" />,\r\n            ],\r\n            moveDown: <span className=\"fa fa-chevron-down\" />,\r\n            moveUp: <span className=\"fa fa-chevron-up\" />,\r\n            moveTop: <span className=\"fa fa-double-angle-up\" />,\r\n            moveBottom: <span className=\"fa fa-double-angle-down\" />,\r\n          }}\r\n        />\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(DualListBoxs));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  ListScreeningSettingPagination,\r\n  craeteScreeningSetting,\r\n  listAllPoli,\r\n  editScreeningSetting,\r\n  getScreeningSettingById,\r\n  createMedicalForm,\r\n  getMedicalFormById,\r\n  deleteMedicalFormById,\r\n  ListMedKindPagination,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\nimport DualListBoxs from \"../../../components/dualListbox/dualListBoxs\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TYPE_SCREENING\",\r\n    name: \"kind_nm\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.SCREENING_SECTION\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.EDIT\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n  {\r\n    label: \"LABEL.SCREENING_FORM\",\r\n    icon: \"fas fa-bong text-primary\",\r\n    type: \"add\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListScreeningSetting(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [optionParameterPoli, setOptionParameterPoli] = useState([]);\r\n  const [selectedParameterPoli, setSelectedParameterPoli] = useState({});\r\n  const [dialog, setDialog] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n  const [dialogMedical, setDialogMedical] = useState(false);\r\n  const [optionPoli, setOptionPoli] = useState([]);\r\n  const [selectPoli, setSelectPoli] = useState([]);\r\n  const [selectPoli__, setSelectPoli__] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/screening-setting`,\r\n        title: intl.formatMessage({ id: \"LABEL.SCREENING_SETTING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.SCREENING_SETTING\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    poli_id: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kind_nm: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        craeteScreeningSetting(values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editScreeningSetting(statusDialog, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    ListScreeningSettingPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  async function handleAction(type, data) {\r\n    if (type === \"open\") {\r\n      setStatusDialog(data.id);\r\n      getScreeningSettingById(data.id)\r\n        .then((result) => {\r\n          var statusIndex = optionParameterPoli.findIndex(\r\n            (item) => item.value === result.data.data.poli_id\r\n          );\r\n          setSelectedParameterPoli(optionParameterPoli[statusIndex]);\r\n          formik.setFieldValue(\"poli_id\", result.data.data.poli_id);\r\n          formik.setFieldValue(\"kind_nm\", result.data.data.kind_nm);\r\n          formik.setFieldTouched({ ...formik, poli_id: true });\r\n          setDialog(true);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (type === \"add\") {\r\n      setStatusDialog(data.id);\r\n      try {\r\n        var selectPoli_ = [];\r\n        var resultGetMedicalFormById = await getMedicalFormById(data.id);\r\n        resultGetMedicalFormById.data.data.forEach((element) => {\r\n          var item = {\r\n            value: element.id,\r\n            label: element.nama,\r\n            title: element.nama,\r\n          };\r\n          selectPoli_.push(item);\r\n        });\r\n        setSelectPoli__(resultGetMedicalFormById.data.data);\r\n        setSelectPoli(selectPoli_);\r\n        setDialogMedical(true);\r\n      } catch (error) {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      }\r\n    }\r\n  }\r\n\r\n  const callApiListPoli = () => {\r\n    listAllPoli()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.poli;\r\n        });\r\n        setOptionParameterPoli(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListPoli, []);\r\n\r\n  const callApiListMedKind = () => {\r\n    ListMedKindPagination()\r\n      .then((result) => {\r\n        var optionPoli_ = [];\r\n        result.data.data.forEach((element) => {\r\n          var item = {\r\n            value: element.id,\r\n            label: element.nama,\r\n            title: element.nama,\r\n          };\r\n          optionPoli_.push(item);\r\n        });\r\n        setOptionPoli(optionPoli_);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedKind, []);\r\n\r\n  const saveMedicalForm = (selected, selection) => {\r\n    if (selection && selection.length > 0) {\r\n      selection.forEach((element) => {\r\n        var item = {\r\n          formkind_id: statusDialog,\r\n          medkind_id: element.value,\r\n          dokter_only: 1,\r\n        };\r\n        var checkIndex = selected.findIndex(\r\n          (items) => items.value === element.value\r\n        );\r\n        if (checkIndex !== -1) {\r\n          createMedicalForm(item).catch((err) => {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n        } else {\r\n          var data = selectPoli__.filter((item_) => item_.id === element.value);\r\n          deleteMedicalFormById(data[0].medform_id).catch((err) => {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div style={{ minHeight: \"20rem\" }}>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-5 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.SCREENING_SECTION\" />\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"col-sm-7\">\r\n                  <Select\r\n                    value={selectedParameterPoli}\r\n                    options={optionParameterPoli}\r\n                    isDisabled={loadingSave}\r\n                    className=\"form-control border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameterPoli(value);\r\n                      formik.setFieldValue(\"poli_id\", value.value);\r\n                    }}\r\n                  />\r\n                  {formik.errors.poli_id && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.poli_id}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-5 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.TYPE_SCREENING\" />\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"col-sm-7\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    disabled={loadingSave}\r\n                    required\r\n                    {...formik.getFieldProps(\"kind_nm\")}\r\n                  />\r\n                  {formik.touched.kind_nm && formik.errors.kind_nm && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.kind_nm}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={!formik.isValid || loadingSave}\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                setSelectedParameterPoli({});\r\n                formik.resetForm();\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={dialogMedical}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>list</DialogTitle>\r\n        <DialogContent>\r\n          <DualListBoxs\r\n            options={optionPoli}\r\n            select={selectPoli}\r\n            handleSelected={saveMedicalForm}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={() => {\r\n              setDialogMedical(false);\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={5}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.kind_nm}</TableCell>\r\n                  <TableCell>{item?.poli.poli}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListScreeningSetting));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListScreeningSetting from \"./ListScreeningSetting\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootScreeningSetting(props) {\r\n  return (\r\n    <Switch>\r\n      {/* <Redirect\r\n        exact\r\n        from=\"/administrator/doctor-page\"\r\n        to=\"/administrator/dashboard\"\r\n      /> */}\r\n      <Route\r\n        path=\"/administrator/screening-setting\"\r\n        component={(props) => <ListScreeningSetting {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootScreeningSetting));\r\n"],"sourceRoot":""}