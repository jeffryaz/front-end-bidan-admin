{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/tableOnly.js","app/components/tableCustomV1/table.js","app/components/currency.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","item","index","toString","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","Number","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","headerTable","data_ops","setLoading","setData","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","push","created_at","moment","Date","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","i","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","onChange","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","SwitchBase","root","concat","capitalize","checked","palette","text","secondary","colorPrimary","main","action","hoverOpacity","colorSecondary","optionParameter","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","console","log","setScreeningPatient","setMedicinePatient","callApiSaveMedicalRecord","forEach","element","barang_id","screenitems","trim","treatment_kind","detail_resep","put","saveMedicalRecord","callApiSubmitMedicalRecord","submitMedicalRecord","isDisabled","classNamePrefix","updated_at","upd_user","splice","topic","publish","qos","payload","error","mqttPublish","cancelMedicalRecord","MedicalRecord","TableRow","TableCell","kode_pasien","tgl_book","setErr","dataChecked","setDataChecked","listMedicinePagination","Checkbox","barcode","unit","exact","from","path"],"mappings":"iSAcMA,EAAgBC,aAAW,SAACC,GAAD,MAAY,CAC3CC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,SAAU,WACVC,UAAW,cAJON,CAMlBO,KAEW,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,IAGC,IAFDC,aAEC,MAFO,KAEP,MADDC,eACC,MADS,GACT,EACD,EAAgCC,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GACrB,SAASI,EAAYC,GACnBJ,EAAYI,EAAMC,eAEpB,SAASC,IACPN,EAAY,MAEd,IAAMO,EAAeV,IAAMW,aACzB,SAACC,EAAMjB,GACuB,oBAAjBC,GAA6BA,EAAagB,EAAMjB,GAC3Dc,MAEF,CAACb,EAAca,IAGbI,EAAWhB,EAEf,OACE,6BACGC,EACC,kBAACb,EAAD,CACE6B,MAAO,kBAAC,IAAD,CAAkBC,GAAIjB,IAC7BkB,UAAU,UAEV,kBAAC,IAAD,CACEC,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASd,GAET,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CACEW,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASd,EACTe,MAAO,CACLC,OAAQ,WACRC,QAAS,IAGX,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CACER,GAAG,YACHb,SAAUA,EACVsB,aAAW,EACXpB,KAAMA,EACNqB,QAAShB,EACTiB,WAAY,CACVL,MAAO,CACLM,MAAO,IACPC,YAAa,MAIhBf,EACEgB,QAAO,SAACC,GAAD,OAAS/B,EAAQgC,SAASD,EAAGlB,SACpCoB,KAAI,SAACF,EAAIf,GACI,IAAD,IAAX,OAAIe,EAAGG,GAEH,kBAAC,IAAD,CAAMC,IAAKnB,EAAIkB,GAAE,UAAEH,EAAGG,UAAL,aAAE,EAAOE,IAAKd,MAAK,UAAES,EAAGG,UAAL,aAAE,EAAOZ,OAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGe,UAAWN,EAAGO,QAEnB,kBAAC,IAAD,CACEC,QAAS,kBAAC,IAAD,CAAkBvB,GAAIe,EAAGhC,YAOxC,kBAAC,IAAD,CACEoC,IAAKnB,EACLK,QAAS,kBAAMV,EAAaoB,EAAGlB,KAAMjB,IACrC4C,SAAUT,EAAGS,UAEb,kBAAC,IAAD,KACE,uBAAGH,UAAWN,EAAGO,QAEnB,kBAAC,IAAD,CAAcC,QAAS,kBAAC,IAAD,CAAkBvB,GAAIe,EAAGhC,kB,kCCpHlE,6HAuEe0C,gBAAWC,YAAQ,KAAM,KAAdA,EAzDR,SAACC,GAQbA,EANFC,KADF,MAOID,EALFE,kBAFF,MAEe,GAFf,IAOIF,EAJFG,eAHF,WAOIH,EAHFI,WAJF,SAKEC,EAEEL,EAFFK,SALF,EAOIL,EADFM,aANF,MAMU,EANV,EAQA,OACE,kBAAC,IAAMC,SAAP,KACE,6BACE,kBAAC,IAAD,CAAgBC,UAAWC,KACzB,kBAAC,IAAD,CAAOf,UAAW,SAAWY,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGJ,EAAWZ,KAAI,SAACoB,EAAMC,GACrB,OACE,kBAAC,IAAD,CACEjB,UAAU,4BACVF,IAAKmB,EAAMC,YAEX,8BACE,kBAAC,IAAD,CAAkBvC,GAAIqC,EAAKtC,eAOvC,kBAAC,IAAD,KAAYiC,IAGd,yBAAKX,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZS,GACC,8BACE,uBAAGT,UAAU,2CACb,kBAAC,IAAD,CAAkBrB,GAAG,8BAGxB+B,GACC,0BAAMV,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBrB,GAAG,oC,+MC/B5BwC,G,QAAS,SAACC,GAAD,OAVP,SAACC,EAAaC,EAAUF,GACrC,IAAMG,EAAU,CACdD,WACArC,MAAO,WACPuC,gBAAiB,UAGnB,OAAO,IAAIC,KAAKC,aAAaL,EAAaE,GAASI,OAAOP,GAG1BO,CAAO,QAAS,MAAOP,KAwb1ChB,gBAAWC,YAAQ,KAAM,KAAdA,EAtbX,SAACC,GACd,IACEC,EAQED,EARFC,KADF,EASID,EAPFE,kBAFF,MAEe,GAFf,EAGEoB,EAMEtB,EANFsB,aAHF,EASItB,EALFG,eAJF,WASIH,EAJFI,WALF,SAMEC,EAGEL,EAHFK,SANF,EASIL,EAFFuB,iBAPF,MAOc,EAPd,IASIvB,EADFM,aARF,MAQU,EARV,EAUA,EAAsChD,IAAMC,SAAS,CACnDiE,YAAa,EACbC,KAAM,EACNC,MAAOH,EACPI,YAAa,KAJf,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,EAAgCvE,IAAMC,SAAS,CAC7CuE,KACE5B,EAAWf,QACT,SAAC4C,GAAD,OAAkC,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UACtDC,OAAS,EACPjC,EACGf,QACC,SAAC4C,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UAC7C,GACDJ,KAAKM,QAAQ,MAAO,IACvB,GACNJ,QACE9B,EAAWf,QACT,SAAC4C,GAAD,OAAkC,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UACtDC,OAAS,IACPjC,EAAWf,QACT,SAAC4C,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SAA0C,IAAvBF,EAAMC,MAAME,UAC7C,GAAGF,MAAMC,OAEjB/D,KACEgC,EAAWf,QACT,SAAC4C,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SACW,IAAvBF,EAAMC,MAAME,QACS,OAArBH,EAAMC,MAAM9D,QACdiE,OAAS,EACPjC,EAAWf,QACT,SAAC4C,GAAD,OACyB,IAAvBA,EAAMC,MAAMC,SACW,IAAvBF,EAAMC,MAAME,QACS,OAArBH,EAAMC,MAAM9D,QACd,GAAG8D,MAAM9D,KACX,OAlCR,mBAAOmE,EAAP,KAAiBC,EAAjB,KAoCA,EAAsChF,IAAMC,SAAS,IAArD,mBAAOgF,EAAP,KAAoBC,EAApB,KACA,EAAoClF,IAAMC,SAAS,CAAE4B,OAAQ,GAAIsD,KAAM,KAAvE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCrF,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAqBMmF,EAAoBtF,IAAMW,aAC9B,SAAC4E,EAAmBC,GAClB,IAdqB7F,EAcjB8F,EAAaC,OAAOC,OAAO,GAAIrB,GAC/BsB,EAAcR,EAClBQ,EAAY/D,OAvBU,SAAClC,GACzB,IAAIkG,EAAM,GACV,IAAK,IAAIC,KAAKnG,EACRA,EAAKmG,KAAID,GAAO,UAAYC,EAAI,KAAOnG,EAAKmG,GAAK,KAEvD,OAAOD,EAkBgBE,CACnBR,GAAwCN,GAE1CW,EAAYT,KAlBP,WADgBxF,EAoBnB6F,GAAoCT,GAnBtBP,KAAX,YACS,OAAd7E,EAAKiB,KACDjB,EAAKiB,KACH,MACA,OACFjB,EAAK+E,MACL,MACA,QAcJe,EAAWtB,KAAOsB,EAAWtB,KAAO,EACpCyB,EAAcF,OAAOC,OAAO,GAAIC,EAAaH,GAC7CJ,EAAc,eAAKO,IACnB,IAAII,EACFJ,EAAY/D,OACZ,QACA+D,EAAYzB,KACZ,gBACAyB,EAAYvB,YACZ,SACAuB,EAAYT,KACdnB,EAAagC,KAEf,CAACf,EAAaF,EAAUK,EAAYzC,EAAM2B,IAwE5CtE,IAAMiG,UAAUX,EAAmB,IACnCtF,IAAMiG,WAAU,WACd1B,EAAe,2BAAKD,GAAN,IAAmBF,MAAOH,GAAa,OACpD,CAACA,IAEJ,IAIMxD,EAAc,WAClBN,EAAY,OAGd,OACE,kBAAC,IAAM8C,SAAP,KACE,6BACE,0BAAMlC,GAAG,kBAAkBqB,UAAU,2BACnC,0BAAMA,UAAU,wBACd,kBAAC,IAAD,CAAkBrB,GAAG,wBAEvB,yBAAKqB,UAAU,WACb,yBAAKA,UAAU,IACZQ,EACEf,QAAO,SAAC4C,GAAD,OAAmC,IAAxBA,EAAM5C,OAAO+C,UAC/B5C,KAAI,SAACoB,EAAMC,GACV,OACE,yBACEnB,IAAKmB,EAAMC,WACXlB,UAAU,+BACVuC,OAAO,SACP5D,GAAIsC,GAEJ,yBACEjB,UAAU,6BACV8D,cAAY,WACZC,gBAAc,QACdpF,GAAI,cAAgBsC,EACpBjC,QAAS,WA/B7BjB,EAgCkCkD,KAGd,8BACE,kBAAC,IAAD,CAAkBtC,GAAIqC,EAAKtC,QAD7B,KAGA,4BAAQO,MAAO,CAAE+E,aAAc,EAAGC,YAAa,IAC7C,0BACEjE,UAAU,eACVrB,GAAI,eAAiBsC,GAEC,aAArBD,EAAKvB,OAAOjB,MACbqE,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,KACjCvB,EACE+C,OACErB,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,OAGpB,UAArB1B,EAAKvB,OAAOjB,MACZqE,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,KADrC,cAGEG,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,MAEvCG,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,OAG5CG,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,KAAO,KAC3C,0BAAMzD,MAAO,CAAEkF,MAAO,YACpB,kBAAC,IAAD,CAAkBxF,GAAG,gBAI3B,kBAAC,IAAD,CACEb,SACEsG,SAASC,eAAT,qBAAsCvG,IAClCsG,SAASC,eAAT,qBAAsCvG,IACtC,KAENsB,aAAa,EACbpB,KACE,qBAAciD,KAAd,qBAAwCnD,GAE1CuB,QAAShB,EACTiB,WAAY,CACVL,MAAO,CACLqF,UAAW,sCAIf,yBAAKtE,UAAU,QACb,yBAAKA,UAAU,cACS,aAArBgB,EAAKvB,OAAOjB,KACX,kBAAC,IAAD,CACE6D,MACEQ,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,MACrC,GAEF6B,YAAY,QACZvE,UAAU,eACVoC,KAAMpB,EAAKoB,KAAKM,QAAQ,MAAO,IAC/B/D,GAAIqC,EAAKoB,KAAKM,QAAQ,MAAO,IAC7B8B,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAsB,EACtBC,mBAAmB,EACnBC,OAAQ,MACRC,cAAe,SAACC,OAEK,UAArB9D,EAAKvB,OAAOjB,KACd,kBAAC,IAAD,CACE6D,MACEQ,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,MACrC,GAEF6B,YAAY,QACZvE,UAAU,eACVoC,KAAMpB,EAAKoB,KAAKM,QAAQ,MAAO,IAC/B/D,GAAIqC,EAAKoB,KAAKM,QAAQ,MAAO,IAC7Bf,OAAO,oBACPoD,KAAK,IACLL,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACC,OAGlB,2BACEtG,KAAMwC,EAAKvB,OAAOjB,KAClBwB,UAAU,eACVgF,IAAI,IACJ5C,KAAMpB,EAAKoB,KAAKM,QAAQ,MAAO,IAC/B/D,GAAIqC,EAAKoB,KAAKM,QAAQ,MAAO,IAC7BuC,aACEpC,EAAY7B,EAAKoB,KAAKM,QAAQ,MAAO,MACrC,GAEFwC,YAAa3E,EAAK4E,cAAc,CAC9BxG,GAAI,cAENM,MAAO,CAAEM,MAAO,QAItB,yBAAKS,UAAU,UACb,4BACExB,KAAK,SACLwB,UAAU,yCACVhB,QAAS,YA5KX,SAACoG,EAAU5G,GACnC,IAAI6G,EAAexC,EACnBwC,EAAaD,GAAYhB,SAASC,eAAee,GAAU/C,MAC9C,aAAT7D,EACF6G,EAAaD,GAAYC,EAAaD,GACnC1C,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,KACD,UAATlE,IACT6G,EAAaD,GAAYC,EAAaD,GAAU1C,QAAQ,YAAa,KAEvEI,EAAe,eAAKuC,IACpBnC,IAkK4BoC,CACEtE,EAAKoB,KAAKM,QAAQ,MAAO,IACzB1B,EAAKvB,OAAOjB,MAEdH,MAGF,kBAAC,IAAD,CAAkBM,GAAG,kBAEvB,4BACEH,KAAK,SACLwB,UAAU,+CACVhB,QAAS,YA3KZ,SAACoG,GACxB,IAAIC,EAAexC,EACnBwC,EAAaD,GAAY,GACzBhB,SAASC,eAAee,GAAU/C,MAAQ,GAC1CS,EAAe,eAAKuC,IACpBnC,IAuK4BqC,CAAiBvE,EAAKoB,KAAKM,QAAQ,MAAO,KAC1CrE,MAGF,uBAAG2B,UAAU,mCACb,0BAAMA,UAAU,QACd,kBAAC,IAAD,CAAkBrB,GAAG,sCASvC,4BACEH,KAAK,SACLwB,UAAU,uDACVhB,QAAS,WArLrB8D,EAAe,IACfsB,SAASC,eAAe,mBAAmBmB,QAC3CtC,EAAkB,MAuLN,kBAAC,IAAD,CAAkBvE,GAAG,iCAK7B,6BACE,kBAAC,IAAD,CAAgBmC,UAAWC,KACzB,kBAAC,IAAD,CAAOf,UAAW,SAAWY,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGJ,EAAWZ,KAAI,SAACoB,EAAMC,GACrB,OACE,kBAAC,IAAD,CACEjB,UAAS,qCACH,OAAJgB,QAAI,IAAJA,OAAA,EAAAA,EAAMyE,IAAN,OAAWzE,QAAX,IAAWA,OAAX,EAAWA,EAAMyE,GAAK,IAExB3F,IAAKmB,EAAMC,YAEVF,EAAKsB,MAAME,OACV,kBAAC,IAAD,CACEA,OACEG,EAASP,OAASpB,EAAKoB,KAAKM,QAAQ,MAAO,IAE7CgD,UACoB,OAAlB/C,EAASnE,KACLmE,EAASnE,KACP,MACA,OACFmE,EAASL,MACT,MACA,OAENtD,QAAS,YAjQT,SAACgC,GACzB,IAAI2E,EAAYhD,EACZ3B,EAAKoB,KAAKM,QAAQ,MAAO,MAAQiD,EAAUvD,KAC1B,OAAnBuD,EAAUnH,KACLmH,EAAUnH,MAAQmH,EAAUnH,KAC5BmH,EAAUrD,OAASqD,EAAUrD,OAElCqD,EAAUvD,KAAOpB,EAAKoB,KAAKM,QAAQ,MAAO,IAC1CiD,EAAUrD,OAAQ,EAClBqD,EAAUnH,KAAO,MAEnBoE,EAAY,eACP+C,IAELzC,IAoP0B0C,CAAkB5E,KAGpB,8BACE,kBAAC,IAAD,CAAkBrC,GAAIqC,EAAKtC,UAI/B,8BACE,kBAAC,IAAD,CAAkBC,GAAIqC,EAAKtC,eAQzC,kBAAC,IAAD,KAAYiC,IAGd,yBAAKX,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZS,GACC,8BACE,uBAAGT,UAAU,2CACb,kBAAC,IAAD,CAAkBrB,GAAG,8BAGxB+B,GACC,0BAAMV,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBrB,GAAG,6BAOjC,kBAAC,IAAD,CACEkH,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACpD/E,UAAU,MACVkB,MAAOE,EAAYF,MACnBC,YAAaC,EAAYD,YACzBF,KAAMG,EAAYH,KAClB+D,aAvUe,SAAC3H,EAAO4H,GAC/B,IAAI1C,EAAanB,EACjBmB,EAAWvB,YACTiE,EAAU1C,EAAWtB,KACjBsB,EAAWvB,YAAcuB,EAAWpB,YACpCoB,EAAWvB,YAAcuB,EAAWpB,YAC1CoB,EAAWtB,KAAOgE,EAClB5D,EAAe,eACVkB,IAELH,KA8TQ8C,oBA3TsB,SAAC7H,GAC/B,IAAIkF,EAAanB,EACjBmB,EAAWtB,KAAO,EAClBsB,EAAWpB,YAAcgE,SAAS9H,EAAM+H,OAAO7D,MAAO,IACtDgB,EAAWvB,YAAc,EACzBK,EAAe,eACVkB,IAELH,e,kCCzJJ,sCAAMvB,EAAS,SAACN,EAAaC,EAAUF,GACrC,IAAMG,EAAU,CACdD,WACArC,MAAO,WACPuC,gBAAiB,UAGnB,OAAO,IAAIC,KAAKC,aAAaL,EAAaE,GAASI,OAAOP,IAG/CD,EAAS,SAACC,GAAD,OAAYO,EAAO,QAAS,MAAOP,K,kCCVzD,2YAEO,SAAS+E,EAAsBvC,GACpC,OAAOwC,IAAMC,IAAN,wBAA2BzC,EAAS,IAAMA,EAAS,KAErD,SAAS0C,EAAe3H,GAC7B,OAAOyH,IAAMC,IAAN,yBAA4B1H,IAE9B,SAAS4H,EAAkB5H,EAAIpB,GACpC,OAAO6I,IAAMI,KAAN,6BAAiC7H,GAAMpB,GAEzC,SAASkJ,EAAwBlJ,GACtC,OAAO6I,IAAMI,KAAN,qBAAiCjJ,GAEnC,SAASmJ,IACd,OAAON,IAAMC,IAAN,mBAEF,SAASM,EAASC,GACvB,OAAOR,IAAMC,IAAN,sBAAyBO,IAE3B,SAASC,EAAcD,EAAME,GAClC,OAAOV,IAAMC,IAAN,qBAAwBO,EAAxB,YAAgCE,IAElC,SAASC,EAASH,EAAME,EAAME,GACnC,OAAOZ,IAAMC,IAAN,sBAAyBO,EAAzB,YAAiCE,EAAjC,YAAyCE,IAK3C,SAASC,EAAkBC,GAChC,OAAOd,IAAMC,IAAN,iCAAoCa,IAEtC,SAASC,EAAiBC,GAC/B,OAAOhB,IAAMC,IAAN,0BAA6Be,IAE/B,SAASC,EAAgB1I,GAC9B,OAAOyH,IAAMC,IAAN,uBAA0B1H,M,kJClB7B2I,EAAc,CAClB,CACE5I,MAAO,uBAET,CACEA,MAAO,cAET,CACEA,MAAO,8BAIL6I,EAAW,CACf,CACE7J,MAAO,eACPuC,KAAM,wCACNzB,KAAM,SA4EK4B,gBAAWC,YAAQ,KAAM,KAAdA,EAxE1B,SAAuBC,GACrB,IAAQC,EAASD,EAATC,KACR,EAA8B1C,oBAAS,GAAvC,mBAAgB2J,GAAhB,WACA,EAAwB3J,mBAAS,IAAjC,mBAAON,EAAP,KAAakK,EAAb,KACA,EAAsB5J,oBAAS,GAA/B,mBACMc,GADN,UACW2B,EAAMoH,MAAM9D,OAAOjF,IACxBgJ,EAAarH,EAAMoH,MAAM9D,OAAO+D,WAChCC,EAAkBtH,EAAMoH,MAAM9D,OAAOgE,gBACvCC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,WAAUK,KAehErE,qBAb2B,WACzB2D,GAAW,GACXP,YAAkBtI,GACfwJ,MAAK,SAACC,GACLZ,GAAW,GACXC,EAAQW,EAAO7K,KAAKA,SAErB8K,OAAM,SAAC3H,GACN8G,GAAW,GACXc,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,6BAIpB,IAE9B,IAAMnB,EAAe,SAACgB,EAAMjB,GACqB,kBAA3CiL,OAAOC,SAASC,SAASC,MAAM,KAAK,GACtCrI,EAAMsI,QAAQC,KAAd,WACMhB,EADN,kCACwClJ,EADxC,YAC8CgJ,EAD9C,YAC4DC,EAD5D,iBACoFrK,EAAKoB,KAGzF2B,EAAMsI,QAAQC,KAAd,WAAuBhB,EAAvB,yBAAgDlJ,EAAhD,YAAsDpB,EAAKoB,MAG/D,OACE,kBAAC,IAAMkC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEL,WAAY8G,EACZ7G,SAAS,EAETG,MAAO,IAENrD,EAAKqC,KAAI,SAACoB,EAAMC,GACf,OACE,kBAAC,IAAD,CAAUnB,IAAKmB,EAAMC,YACnB,kBAAC,IAAD,KACGF,EAAK8H,WACFN,OACGO,OAAO,IAAIC,KAAKhI,EAAK8H,aACrBnH,OAAO,eACV,IAEN,kBAAC,IAAD,KAAYX,EAAKiI,MACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1L,KAAMyD,EACNxD,aAAcA,EACdC,IAAK8J,kB,iKCsZZnH,gBAAWC,YAAQ,KAAM,KAAdA,EAze1B,SAA6BC,GAC3B,IAAQC,EAASD,EAATC,KACR,EAA8B1C,oBAAS,GAAvC,mBAAgB2J,GAAhB,WACA,EAAwB3J,mBAAS,IAAjC,mBAAON,EAAP,KAAakK,EAAb,KACA,EAAsB5J,mBAAS,IAA/B,mBAAOqL,EAAP,KAAYC,EAAZ,KACA,EAAsBtL,oBAAS,GAA/B,mBACMuL,GADN,UACkBC,eAClB,EAA0CxL,mBAAS,IAAnD,mBAAOyL,EAAP,KAAsBC,EAAtB,KACM5K,EAAK2B,EAAMoH,MAAM9D,OAAOjF,GACxBiJ,EAAkBtH,EAAMoH,MAAM9D,OAAOgE,gBACrC4B,EAAsBlJ,EAAMoH,MAAM9D,OAAO4F,oBACzC7B,EAAarH,EAAMoH,MAAM9D,OAAO+D,WAClCE,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,WAAUK,KAChE,EAAwCrK,mBAAS,IAAjD,mBAAO4L,EAAP,KAAqBC,EAArB,KAbkC,4CA+ElC,WAAkCC,GAAlC,iBAAAC,EAAA,6DACMrM,EAAOoM,EACPE,EAAU,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAJ,EAAA,sDACfK,EAAI,EADW,YACRA,EAAI1M,EAAKkF,QADD,0CAGD4E,YAAgB9J,EAAK0M,GAAGtL,IAHvB,OAGhByJ,EAHgB,OAIpB7K,EAAK0M,GAAGC,eAAiB9B,EAAO7K,KAAKA,KAAK2M,eAC1C3M,EAAK0M,GAAGE,IAAM5M,EAAK0M,GAAGE,IAAM5M,EAAK0M,GAAGE,IAAM,EACtCF,IAAM1M,EAAKkF,OAAS,GAAGsH,IANP,kDAQpBzB,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,wBACxCsL,IAAM1M,EAAKkF,OAAS,GAAGsH,IATP,QACSE,IADT,yEAAZ,yDAFhB,SAeQJ,EAfR,OAgBEH,EAAgBnM,GAhBlB,4CA/EkC,sBA0GlC,OA3FA6M,2BAAgB,WACiC,kBAA3C5B,OAAOC,SAASC,SAASC,MAAM,KAAK,IACtCS,EAAUiB,eAAe,CACvB,CACE3B,SAAS,oBACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,oBAElC,CACE+J,SAAS,iCAAD,OAAmC/J,EAAnC,YAAyCgJ,EAAzC,YAAuDC,GAC/DlJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,0BAElC,CACE+J,SAAS,iCAAD,OAAmC/J,EAAnC,YAAyCgJ,EAAzC,YAAuDC,EAAvD,SACRlJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,+BAElC,CACE+J,SAAS,iCAAD,OAAmC/J,EAAnC,YAAyCgJ,EAAzC,YAAuDC,EAAvD,iBAA+E4B,GACvF9K,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,kBAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,kBAE5CyK,EAAUiB,eAAe,CACvB,CACE3B,SAAS,IAAD,OAAMb,EAAN,iBACRnJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,wBAElC,CACE+J,SAAS,IAAD,OAAMb,EAAN,yBAA+BlJ,GACvCD,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,mBAElC,CACE+J,SAAS,IAAD,OAAMb,EAAN,yBAA+BlJ,EAA/B,YAAqCiJ,GAC7ClJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,4BAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,6BAE7C,IAwBHkF,qBAtB0B,WACxB2D,GAAW,GACXL,YAC6C,kBAA3CqB,OAAOC,SAASC,SAASC,MAAM,KAAK,GAChCa,EACA5B,GAEHO,MAAK,SAACC,GACLZ,GAAW,GACXC,EAAQW,EAAO7K,KAAKA,KAAKgN,KAAK,IAC9BhB,EAAiBnB,EAAO7K,KAAKA,KAAKiN,QAClCrB,EAAOf,EAAO7K,KAAKA,KAAKkN,KAAOrC,EAAO7K,KAAKA,KAAKkN,KAAO,IAlE3B,oCAmE5BC,CACEtC,EAAO7K,KAAKA,KAAKoN,MAAQvC,EAAO7K,KAAKA,KAAKoN,MAAQ,OAGrDtC,OAAM,SAAC3H,GACN8G,GAAW,GACXc,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,6BAIrB,IA8B3B,kBAAC,IAAMkC,SAAP,KACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,4DAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAd,oBACoBzC,EAAKqN,UAEzB,0BAAM5K,UAAU,cACbzC,EAAKuL,WACFN,OACGO,OAAO,IAAIC,KAAKzL,EAAKuL,aACrBnH,OAAO,eACV,SAOhB,yBAAK3B,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,yDAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAkBzC,EAAKsN,QACrC,0BAAM7K,UAAU,cAAczC,EAAK0L,WAM7C,yBAAKjJ,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,sDAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAkBzC,EAAKuN,QACrC,0BAAM9K,UAAU,cAAczC,EAAK0L,YAO/C,yBAAKjJ,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtB,MAAM,mBAClB,kBAAC,IAAD,KACE,yBAAKsB,UAAU,OACZsJ,EAAc1J,KAAI,SAACoB,EAAMC,GACxB,OACE,yBAAKnB,IAAKmB,EAAMC,WAAYlB,UAAU,YACpC,yBAAKA,UAAU,cACb,+BAAQgB,EAAK+J,YACM,IAAlB/J,EAAKgK,UACY,IAAlBhK,EAAKgK,UACa,IAAlBhK,EAAKgK,UACa,IAAlBhK,EAAKgK,SACH,2BACExM,KACoB,IAAlBwC,EAAKgK,SACD,OACkB,IAAlBhK,EAAKgK,UAAoC,IAAlBhK,EAAKgK,SAC5B,SACA,OAENhL,UAAU,eACVrB,IAAKqC,EAAK+J,WAAa/J,EAAKrC,IACzB+I,MAAM,iBACNuD,KAAK,IACR5I,MAAOrB,EAAKkK,SACZC,SAAU,aACVhL,UAAU,IAGZ,8BACEiL,KAAK,IACLpL,UAAU,eACVrB,IAAKqC,EAAK+J,WAAa/J,EAAKrC,IACzB+I,MAAM,iBACNuD,KAAK,IACR5I,MAAOrB,EAAKkK,SACZC,SAAU,aACVhL,UAAU,cAYhC,yBAAKH,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtB,MAAM,yBAClB,kBAAC,IAAD,KACE,2BAAOsB,UAAU,SACf,+BACE,4BACE,yCACA,oCACA,qCACA,2CAGHyJ,EAAa7J,KAAI,SAACoB,EAAMC,GACvB,OACE,2BAAOnB,IAAKmB,EAAMC,YAChB,4BACE,4BAAKF,EAAKqK,MACV,4BACE,kBAAC,IAAD,CACEhJ,MAAOrB,EAAKmJ,IACZxL,GAAG,oBACH4F,YAAY,OACZvE,UAAU,eACV0E,sBAAsB,EACtBC,mBAAmB,EACnB2G,eAAe,EACfzG,cAAe,SAACC,GACd,IAAIvH,EAAO+F,OAAOC,OAAO,GAAIkG,GACzB8B,EAAMhO,EAAKiO,WACb,SAACnJ,GAAD,OAAWA,EAAM1D,KAAOqC,EAAKrC,MAE/BpB,EAAKgO,GAAKpB,IAAMrF,EAAE2G,WAAa3G,EAAE2G,WAAa,EAC9C/B,EAAgBnM,OAItB,4BAAK4D,YAAOH,EAAK0K,QACjB,4BAAKvK,YAAOH,EAAK0K,MAAQ1K,EAAKmJ,OAsB/BnJ,EAAKkJ,gBACJlJ,EAAKkJ,eAAetK,KAAI,SAACyC,EAAOkJ,GAC9B,OACE,wBACEzL,IAAKyL,EAAIrK,WACTjC,MAAO,CAAE0M,gBAAiB,YAE1B,wBAAI3L,UAAU,SAASqC,EAAMgJ,MAC7B,4BACE,2BACE7M,KAAK,SACLwB,UAAU,eACVqC,MAAOA,EAAM8H,IACbgB,SAAU,aACVhL,UAAQ,KAGZ,4BAAKgB,YAAO,IACZ,4BAAKA,YAAO,YAQ1B,+BACE,4BACE,wBAAIyK,QAAQ,MACZ,gDACA,4BACE,kBAAC,IAAD,CACEvJ,MAAO9E,EAAKsO,KAAO,EACnBlN,GAAG,oBACH4F,YAAY,OACZvE,UAAU,eACV0E,sBAAsB,EACtBC,mBAAmB,EACnBH,mBAAmB,EACnB8G,eAAe,EACf1G,OAAQ,MACRkH,mBAAmB,EACnBC,aAAc,EACdlH,cAAe,SAACC,SAItB,4BACE,wBAAI8G,QAAQ,MACZ,qCACA,4BACGzK,aAAQ5D,EAAKsO,KAAO,GA3OnB,SAACtO,GACrB,IAAIyE,EAAQ,EAIZ,OAHAzE,EAAKqC,KAAI,SAACoB,GACRgB,GAAShB,EAAK0K,MAAQ1K,EAAKmJ,OAEtBnI,EAsOqCgK,CAAcvC,YASxD,yBAAKzJ,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtB,MAAM,SAClB,kBAAC,IAAD,KACE,yBAAKsB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,kDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAK+C,GACZd,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,sEACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKgD,MACZf,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,qEACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKiD,IACZhB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKkD,QACZjB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,4CACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKmD,UACZlB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,4CACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKoD,WACZnB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,iDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKqD,QACZpB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKsD,QACZrB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,gDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKuD,cACZtB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,qCACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKwD,GACZvB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKyD,QACZxB,SAAU,4B,6FCpejB,SAAAyB,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,+FACD,wBCFW,SAAAD,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,wIACD,Y,QCFW,SAAAD,EAAA,GAA4B,gBAAoB,OAAQ,CACrEC,EAAG,kGACD,yB,gBCwDAC,EAAkC,gBAAoBC,EAAc,MACpEC,EAA2B,gBAAoBC,EAA0B,MACzEC,EAAwC,gBAAoBC,EAA2B,MACvF,EAAW,cAAiB,SAAkB7M,EAAO8M,GACvD,IAAIC,EAAqB/M,EAAMgN,YAC3BA,OAAqC,IAAvBD,EAAgCP,EAAqBO,EACnEE,EAAUjN,EAAMiN,QAChBC,EAAelN,EAAM6D,MACrBA,OAAyB,IAAjBqJ,EAA0B,YAAcA,EAChDC,EAAcnN,EAAML,KACpBA,OAAuB,IAAhBwN,EAAyBT,EAAcS,EAC9CC,EAAuBpN,EAAMqN,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAwBtN,EAAMuN,kBAC9BA,OAA8C,IAA1BD,EAAmCV,EAA2BU,EAClFE,EAAaxN,EAAMwN,WACnBC,EAAczN,EAAM0N,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAQ,YAAyB3N,EAAO,CAAC,cAAe,UAAW,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,SAE5I,OAAoB,gBAAoB4N,EAAA,EAAY,YAAS,CAC3D1P,KAAM,WACN+O,QAAS,CACPY,KAAM,YAAKZ,EAAQY,KAAMZ,EAAQ,QAAQa,OAAO,OAAAC,EAAA,GAAWlK,KAAUwJ,GAAiBJ,EAAQI,eAC9FW,QAASf,EAAQe,QACjBnO,SAAUoN,EAAQpN,UAEpBgE,MAAOA,EACP2J,WAAY,YAAS,CACnB,qBAAsBH,GACrBG,GACH7N,KAAM,eAAmB0N,EAAgBE,EAAoB5N,EAAM,CACjE9C,SAAmB,UAAT6Q,EAAmB,QAAU,YAEzCV,YAAa,eAAmBK,EAAgBE,EAAoBP,EAAa,CAC/EnQ,SAAmB,UAAT6Q,EAAmB,QAAU,YAEzCZ,IAAKA,GACJa,OAiGU,WAAAnR,EAAA,IA1LK,SAAgBC,GAClC,MAAO,CAELoR,KAAM,CACJhK,MAAOpH,EAAMwR,QAAQC,KAAKC,WAI5BH,QAAS,GAGTnO,SAAU,GAGVwN,cAAe,GAGfe,aAAc,CACZ,YAAa,CACXvK,MAAOpH,EAAMwR,QAAQrO,QAAQyO,KAC7B,UAAW,CACThD,gBAAiB,YAAK5O,EAAMwR,QAAQrO,QAAQyO,KAAM5R,EAAMwR,QAAQK,OAAOC,cAEvE,uBAAwB,CACtBlD,gBAAiB,iBAIvB,aAAc,CACZxH,MAAOpH,EAAMwR,QAAQK,OAAOzO,WAKhC2O,eAAgB,CACd,YAAa,CACX3K,MAAOpH,EAAMwR,QAAQE,UAAUE,KAC/B,UAAW,CACThD,gBAAiB,YAAK5O,EAAMwR,QAAQE,UAAUE,KAAM5R,EAAMwR,QAAQK,OAAOC,cAEzE,uBAAwB,CACtBlD,gBAAiB,iBAIvB,aAAc,CACZxH,MAAOpH,EAAMwR,QAAQK,OAAOzO,cA4IF,CAChCiC,KAAM,eADO,CAEZ,I,8JC3LI,SAASiF,EAAgB1I,GAC9B,OAAOyH,IAAMC,IAAN,uBAA0B1H,I,sFCY7BoQ,EAAkB,CACtB,CAAE1M,MAAO,IAAK3E,MAAO,cACrB,CAAE2E,MAAO,IAAK3E,MAAO,gBAssBR0C,kBAAWC,YAAQ,KAAM2H,IAAd3H,EAnsB1B,SAA6BC,GAC3B,IAAQC,EAASD,EAATC,KACFqI,EAAUoG,cAChB,EAA8BnR,oBAAS,GAAvC,mBAAgB2J,GAAhB,WACA,EAAsC3J,oBAAS,GAA/C,mBAAOoR,EAAP,KAAoBC,EAApB,KACA,EAA0CrR,oBAAS,GAAnD,mBAAOsR,EAAP,KAAsBC,EAAtB,KACA,EAAwBvR,mBAAS,IAAjC,mBAAON,EAAP,KAAakK,EAAb,KACA,EAAsB5J,mBAAS,IAA/B,mBAAOqL,EAAP,KAAYC,EAAZ,KACA,EAAsBtL,oBAAS,GAA/B,mBACMuL,GADN,UACkBC,eAClB,EAA0CxL,mBAAS,IAAnD,mBAAOyL,EAAP,KAAsBC,EAAtB,KACA,EAAwC1L,mBAAS,IAAjD,mBAAO4L,EAAP,KAAqBC,EAArB,KACA,EAAsC7L,mBAAS,GAA/C,mBAAOwR,GAAP,KAAoBC,GAApB,KACM3Q,GAAK2B,EAAMoH,MAAM9D,OAAOjF,GACxBgJ,GAAarH,EAAMoH,MAAM9D,OAAO+D,WAChCC,GAAkBtH,EAAMoH,MAAM9D,OAAOgE,gBAC3C,GAA4CE,aAC1C,SAACC,GAAD,OAAWA,EAAMC,OACjBE,KAFIqH,GAAN,GAAMA,gBAAiBC,GAAvB,GAAuBA,iBAIjBC,GAAS3H,aACb,qBAAG4H,WAA4BD,SAC/BvH,KAEF,GAAkDrK,mBAAS,CACzDwE,MAAO,IACP3E,MAAO,gBAFT,qBAAOiS,GAAP,MAA0BC,GAA1B,MAxBkC,8CAoFlC,WAAkCjG,GAAlC,iBAAAC,EAAA,2DACMD,GAAuBA,EAAoBlH,OAAS,GAD1D,uBAEQlF,EAAOoM,EACPE,EAAU,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAJ,EAAA,sDACfK,EAAI,EADW,YACRA,EAAI1M,EAAKkF,QADD,0CAGD4E,EAAgB9J,EAAK0M,GAAGtL,IAHvB,OAGhByJ,EAHgB,OAIpB7K,EAAK0M,GAAGC,eAAiB9B,EAAO7K,KAAKA,KAAK2M,eAC1C3M,EAAK0M,GAAGE,IAAM5M,EAAK0M,GAAGE,IAAM5M,EAAK0M,GAAGE,IAAM,EACtCF,IAAM1M,EAAKkF,OAAS,GAAGsH,IANP,kDAQpBzB,IAAMC,aACJhI,EAAK4E,cAAc,CAAExG,GAAI,wBAEvBsL,IAAM1M,EAAKkF,OAAS,GAAGsH,IAXP,QACSE,IADT,yEAAZ,yDAHlB,SAkBUJ,EAlBV,OAmBIH,EAAgBnM,GAnBpB,4CApFkC,sBA6BlC6M,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACE3B,SAAS,oBACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,oBAElC,CACE+J,SAAS,gCACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,4BAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,4BAC3C,IAyCHkF,qBAvC0B,WDnErB,IAA0BuD,ECoE7BI,GAAW,IDpEkBJ,ECqEZQ,GDpEZxB,IAAMC,IAAN,0BAA6Be,KCqE/Be,MAAK,SAACC,GACLZ,GAAW,GACXC,EAAQW,EAAO7K,KAAKA,KAAKgN,KAAK,IAC9B+E,GAAelH,EAAO7K,KAAKA,KAAKgN,KAAK,GAAGsB,KAAO,GAC/CgE,QAAQC,IAAI,SAAU1H,GAEnBoH,IAAgD,IAA5BA,GAAiB/M,SACrC+M,IAEDlP,EAAMyP,oBACJ3H,EAAO7K,KAAKA,KAAKiN,OAASpC,EAAO7K,KAAKA,KAAKiN,OAAS,IAEtDjB,EAAiBnB,EAAO7K,KAAKA,KAAKiN,SAElCjB,EAAiBiG,IAEnBrG,EAAOf,EAAO7K,KAAKA,KAAKkN,KAAOrC,EAAO7K,KAAKA,KAAKkN,KAAO,KAEpD8E,IAA8C,IAA3BA,GAAgB9M,SACnC8M,MAGDjP,EAAM0P,mBACJ5H,EAAO7K,KAAKA,KAAKoN,MAAQvC,EAAO7K,KAAKA,KAAKoN,MAAQ,IArE1B,qCAuE1BD,CACEtC,EAAO7K,KAAKA,KAAKoN,MAAQvC,EAAO7K,KAAKA,KAAKoN,MAAQ,QAIvDtC,OAAM,SAAC3H,GACN8G,GAAW,GACXc,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,6BAIrB,IAyB7BkF,qBAAU,WAAM,4CACd,8BAAA+F,EAAA,2DACM2F,IAAmBA,GAAgB9M,OAAS,GADlD,uBAEQlF,EAAOgS,GACP1F,EAAU,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAJ,EAAA,sDACfK,EAAI,EADW,YACRA,EAAI1M,EAAKkF,QADD,0CAGD4E,EAAgB9J,EAAK0M,GAAGtL,IAHvB,OAGhByJ,EAHgB,OAIpB7K,EAAK0M,GAAGC,eAAiB9B,EAAO7K,KAAKA,KAAK2M,eAC1C3M,EAAK0M,GAAGE,IAAM5M,EAAK0M,GAAGE,IAAM5M,EAAK0M,GAAGE,IAAM,EACtCF,IAAM1M,EAAKkF,OAAS,GAAGsH,IANP,kDAQpBzB,IAAMC,aACJhI,EAAK4E,cAAc,CAAExG,GAAI,wBAEvBsL,IAAM1M,EAAKkF,OAAS,GAAGsH,IAXP,QACSE,IADT,yEAAZ,yDAHlB,SAkBUJ,EAlBV,OAmBIH,EAAgBnM,GAnBpB,4CADc,uBAAC,WAAD,wBAuBdmN,KACC,IAEH,IAmBMuF,GAA2B,WAC/Bf,GAAe,GACfzF,EAAayG,SAAQ,SAACC,GAAD,OAAcA,EAAQC,UAAYD,EAAQxR,MAE/D,IADA,IAAI0R,EAAc,GACTpG,EAAI,EAAGA,EAAIX,EAAc7G,OAAQwH,IAEtCX,EAAcW,GAAGiB,UACqC,GAAtD5B,EAAcW,GAAGiB,SAAShK,WAAWoP,OAAO7N,QAE5C4N,EAAYxH,KAAKS,EAAcW,IAEnC,IAAI1M,EAAO,CACTgT,eAAgBZ,GAAkBtN,MAClCgO,cACAG,aAAc/G,EACdoC,IAAKwD,KDnLJ,SAA2BjI,EAAY7J,GAC5C,OAAO6I,IAAMqK,IAAN,8BAAiCrJ,GAAc7J,ICoLpDmT,CAAkB9I,GAAiBrK,GAChC4K,MAAK,SAACC,GACL8G,GAAe,GACf5G,IAAMC,aACJhI,EAAK4E,cAAc,CAAExG,GAAI,8BACzB,cAGH0J,OAAM,SAAC3H,GACNwO,GAAe,GACf5G,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,4BAI5CgS,GAA6B,WACjCvB,GAAiB,GACjB3F,EAAayG,SAAQ,SAACC,GAAD,OAAcA,EAAQC,UAAYD,EAAQxR,MAE/D,IADA,IAAI0R,EAAc,GACTpG,EAAI,EAAGA,EAAIX,EAAc7G,OAAQwH,IAEtCX,EAAcW,GAAGiB,UACqC,GAAtD5B,EAAcW,GAAGiB,SAAShK,WAAWoP,OAAO7N,QAE5C4N,EAAYxH,KAAKS,EAAcW,IAEnC,IAAI1M,EAAO,CACTgT,eAAgBZ,GAAkBtN,MAClCgO,cACAG,aAAc/G,EACdoC,IAAKwD,KD/MJ,SAA6BjI,EAAY7J,GAC9C,OAAO6I,IAAMqK,IAAN,gCAAmCrJ,GAAc7J,ICgNtDqT,CAAoBhJ,GAAiBrK,GAClC4K,MAAK,SAACC,GACLgH,GAAiB,GACjB9O,EAAM0P,mBAAmB,IACzB1P,EAAMyP,oBAAoB,IAC1BnH,EAAQC,KAAR,qBACAP,IAAMC,aACJhI,EAAK4E,cAAc,CAAExG,GAAI,8BACzB,cAGH0J,OAAM,SAAC3H,GACN0O,GAAiB,GACjB9G,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,4BAIlD,OACE,kBAAC,IAAMkC,SAAP,KACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,4DAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAd,oBACoBzC,EAAKqN,UAEzB,0BAAM5K,UAAU,cACbzC,EAAKuL,WACFN,OACGO,OAAO,IAAIC,KAAKzL,EAAKuL,aACrBnH,OAAO,eACV,SAOhB,yBAAK3B,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,yDAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAkBzC,EAAKsN,QACrC,0BAAM7K,UAAU,cAAczC,EAAK0L,WAM7C,yBAAKjJ,UAAU,YACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,sDAGjB,yBAAKA,UAAU,mDACb,kBAAC,IAAD,CACEqC,MAAOsN,GACPpO,QAASwN,EACT8B,YAAY,EACZ7Q,UAAU,kDACV8Q,gBAAgB,eAChB3F,SAAU,SAAC9I,GACTuN,GAAqBvN,YASrC,yBAAKrC,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtB,MAAM,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmB,GAAE,wCAAmClB,GAAnC,YAAyCgJ,GAAzC,YAAuDC,GAAvD,SACF5H,UAAU,mBAEV,uBAAGA,UAAU,wBACb,kBAAC,IAAD,CAAkBrB,GAAG,qBAI3B,kBAAC,IAAD,KACE,yBAAKqB,UAAU,OACZsJ,EAAc1J,KAAI,SAACoB,EAAMC,GACxB,OACE,yBAAKnB,IAAKmB,EAAMC,WAAYlB,UAAU,YACpC,yBAAKA,UAAU,cACb,0BAAMA,UAAU,kCACd,+BAAQgB,EAAK+J,YACb,2BACEpM,GAAG,YACHqB,UAAU,wBAETgB,EAAK+P,WACFvI,OACGO,OAAO,IAAIC,KAAKhI,EAAK+P,aACrBpP,OAAO,wBACV,GACJ,0BAAM3B,UAAU,kBACbgB,EAAKgQ,UAAY,MAIL,IAAlBhQ,EAAKgK,UACY,IAAlBhK,EAAKgK,UACa,IAAlBhK,EAAKgK,UACa,IAAlBhK,EAAKgK,SACH,2BACExM,KACoB,IAAlBwC,EAAKgK,SACD,OACkB,IAAlBhK,EAAKgK,UAAoC,IAAlBhK,EAAKgK,SAC5B,SACA,OAENhL,UAAU,eACVrB,IAAKqC,EAAK+J,WAAa/J,EAAKrC,IACzB+I,MAAM,iBACNuD,KAAK,IACR5I,MAAOrB,EAAKkK,UAAY,GACxBC,SAAU,SAACrG,GACT,IAAIvH,EAAO+F,OAAOC,OAAO,GAAI+F,GAC7B/L,EAAK0D,GAAOiK,SAAWpG,EAAEoB,OAAO7D,MAChCkH,EAAiBhM,GACjB+C,EAAMyP,oBAAoBxS,MAI9B,8BACE6N,KAAK,IACLpL,UAAU,eACVrB,IAAKqC,EAAK+J,WAAa/J,EAAKrC,IACzB+I,MAAM,iBACNuD,KAAK,IACR5I,MAAOrB,EAAKkK,SACZC,SAAU,SAACrG,GACT,IAAIvH,EAAO+F,OAAOC,OAAO,GAAI+F,GAC7B/L,EAAK0D,GAAOiK,SAAWpG,EAAEoB,OAAO7D,MAChCkH,EAAiBhM,GACjB+C,EAAMyP,oBAAoBxS,gBAqBlD,yBAAKyC,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtB,MAAM,SAClB,kBAAC,IAAD,KACE,yBAAKsB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,kDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAK+C,GACZd,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,sEACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKgD,MACZf,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,qEACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKiD,IACZhB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKkD,QACZjB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,4CACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKmD,UACZlB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,4CACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKoD,WACZnB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,iDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKqD,QACZpB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKsD,QACZrB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,gDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKuD,cACZtB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,qCACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKwD,GACZvB,SAAU,iBAIhB,yBAAKnL,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACExB,KAAK,OACLwB,UAAU,eACVG,UAAU,EACVkC,MAAK,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAKyD,QACZxB,SAAU,sBAS1B,yBAAKnL,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtB,MAAM,wBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmB,GAAE,wCAAmClB,GAAnC,YAAyCgJ,GAAzC,YAAuDC,GAAvD,kBACF5H,UAAU,mBAEV,uBAAGA,UAAU,wCAJf,qBASJ,kBAAC,IAAD,KACE,2BAAOA,UAAU,SACf,+BACE,4BACE,yCACA,oCACA,qCACA,yCACA,sCAGHyJ,EAAa7J,KAAI,SAACoB,EAAMC,GACvB,OACE,2BAAOnB,IAAKmB,EAAMC,YAChB,4BACE,4BAAKF,EAAKqK,MACV,4BACE,kBAAC,IAAD,CACEhJ,MAAOrB,EAAKmJ,IACZ5F,YAAY,QACZvE,UAAU,eACV0E,sBAAsB,EACtBC,mBAAmB,EACnB2G,eAAe,EACfzG,cAAe,SAACC,GACd,IAAIvH,EAAO+F,OAAOC,OAAO,GAAIkG,GACzB8B,EAAMhO,EAAKiO,WACb,SAACnJ,GAAD,OAAWA,EAAM1D,KAAOqC,EAAKrC,MAE/BpB,EAAKgO,GAAKpB,IAAMrF,EAAE2G,WAAa3G,EAAE2G,WAAa,EAC9C/B,EAAgBnM,OAItB,4BAAK4D,YAAOH,EAAK0K,QACjB,4BAAKvK,YAAOH,EAAK0K,MAAQ1K,EAAKmJ,MAC9B,4BACE,uBACEnK,UAAU,8CACVhB,QAAS,WACP,IAAIzB,EAAO+F,OAAOC,OAAO,GAAIkG,GACzB8B,EAAMhO,EAAKiO,WACb,SAACnJ,GAAD,OAAWA,EAAM1D,KAAOqC,EAAKrC,MAE/BpB,EAAK0T,OAAO1F,EAAK,GACjB7B,EAAgBnM,GAChB+C,EAAM0P,mBAAmBzS,QAKhCyD,EAAKkJ,gBACJlJ,EAAKkJ,eAAetK,KAAI,SAACyC,EAAOkJ,GAC9B,OACE,wBACEzL,IAAKyL,EAAIrK,WACTjC,MAAO,CAAE0M,gBAAiB,YAE1B,wBAAI3L,UAAU,SAASqC,EAAMgJ,MAC7B,4BACE,2BACE7M,KAAK,SACLwB,UAAU,eACVqC,MAAOrB,EAAKmJ,IACZgB,SAAU,aACVhL,UAAQ,KAGZ,4BAAKgB,YAAO,IACZ,4BAAKA,YAAO,IACZ,qCAOd,+BACE,4BACE,wBAAIyK,QAAQ,MACZ,gDACA,wBAAIA,QAAQ,KACV,kBAAC,IAAD,CACEvJ,MAAOgN,GACP9K,YAAY,QACZvE,UAAU,eACV0E,sBAAsB,EACtBC,mBAAmB,EACnBH,mBAAmB,EACnB8G,eAAe,EACf1G,OAAQ,MACRC,cAAe,SAACC,GACdwK,GAAexK,EAAE2G,WAAa3G,EAAE2G,WAAa,QAKrD,4BACE,wBAAIG,QAAQ,MACZ,qCACA,wBAAIA,QAAQ,KACTzK,YAAOkO,GA/eN,SAAC9R,GACrB,IAAIyE,EAAQ,EAIZ,OAHAzE,EAAKqC,KAAI,SAACoB,GACRgB,GAAShB,EAAK0K,MAAQ1K,EAAKmJ,OAEtBnI,EA0eiCgK,CAAcvC,YASpD,yBAAKzJ,UAAU,4BACb,4BACExB,KAAK,SACLwB,UAAU,6BACVf,MAAO,CAAEM,MAAO,IAChBY,SAAU8O,GAAeE,EACzBnQ,QAAS,YAzgBG,WAClB,GAAIyQ,GAAQ,CACV,IAAQyB,EAAwBC,IAAxBD,MAAOE,EAAiBD,IAAjBC,IAAKC,EAAYF,IAAZE,QACpB5B,GAAO0B,QAAQD,EAAOG,EAAS,CAAED,QAAO,SAACE,GACnCA,GACFzB,QAAQC,IAAI,kBAAmBwB,OAqgB7BC,GD9pBL,SAA6B5S,GAClC,OAAOyH,IAAMqK,IAAN,gCAAmC9R,IC8pBhC6S,CAAoBjU,EAAKoB,IAAI0J,OAAM,SAAC3H,GAClC4H,IAAMC,aACJhI,EAAK4E,cAAc,CAAExG,GAAI,2BAG7B2B,EAAM0P,mBAAmB,IACzB1P,EAAMyP,oBAAoB,IAC1BnH,EAAQC,KAAR,uBAGF,uBAAG7I,UAAU,oCACb,0BAAMA,UAAU,gBAAhB,WAEF,4BACExB,KAAK,SACLwB,UAAU,8BACVf,MAAO,CAAEM,MAAO,IAChBY,SAAU8O,GAAeE,EACzBnQ,QAAS,WACPiR,OAGDhB,EACC,uBAAGjP,UAAU,gCAEb,uBAAGA,UAAU,4BAGf,0BAAMA,UAAU,gBAAhB,SAEF,4BACExB,KAAK,SACLwB,UAAU,8BACVf,MAAO,CAAEM,MAAO,IAChBY,SAAU8O,GAAeE,EACzBnQ,QAAS,WACP2R,OAGDxB,EACC,uBAAGnP,UAAU,gCAEb,uBAAGA,UAAU,6BAEf,0BAAMA,UAAU,gBAAhB,iB,oBCtrBKI,kBAAWC,YAAQ,KAAM,KAAdA,EAhC1B,SAA2BC,GACzB,IAAQC,EAASD,EAATC,KACF6I,EAAYC,cACZnC,EAAa5G,EAAMoH,MAAM9D,OAAOjF,GAChCgJ,EAAarH,EAAMoH,MAAM9D,OAAO+D,WAChCC,EAAkBtH,EAAMoH,MAAM9D,OAAOgE,gBAoB3C,OAlBAwC,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACE3B,SAAS,oBACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,oBAElC,CACE+J,SAAS,iCAAD,OAAmCxB,EAAnC,YAAiDS,EAAjD,YAA+DC,GACvElJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,0BAElC,CACE+J,SAAS,iCAAD,OAAmCxB,EAAnC,YAAiDS,EAAjD,YAA+DC,EAA/D,SACRlJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,iCAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,iCAC3C,IAGD,kBAAC,IAAMkC,SAAP,KACE,kBAAC4Q,EAAA,EAAkBnR,Q,8BCvBnBgH,EAAc,CAClB,CACE5I,MAAO,sBAET,CACEA,MAAO,sBAET,CACEA,MAAO,uBAET,CACEA,MAAO,cAET,CACEA,MAAO,gBAET,CACEA,MAAO,8BAuFI0B,kBAAWC,YAAQ,KAAM,KAAdA,EAnF1B,SAA6BC,GAC3B,IAAQC,EAASD,EAATC,KACF6I,EAAYC,cAClB,EAA8BxL,oBAAS,GAAvC,mBAAO4C,EAAP,KAAgB+G,EAAhB,KACA,EAAwB3J,mBAAS,IAAjC,mBAAON,EAAP,KAAakK,EAAb,KA+BA,OA7BA2C,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACE3B,SAAS,oBACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,oBAElC,CACE+J,SAAS,yCACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,8BAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,8BAC3C,IAeHkF,qBAbkC,WAChC2D,GAAW,GHtBNpB,IAAMC,IAAN,yBGwBF8B,MAAK,SAACC,GACLZ,GAAW,GACXC,EAAQW,EAAO7K,KAAKA,SAErB8K,OAAM,SAAC3H,GACN8G,GAAW,GACXc,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,6BAIb,IAGnC,kBAAC,IAAMkC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWL,WAAY8G,EAAa7G,QAASA,EAASG,MAAO,IAC1DrD,EAAKqC,KAAI,SAACoB,EAAMC,GACf,OACE,kBAACyQ,EAAA,EAAD,CAAU5R,IAAKmB,EAAMC,YACnB,kBAACyQ,EAAA,EAAD,KAAY3Q,EAAK4Q,aACjB,kBAACD,EAAA,EAAD,KAAY3Q,EAAKqK,MACjB,kBAACsG,EAAA,EAAD,KAAY3Q,EAAK6Q,UACjB,kBAACF,EAAA,EAAD,KAAY3Q,EAAKiI,MACjB,kBAAC0I,EAAA,EAAD,KACmB,MAAhB3Q,EAAKuB,OACJ,kBAAC,IAAD,CAAkB5D,GAAG,kBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,mBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,4BACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,uBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,qBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,kBAErB,kBAAC,IAAD,CAAkBA,GAAG,kBAGzB,kBAACgT,EAAA,EAAD,kBCrFZrK,EAAc,CAClB,CACE5I,MAAO,sBAET,CACEA,MAAO,sBAET,CACEA,MAAO,uBAET,CACEA,MAAO,cAET,CACEA,MAAO,gBAET,CACEA,MAAO,8BAuFI0B,kBAAWC,YAAQ,KAAM,KAAdA,EAnF1B,SAA6BC,GAC3B,IAAQC,EAASD,EAATC,KACF6I,EAAYC,cAClB,EAA8BxL,oBAAS,GAAvC,mBAAO4C,EAAP,KAAgB+G,EAAhB,KACA,EAAwB3J,mBAAS,IAAjC,mBAAON,EAAP,KAAakK,EAAb,KA+BA,OA7BA2C,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACE3B,SAAS,oBACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,oBAElC,CACE+J,SAAS,6BACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,kBAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,kBAC3C,IAeHkF,qBAbqC,WACnC2D,GAAW,GJzBNpB,IAAMC,IAAN,uBI2BF8B,MAAK,SAACC,GACLZ,GAAW,GACXC,EAAQW,EAAO7K,KAAKA,SAErB8K,OAAM,SAAC3H,GACN8G,GAAW,GACXc,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,6BAIV,IAGtC,kBAAC,IAAMkC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWL,WAAY8G,EAAa7G,QAASA,EAASG,MAAO,IAC1DrD,EAAKqC,KAAI,SAACoB,EAAMC,GACf,OACE,kBAACyQ,EAAA,EAAD,CAAU5R,IAAKmB,EAAMC,YACnB,kBAACyQ,EAAA,EAAD,KAAY3Q,EAAK4Q,aACjB,kBAACD,EAAA,EAAD,KAAY3Q,EAAKqK,MACjB,kBAACsG,EAAA,EAAD,KAAY3Q,EAAK6Q,UACjB,kBAACF,EAAA,EAAD,KAAY3Q,EAAKiI,MACjB,kBAAC0I,EAAA,EAAD,KACmB,MAAhB3Q,EAAKuB,OACJ,kBAAC,IAAD,CAAkB5D,GAAG,kBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,mBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,4BACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,uBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,qBACH,MAAhBqC,EAAKuB,OACP,kBAAC,IAAD,CAAkB5D,GAAG,kBAErB,kBAAC,IAAD,CAAkBA,GAAG,kBAGzB,kBAACgT,EAAA,EAAD,kB,4BC7EZrK,EAAc,CAClB,CACE5I,MAAO,cACP0D,KAAM,QACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV9C,OAAQ,CACN+C,QAAQ,EACRhE,KAAM,SAGV,CACEE,MAAO,qBACP0D,KAAM,UACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV9C,OAAQ,CACN+C,QAAQ,EACRhE,KAAM,SAGV,CACEE,MAAO,qBACP0D,KAAM,OACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV9C,OAAQ,CACN+C,QAAQ,EACRhE,KAAM,SAGV,CACEE,MAAO,kBACP0D,KAAM,OACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV9C,OAAQ,CACN+C,QAAQ,EACRhE,KAAM,SAGV,CACEE,MAAO,mBACP0D,KAAM,QACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV9C,OAAQ,CACN+C,QAAQ,EACRhE,KAAM,YAqJG4B,kBAAWC,YAAQ,KAAM2H,IAAd3H,EAhJ1B,SAAsBC,GACpB,IAAQC,EAASD,EAATC,KACF6I,EAAYC,cACZnC,EAAa5G,EAAMoH,MAAM9D,OAAOjF,GAChCgJ,EAAarH,EAAMoH,MAAM9D,OAAO+D,WAChCC,EAAkBtH,EAAMoH,MAAM9D,OAAOgE,gBAC3C,EAA8B/J,oBAAS,GAAvC,mBAAO4C,EAAP,KAAgB+G,EAAhB,KACA,EAAwB3J,mBAAS,CAC/BN,KAAM,GACNyE,MAAO,IAFT,mBAAOzE,EAAP,KAAakK,EAAb,KAIA,EAAsB5J,oBAAS,GAA/B,mBAAO6C,EAAP,KAAYoR,EAAZ,KACA,EAAsCjU,mBAAS,IAA/C,mBAAOkU,EAAP,KAAoBC,EAApB,KACMpJ,EAAUoG,cACZO,EAAkBzH,aACpB,SAACC,GAAD,OAAWA,EAAMC,KAAKuH,kBACtBrH,KAgDF,OA7CAkC,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACE3B,SAAS,oBACThK,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,oBAElC,CACE+J,SAAS,iCAAD,OAAmCxB,EAAnC,YAAiDS,EAAjD,YAA+DC,GACvElJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,0BAElC,CACE+J,SAAS,iCAAD,OAAmCxB,EAAnC,YAAiDS,EAAjD,YAA+DC,EAA/D,kBACRlJ,MAAO6B,EAAK4E,cAAc,CAAExG,GAAI,2BAGpCyK,EAAUkB,SAAS/J,EAAK4E,cAAc,CAAExG,GAAI,2BAC3C,IAyBHkF,qBAAU,WACJ0L,GAAiByC,EAAezC,KACnC,IAGD,kBAAC,IAAM1O,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYnC,MAAM,IAChB,kBAAC,IAAD,KACE,4BACEF,KAAK,SACLwB,UAAU,sBACVhB,QAAS,WACP4J,EAAQC,KAAR,wCACmC3B,EADnC,YACiDS,EADjD,YAC+DC,MAIjE,uBAAG5H,UAAU,iBACb,kBAAC,IAAD,CAAkBrB,GAAG,kBAEvB,4BACEH,KAAK,SACLwB,UAAU,uBACVhB,QAAS,WACPsB,EAAM0P,mBAAmB+B,GACzBnJ,EAAQC,KAAR,wCACmC3B,EADnC,YACiDS,EADjD,YAC+DC,MAIjE,uBAAG5H,UAAU,gBACb,kBAAC,IAAD,CAAkBrB,GAAG,kBAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE6B,WAAY8G,EACZ1F,aA9DS,SAACgC,GAClB4D,GAAW,GACXC,EAAQ,2BACHlK,GADE,IAELyE,MAAO,EACPzE,KAAM,MAERuU,GAAO,GLlHJ,SAAgClO,GACrC,OAAOwC,IAAMC,IAAN,sBAAyBzC,EAAS,IAAMA,EAAS,KKkHtDqO,CAAuBrO,GACpBuE,MAAK,SAACC,GACLZ,GAAW,GACXC,EAAQ,2BACHlK,GADE,IAELyE,MAAO,EACPzE,KAAM6K,EAAO7K,KAAKA,WAGrB8K,OAAM,SAAC3H,GACNoR,GAAO,GACPtK,GAAW,GACXc,IAAMC,aAAahI,EAAK4E,cAAc,CAAExG,GAAI,4BA2CxC8B,QAASA,EACTC,IAAKA,EACLmB,UAAWtE,EAAKyE,MAChBpB,MAAO,IAENrD,EAAKA,KAAKqC,KAAI,SAACoB,EAAMC,GACpB,OACE,kBAACyQ,EAAA,EAAD,CAAU5R,IAAKmB,EAAMC,YACnB,kBAACyQ,EAAA,EAAD,CAAWxS,QAAQ,YACjB,kBAAC+S,EAAA,EAAD,CACEvE,eAAe,EACfW,SAGS,IAFPyD,EAAYvG,WACV,SAACnJ,GAAD,OAAWA,EAAM1D,KAAOqC,EAAKrC,MAGjCwM,SAAU,SAACrG,GACT,IAAIvH,EAAO+F,OAAOC,OAAO,GAAIwO,GAC7B,GAAIjN,EAAEoB,OAAOoI,QACX/Q,EAAKsL,KAAK7H,OACL,CACL,IAAIuK,EAAMhO,EAAKiO,WACb,SAACnJ,GAAD,OAAWA,EAAM1D,KAAOqC,EAAKrC,MAE/BpB,EAAK0T,OAAO1F,EAAK,GAEnByG,EAAezU,OAIrB,kBAACoU,EAAA,EAAD,YAAY3Q,QAAZ,IAAYA,OAAZ,EAAYA,EAAMmR,SAClB,kBAACR,EAAA,EAAD,YAAY3Q,QAAZ,IAAYA,OAAZ,EAAYA,EAAMqK,MAClB,kBAACsG,EAAA,EAAD,YAAY3Q,QAAZ,IAAYA,OAAZ,EAAYA,EAAMoR,MAClB,kBAACT,EAAA,EAAD,KAAYxQ,aAAW,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAM0K,QAAS,gBCjJrCtL,sBAAWC,YAAQ,KAAM,KAAdA,EA1D1B,SAA4BC,GAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU+R,OAAK,EAACC,KAAK,wBAAwBzS,GAAG,sBAChD,kBAAC,IAAD,CACE0S,KAAK,2FACLzR,UAAW,SAACR,GAAD,OAAW,kBAAC,IAAyBA,IAChD+R,OAAK,IAEP,kBAAC,IAAD,CACEE,KAAK,sEACLzR,UAAW,SAACR,GAAD,OAAW,kBAAC,EAAsBA,IAC7C+R,OAAK,IAEP,kBAAC,IAAD,CACEE,KAAK,+EACLzR,UAAW,SAACR,GAAD,OAAW,kBAAC,EAAiBA,IACxC+R,OAAK,IAEP,kBAAC,IAAD,CACEE,KAAK,iEACLzR,UAAW,SAACR,GAAD,OAAW,kBAAC,EAAwBA,IAC/C+R,OAAK,IAEP,kBAAC,IAAD,CACEE,KAAK,yCACLzR,UAAW,SAACR,GAAD,OAAW,kBAAC,EAAwBA,IAC/C+R,OAAK,IAEP,kBAAC,IAAD,CACEE,KAAK,6BACLzR,UAAW,SAACR,GAAD,OAAW,kBAAC,EAAwBA,IAC/C+R,OAAK","file":"static/js/11.bf56edf0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={false}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        console.log(\"result\", result);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          props.setScreeningPatient(\r\n            result.data.data.screen ? result.data.data.screen : []\r\n          );\r\n          setDataScreening(result.data.data.screen);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.push(`/doctor/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-sm-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {item.updated_at\r\n                              ? window\r\n                                  .moment(new Date(item.updated_at))\r\n                                  .format(\"DD MMM YYYY HH:mm:ss\")\r\n                              : \"\"}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc || \"\"}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={item.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={handlingFee}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id).catch((err) => {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n            });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n            history.push(`/doctor/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly dataHeader={headerTable} loading={loading} hecto={10}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    {item.status === \"1\" ? (\r\n                      <FormattedMessage id=\"LABEL.BOOKING\" />\r\n                    ) : item.status === \"2\" ? (\r\n                      <FormattedMessage id=\"LABEL.CANCELED\" />\r\n                    ) : item.status === \"3\" ? (\r\n                      <FormattedMessage id=\"LABEL.CHECKIN_SCREENING\" />\r\n                    ) : item.status === \"4\" ? (\r\n                      <FormattedMessage id=\"LABEL.POLI_PROCESS\" />\r\n                    ) : item.status === \"5\" ? (\r\n                      <FormattedMessage id=\"LABEL.PHARMACIST\" />\r\n                    ) : item.status === \"6\" ? (\r\n                      <FormattedMessage id=\"LABEL.PAYMENT\" />\r\n                    ) : (\r\n                      <FormattedMessage id=\"LABEL.FINISH\" />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly dataHeader={headerTable} loading={loading} hecto={10}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    {item.status === \"1\" ? (\r\n                      <FormattedMessage id=\"LABEL.BOOKING\" />\r\n                    ) : item.status === \"2\" ? (\r\n                      <FormattedMessage id=\"LABEL.CANCELED\" />\r\n                    ) : item.status === \"3\" ? (\r\n                      <FormattedMessage id=\"LABEL.CHECKIN_SCREENING\" />\r\n                    ) : item.status === \"4\" ? (\r\n                      <FormattedMessage id=\"LABEL.POLI_PROCESS\" />\r\n                    ) : item.status === \"5\" ? (\r\n                      <FormattedMessage id=\"LABEL.PHARMACIST\" />\r\n                    ) : item.status === \"6\" ? (\r\n                      <FormattedMessage id=\"LABEL.PAYMENT\" />\r\n                    ) : (\r\n                      <FormattedMessage id=\"LABEL.FINISH\" />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}