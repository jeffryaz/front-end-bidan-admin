{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/modules/Administrator/Article/ListArticlePage.js","app/components/textEditor/TextEditor.js","app/modules/Administrator/Article/WriteArticlePage.js","app/modules/Administrator/Article/RootAdministratorArticle.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","index","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","Fragment","item","toString","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","listPoliPagination","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","put","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","delete","headerTable","data_ops","auth","suhbeader","useSubheader","setLoading","loadingDelete","setLoadingDelete","dataCancel","setDataCancel","setData","setErr","history","useHistory","dialogCancel","setDialogCancel","paramTable","setParamTable","useLayoutEffect","setBreadcrumbs","pathname","setTitle","requestApi","then","result","catch","MODAL","showSnackbar","push","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","subject","DialogActions","TableRow","TableCell","window","moment","Date","created_at","format","updated_at","initialData","getData","onBlur","content","setContent","options","lang","height","dialogsInBody","toolbar","onChange","e","onImageUpload","files","node","createElement","fr","FileReader","onload","ReactSummernote","insertNode","readAsDataURL","initialValues","state","match","Schema","Yup","shape","required","thumbnail_img","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","newParams","FormData","dataReq","load_thumbnail_img","file_thumbnail_img","keys","forEach","element","append","console","log","setValues","setFieldTouched","autoComplete","handleSubmit","backgroundImage","toAbsoluteUrl","display","hostBase","data-action","data-original-title","accept","setFieldValue","getFieldProps","touched","errors","isValid","constructor","exact","from","path"],"mappings":"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","file":"static/js/12.f4e1a1c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poli${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listArticlePagination,\r\n  deleteArticleById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TITLE\",\r\n    name: \"subject\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.CREATE_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n  {\r\n    label: \"LABEL.DELETE\",\r\n    icon: \"fas fa-trash-alt text-danger\",\r\n    type: \"delete\",\r\n  },\r\n];\r\n\r\nfunction ListArticlePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingDelete, setLoadingDelete] = useState(false);\r\n  const [dataCancel, setDataCancel] = useState({});\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const history = useHistory();\r\n  const [dialogCancel, setDialogCancel] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/article-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.ARTICLE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.ARTICLE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listArticlePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    if (type === \"open\") {\r\n      props.history.push(`/administrator/article-page/write/${data.id}`);\r\n    } else {\r\n      setDataCancel(data);\r\n      setDialogCancel(true);\r\n    }\r\n  };\r\n\r\n  const callApiDeteleArtivleById = () => {\r\n    setLoadingDelete(true);\r\n    deleteArticleById(dataCancel.id)\r\n      .then((result) => {\r\n        setDialogCancel(false);\r\n        setLoadingDelete(false);\r\n        requestApi(paramTable);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingDelete(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogCancel}\r\n        maxWidth=\"sm\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.DELETE\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          Apakah Anda yakin ingin menghapus Artikel berjudul{\" \"}\r\n          <b>{dataCancel.subject}</b>?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              setDialogCancel(false);\r\n            }}\r\n            disabled={loadingDelete}\r\n          >\r\n            <FormattedMessage id=\"LABEL.CANCEL\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            disabled={loadingDelete}\r\n            onClick={() => {\r\n              callApiDeteleArtivleById();\r\n            }}\r\n          >\r\n            {loadingDelete ? (\r\n              <FormattedMessage id=\"LABEL.WAITING\" />\r\n            ) : (\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            )}\r\n            {loadingDelete ? (\r\n              <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-save ml-2\"></i>\r\n            )}\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                history.push(`/administrator/article-page/write/new`);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.subject}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListArticlePage));\r\n","import React from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactSummernote from \"react-summernote\";\r\nimport \"react-summernote/dist/react-summernote.css\";\r\nimport \"react-summernote/lang/summernote-id-ID\";\r\nimport \"bootstrap/js/dist/modal\";\r\nimport \"bootstrap/js/dist/dropdown\";\r\nimport \"bootstrap/js/dist/tooltip\";\r\n\r\nconst TextEditor = (props) => {\r\n  const { initialData = \"\", getData, onBlur } = props;\r\n  const [content, setContent] = React.useState(initialData);\r\n\r\n  const initial = () => {\r\n    setContent(initialData);\r\n    getData(initialData);\r\n  };\r\n\r\n  React.useEffect(initial, [initialData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReactSummernote\r\n        value={content}\r\n        options={{\r\n          lang: \"id-ID\",\r\n          height: 450,\r\n          dialogsInBody: true,\r\n          toolbar: [\r\n            [\"style\", [\"style\"]],\r\n            [\"font\", [\"bold\", \"underline\", \"clear\"]],\r\n            [\"fontname\", [\"fontname\"]],\r\n            [\"color\", [\"color\"]],\r\n            [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n            [\"table\", [\"table\"]],\r\n            [\"insert\", [\"link\", \"picture\", \"video\"]],\r\n          ],\r\n        }}\r\n        onChange={(e) => {\r\n          setContent(e);\r\n          getData(e);\r\n        }}\r\n        onImageUpload={(files) => {\r\n          let node = document.createElement(\"img\");\r\n          let fr = new FileReader();\r\n          fr.onload = () => {\r\n            node.setAttribute(\"src\", fr.result);\r\n            ReactSummernote.insertNode(node);\r\n          };\r\n          fr.readAsDataURL(files[0]);\r\n        }}\r\n        onBlur={onBlur}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TextEditor));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  craeteArticle,\r\n  getArticleById,\r\n  editArticle,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\nimport TextEditor from \"../../../components/textEditor/TextEditor\";\r\n\r\nconst initialValues = {};\r\n\r\nfunction WriteArticlePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(false);\r\n  const history = useHistory();\r\n  const state = props.match.params.state;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/article-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.ARTICLE_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/article-page/write/${state}`,\r\n        title: intl.formatMessage({ id: \"LABEL.ARTICLE_WRITING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.ARTICLE_WRITING\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    subject: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    content: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    thumbnail_img: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoading(true);\r\n      let newParams = new FormData();\r\n      var dataReq = Object.assign({}, values);\r\n      delete dataReq.load_thumbnail_img;\r\n      if (dataReq.file_thumbnail_img && dataReq.file_thumbnail_img !== null) {\r\n        dataReq.thumbnail_img = dataReq.file_thumbnail_img;\r\n      } else {\r\n        delete dataReq.thumbnail_img;\r\n      }\r\n      delete dataReq.file_thumbnail_img;\r\n      Object.keys(dataReq).forEach((element) => {\r\n        newParams.append(element, dataReq[element]);\r\n      });\r\n      if (state === \"new\") {\r\n        craeteArticle(newParams)\r\n          .then((result) => {\r\n            console.log(\"result create ->\", result);\r\n            history.push(`/administrator/article-page/list`);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err -> new\", err);\r\n            setLoading(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      } else {\r\n        editArticle(state, newParams)\r\n          .then((result) => {\r\n            console.log(\"result edit ->\", result);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err -> edit\", err);\r\n            setLoading(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const getUserPic = () => {\r\n    if (!formik.values.thumbnail_img) {\r\n      return \"none\";\r\n    }\r\n\r\n    return `url(${hostBase()}/storage/app/thumbnail_img/${\r\n      formik.values.thumbnail_img\r\n    })`;\r\n  };\r\n\r\n  const callApiArticleById = () => {\r\n    if (state !== \"new\") {\r\n      getArticleById(state)\r\n        .then((result) => {\r\n          formik.setValues(result.data.data);\r\n          formik.setFieldTouched(\"subject\", true);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(callApiArticleById, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <form\r\n            className=\"form\"\r\n            autoComplete=\"off\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div\r\n              className=\"image-input image-input-outline\"\r\n              style={{\r\n                backgroundImage: `url(${toAbsoluteUrl(\r\n                  \"/media/bg/image_2.jpg\"\r\n                )}`,\r\n                margin: \"0 4.5%\",\r\n                display: \"block\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"image-input-wrapper\"\r\n                style={{\r\n                  backgroundImage: `${\r\n                    formik.values?.file_thumbnail_img\r\n                      ? `url('${formik.values?.load_thumbnail_img}')`\r\n                      : getUserPic()\r\n                  }`,\r\n                  width: \"100%\",\r\n                  height: \"calc(60vh)\",\r\n                }}\r\n              />\r\n              <label\r\n                className=\"btn btn-md btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                data-action=\"change\"\r\n                data-toggle=\"tooltip\"\r\n                title=\"\"\r\n                data-original-title=\"Change avatar\"\r\n              >\r\n                <i className=\"fa fa-pen icon-md text-primary\"></i>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".png, .jpg, .jpeg\"\r\n                  onChange={(e) => {\r\n                    let fr = new FileReader();\r\n                    fr.onload = () => {\r\n                      formik.setFieldValue(\"load_thumbnail_img\", fr.result);\r\n                    };\r\n                    fr.readAsDataURL(e.target.files[0]);\r\n                    formik.setFieldValue(\r\n                      \"file_thumbnail_img\",\r\n                      e.target.files[0]\r\n                    );\r\n\r\n                    if (state === \"new\")\r\n                      formik.setFieldValue(\"thumbnail_img\", e.target.files[0]);\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n            <span className=\"form-text text-muted mt-5\">\r\n              Hanya menerima type file: png, jpg, jpeg.\r\n              <span className=\"text-left text-danger\">\r\n                <FormattedMessage id=\"LABEL.VALIDATION_REQUIRED_FIELD\" />\r\n              </span>\r\n            </span>\r\n            <div className=\"mt-5 pt-5\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"LABEL.TITLE\" />\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"subject\")}\r\n                />\r\n                {formik.touched.subject && formik.errors.subject && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.subject}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"LABEL.CONTENTS\" />\r\n                </label>\r\n                <TextEditor\r\n                  initialData={formik.values.content}\r\n                  getData={(e) => {\r\n                    formik.setFieldValue(\"content\", e);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"content\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.content && formik.errors.content && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.content}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"toolbar-custom scrolltop\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm my-2\"\r\n                style={{ width: 60 }}\r\n                disabled={loading}\r\n                onClick={() => {\r\n                  history.push(`/administrator/article-page/list`);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n                <span className=\"font-size-xs\">Cancel</span>\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-sm my-2\"\r\n                style={{ width: 60 }}\r\n                disabled={\r\n                  !formik.isValid ||\r\n                  (Object.keys(formik.touched).length === 0 &&\r\n                    formik.touched.constructor === Object) ||\r\n                  loading\r\n                }\r\n                onClick={() => {}}\r\n              >\r\n                {loading ? (\r\n                  <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-check d-block p-0\"></i>\r\n                )}\r\n                <span className=\"font-size-xs\">Submit</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(WriteArticlePage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListArticlePage from \"./ListArticlePage\";\r\nimport WriteArticlePage from \"./WriteArticlePage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorArticle(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/article-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/article-page/list\"\r\n        component={(props) => <ListArticlePage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/administrator/article-page/write/:state\"\r\n        component={(props) => <WriteArticlePage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorArticle));\r\n"],"sourceRoot":""}