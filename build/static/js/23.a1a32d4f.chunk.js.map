{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/HandlingPharmacist/DetailPharmacist.js","app/modules/HandlingPharmacist/ListEmptyItemPage.js","app/modules/HandlingPharmacist/ListStockIsRunningOutPage.js","app/modules/HandlingPharmacist/ListPreOrderPage.js","app/modules/HandlingPharmacist/RootHandlingPharmacist.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","td","key","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","getMedicalRecord","medical_id","axios","get","listMedicinePagination","params","getMedicineById","createMedicine","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","getListPreOrder","getListStockName","listAllPatient","addDrugNonDoctor","getPoDrug","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","color","palette","action","active","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","paddingLeft","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","useStyles","makeStyles","heading","typography","pxToRem","heading_new","flexBasis","secondaryHeading","details","column","ListItem","subtitle","idx","input","a","adx","medkind","nama","datatype","val_desc","trim","rows","unit","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Divider","auth","history","useHistory","setLoading","loadingSave","loadingSubmit","setLoadingSubmit","setData","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","dataMedicine","setDataMedicine","readyOrder","setReadyOrder","dialogResume","setDialogResume","resep_id","match","client","useSelector","state","medicinePatient","shallowEqual","clientMqtt","optionTakaran","setOptionTakaran","selectedTakaran","dataMedicinePatient","waiting","Promise","resolve","reject","result","composite_item","qty","MODAL","showSnackbar","useLayoutEffect","setBreadcrumbs","pathname","setTitle","useEffect","then","form","screen","labs","callApiGetMedicine","resep","catch","getTakaran","forEach","element","takaran","callApiSubmitMedicalRecord","otherArray","current","barang_id","preorder","topic","publish","qos","payload","error","console","log","mqttPublish","replace","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","code_reg","created_at","window","moment","Date","format","pasien","poli","colSpan","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","Object","assign","findIndex","floatValue","verticalAlign","textAlign","eat_qty","day_qty","takaran_id","options","isDisabled","isClearable","classNamePrefix","rupiah","harga","height","checked","splice","backgroundColor","headerTable","setDataSecond","iscompositeName","iscomposite","TableRow","TableCell","barcode","in_qty","out_qty","stock","callApiListStockRunningOut","kode_trans","buy_time","nama_pasien","$","removeClass","addClass","exact","from"],"mappings":"wQAiHeA,gBAAWC,YAAQ,KAAM,KAAdA,EAnGR,SAACC,GACjB,IACEC,EAQED,EARFC,KADF,EASID,EAPFE,kBAFF,MAEe,GAFf,IASIF,EANFG,eAHF,WASIH,EALFI,WAJF,SAKEC,EAIEL,EAJFK,SALF,EASIL,EAHFM,aANF,MAMU,EANV,EAOEC,EAEEP,EAFFO,aAPF,EASIP,EADFQ,kBARF,MAQe,GARf,EAUA,EAAqBC,IAAMC,SACzBR,EAAWS,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKD,WAD5BE,EAAP,oBAkBA,OACE,kBAAC,IAAMC,SAAP,KACE,6BACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,kBACb,2BAAOC,QAAQ,eAAeD,UAAU,2BACtC,kBAAC,IAAD,CAAkBE,GAAG,iBADvB,KAGA,yBAAKF,UAAU,YACb,2BACEG,KAAK,OACLH,UAAU,eACVE,GAAG,eACHE,YAAalB,EAAKmB,cAAc,CAC9BH,GAAI,iBAENI,SA/BM,SAACC,GAErB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIhB,EAAWiB,OAAQD,IACrC,IAAK,IAAIE,EAAI,EAAGA,EAAIb,EAAWY,OAAQC,IAAK,CAE1C,GADWlB,EAAWgB,GAAGX,EAAWa,GAAGC,MAAMC,WAAWC,cAC/CC,SAASR,EAAES,OAAOC,MAAMH,eAAgB,CAC/CN,EAAKU,KAAKzB,EAAWgB,IACrB,OAIsB,oBAAjBjB,GAA6BA,EAAagB,UA0BjD,kBAAC,IAAD,CAAgBW,UAAWC,KACzB,kBAAC,IAAD,CAAOpB,UAAW,SAAWT,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGJ,EAAWkC,KAAI,SAACxB,EAAMyB,GACrB,OACE,kBAAC,IAAD,CACEtB,UAAS,qCACH,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,IAAN,OAAW1B,QAAX,IAAWA,OAAX,EAAWA,EAAM0B,GAAK,IAExBC,IAAKF,EAAMT,YAEX,8BACE,kBAAC,IAAD,CAAkBX,GAAIL,EAAK4B,eAOvC,kBAAC,IAAD,KAAYnC,IAGd,yBAAKU,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZZ,GACC,8BACE,uBAAGY,UAAU,2CACb,kBAAC,IAAD,CAAkBE,GAAG,8BAGxBb,GACC,0BAAMW,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBE,GAAG,oC,gMCvFnCwB,EAAgBC,aAAW,SAACC,GAAD,MAAY,CAC3CC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,SAAU,WACVC,UAAW,cAJON,CAMlBO,KAEW,SAASC,EAAT,GAMX,IALF3B,EAKC,EALDA,KACA4B,EAIC,EAJDA,aACAC,EAGC,EAHDA,IAGC,IAFDC,aAEC,MAFO,KAEP,MADDC,eACC,MADS,GACT,EACD,EAAgC7C,IAAMC,SAAS,MAA/C,mBAAO6C,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GACrB,SAASI,EAAYC,GACnBJ,EAAYI,EAAMC,eAEpB,SAASC,IACPN,EAAY,MAEd,IAAMO,EAAetD,IAAMuD,aACzB,SAAC9C,EAAMK,GACuB,oBAAjB4B,GAA6BA,EAAajC,EAAMK,GAC3DuC,MAEF,CAACX,EAAcW,IAGbG,EAAWb,EAEf,OACE,6BACGC,EACC,kBAACZ,EAAD,CACED,MAAO,kBAAC,IAAD,CAAkBvB,GAAIoC,IAC7Ba,UAAU,UAEV,kBAAC,IAAD,CACEC,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASX,GAET,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CACEQ,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASX,EACTY,MAAO,CACLC,OAAQ,WACRC,QAAS,IAGX,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CACExD,GAAG,YACHsC,SAAUA,EACVmB,aAAW,EACXjB,KAAMA,EACNkB,QAASb,EACTc,WAAY,CACVL,MAAO,CACLM,MAAO,IACPC,YAAa,MAIhBb,EACEtD,QAAO,SAACoE,GAAD,OAASzB,EAAQxB,SAASiD,EAAG7D,SACpCkB,KAAI,SAAC2C,EAAI9D,GACI,IAAD,IAAX,OAAI8D,EAAGC,GAEH,kBAAC,IAAD,CAAMzC,IAAKtB,EAAI+D,GAAE,UAAED,EAAGC,UAAL,aAAE,EAAOC,IAAKV,MAAK,UAAEQ,EAAGC,UAAL,aAAE,EAAOT,OAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGxD,UAAWgE,EAAGG,QAEnB,kBAAC,IAAD,CACEC,QAAS,kBAAC,IAAD,CAAkBlE,GAAI8D,EAAG1B,YAOxC,kBAAC,IAAD,CACEd,IAAKtB,EACLqD,QAAS,kBAAMP,EAAagB,EAAG7D,KAAMK,IACrC6D,SAAUL,EAAGK,UAEb,kBAAC,IAAD,KACE,uBAAGrE,UAAWgE,EAAGG,QAEnB,kBAAC,IAAD,CAAcC,QAAS,kBAAC,IAAD,CAAkBlE,GAAI8D,EAAG1B,kB,kCCpHlE,ifAQO,SAASgC,EAAiBC,GAC/B,OAAOC,IAAMC,IAAN,0BAA6BF,IAE/B,SAASG,EAAuBC,GACrC,OAAOH,IAAMC,IAAN,sBAAyBE,EAAS,IAAMA,EAAS,KAEnD,SAASC,EAAgB1E,GAC9B,OAAOsE,IAAMC,IAAN,uBAA0BvE,IAE5B,SAAS2E,EAAerE,GAC7B,OAAOgE,IAAMM,KAAN,eAA2BtE,GAE7B,SAASuE,EAAa7E,EAAIM,GAC/B,OAAOgE,IAAMQ,IAAN,uBAA0B9E,GAAMM,GAiBlC,SAASyE,EAAWzE,GACzB,OAAOgE,IAAMM,KAAN,sBAAkCtE,GAEpC,SAAS0E,EAAmB1E,GACjC,OAAOgE,IAAMM,KAAN,kBAA8BtE,GAEhC,SAAS2E,IACd,OAAOX,IAAMC,IAAN,wBAEF,SAASW,IACd,OAAOZ,IAAMC,IAAN,uBAEF,SAASY,IACd,OAAOb,IAAMC,IAAN,uBAEF,SAASa,IACd,OAAOd,IAAMC,IAAN,qBAEF,SAASc,IACd,OAAOf,IAAMC,IAAN,4CAEF,SAASe,EAAiBhF,GAC/B,OAAOgE,IAAMM,KAAN,mBAA+BtE,GAEjC,SAASiF,EAAUvF,GACxB,OAAOsE,IAAMQ,IAAN,+BAAkC9E,M,kCC/D3C,2DA2BIwF,EAAe,cAAiB,SAAsBzG,EAAO0G,GAC/D,IAAIC,EAAU3G,EAAM2G,QAChB5F,EAAYf,EAAMe,UAClB6F,EAAQ,YAAyB5G,EAAO,CAAC,UAAW,cAEpD6G,EAAU,aAAiB,KAC/B,OAAoB,gBAAoB,MAAO,YAAS,CACtD9F,UAAW,YAAK4F,EAAQG,KAAM/F,EAAkC,eAAvB8F,EAAQE,YAA+BJ,EAAQK,qBACxFN,IAAKA,GACJE,OAyBU,iBAtDK,SAAgBjE,GAClC,MAAO,CAELmE,KAAM,CACJG,SAAU,GACVC,MAAOvE,EAAMwE,QAAQC,OAAOC,OAC5BC,WAAY,EACZC,QAAS,eAIXP,oBAAqB,CACnBhE,UAAW,MA0CiB,CAChCrB,KAAM,mBADO,CAEZ8E,I,kCC/DH,oEAqCIe,EAAe,cAAiB,SAAsBxH,EAAO0G,GAC/D,IAAIrG,EAAWL,EAAMK,SACjBsG,EAAU3G,EAAM2G,QAChB5F,EAAYf,EAAMe,UAClB0G,EAAwBzH,EAAM0H,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAe3H,EAAM4H,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAc7H,EAAMmF,QACpB2C,EAAyB9H,EAAM8H,uBAC/BC,EAAgB/H,EAAMgI,UACtBC,EAA2BjI,EAAMiI,yBACjCrB,EAAQ,YAAyB5G,EAAO,CAAC,WAAY,UAAW,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,6BAG7JkI,EADoB,aAAiB,KACXA,MAE1B/C,EAAyB,MAAf0C,EAAsBA,EAAcxH,EAEnC,MAAX8E,GAAmBA,EAAQjE,OAAS,KAAewG,IACrDvC,EAAuB,gBAAoB,IAAY,YAAS,CAC9DgD,QAASD,EAAQ,QAAU,QAC3BnH,UAAW4F,EAAQxB,QACnBjD,UAAW,OACXqF,QAAS,SACRO,GAAyB3C,IAG9B,IAAI6C,EAAYD,EAWhB,OATiB,MAAbC,GAAqBA,EAAU9G,OAAS,KAAewG,IACzDM,EAAyB,gBAAoB,IAAY,YAAS,CAChEG,QAAS,QACTpH,UAAW4F,EAAQqB,UACnBd,MAAO,gBACPK,QAAS,SACRU,GAA2BD,IAGZ,gBAAoB,MAAO,YAAS,CACtDjH,UAAW,YAAK4F,EAAQG,KAAM/F,EAAWmH,GAASvB,EAAQuB,MAAON,GAASjB,EAAQiB,MAAOzC,GAAW6C,GAAarB,EAAQyB,WACzH1B,IAAKA,GACJE,GAAQzB,EAAS6C,MA4DP,gBAnIK,CAElBlB,KAAM,CACJuB,KAAM,WACNpB,SAAU,EACVjE,UAAW,EACXsF,aAAc,GAIhBF,UAAW,CACTpF,UAAW,EACXsF,aAAc,GAIhBJ,MAAO,GAGPN,MAAO,CACLW,YAAa,IAIfpD,QAAS,GAGT6C,UAAW,IAwGqB,CAChCrG,KAAM,mBADO,CAEZ6F,I,sEC3IY,ICCA,SAAuBgB,EAAMC,GAC1C,IAAIC,EAAY,IAAMC,KAAK,IAAMC,YAAW,SAAU5I,EAAO0G,GAC3D,OAAO,IAAMmC,cAAcC,EAAA,EAAS,YAAS,CAC3CpC,IAAKA,GACJ1G,GAAQwI,OAQb,OADAE,EAAUK,QAAUD,EAAA,EAAQC,QACrBL,EDbM,CAAc,IAAMG,cAAc,OAAQ,CACvDG,EAAG,wJ,uVE+CL,IAAMC,EAAYC,aAAW,SAACvG,GAAD,MAAY,CACvCmE,KAAM,CACJjC,MAAO,QAETsE,QAAS,CACPpG,SAAUJ,EAAMyG,WAAWC,QAAQ,KAErCC,YAAa,CACXvG,SAAUJ,EAAMyG,WAAWC,QAAQ,IACnCE,UAAW,SACXjC,WAAY,GAEdkC,iBAAkB,CAChBzG,SAAUJ,EAAMyG,WAAWC,QAAQ,KAErCI,QAAS,CACP1C,WAAY,SACZQ,QAAS,SAEXmC,OAAQ,CACNH,UAAW,cA8bf,SAASI,EAAT,GAA6C,IACvCtJ,EADcO,EAAwB,EAAxBA,KAAM+F,EAAkB,EAAlBA,QAAStE,EAAS,EAATA,MAyEjC,OAvEAhC,EACE,yBAAKU,UAAU,SACb,yBAAKA,UAAU,OACZH,EAAKgJ,UACJhJ,EAAKgJ,SAASxH,KAAI,SAACZ,EAAGqI,GAAJ,OAChB,yBAAK9I,UAAU,SAASwB,IAAKsH,EAAIjI,YAC/B,kBAAC+H,EAAD,CACE/I,KAAMY,EACNa,MACEA,GAA0B,kBAAVA,EACZA,EAAQ,IAAMwH,EAAIjI,WAClB,KAEN+E,QAASA,QAKhB/F,EAAKkJ,OACJlJ,EAAKkJ,MAAM1H,KAAI,SAAC2H,EAAGC,GAAJ,eACb,yBAAKjJ,UAAU,SAASwB,IAAKyH,EAAIpI,YAC/B,yBAAKb,UAAU,cACb,yCAAQgJ,EAAEE,eAAV,aAAQ,EAAWC,MACnB,yBAAKnJ,UAAU,oBACW,IAAvBgJ,EAAEE,QAAQE,UACY,IAAvBJ,EAAEE,QAAQE,UACa,IAAvBJ,EAAEE,QAAQE,UACa,IAAvBJ,EAAEE,QAAQE,SACR,2BACElJ,GAAE,gBAAWL,EAAKK,GAAhB,YAAsB8I,EAAE9I,IAC1BC,KACyB,IAAvB6I,EAAEE,QAAQE,SACN,OACuB,IAAvBJ,EAAEE,QAAQE,UAAyC,IAAvBJ,EAAEE,QAAQE,SACtC,SACA,OAENpJ,UAAS,uBACPgJ,EAAEK,UAAyC,IAA7BL,EAAEK,SAASC,OAAO5I,OAC5B,qBACA,IAENO,MAAO+H,EAAEK,UAAY,GACrB/I,SAAU,SAACC,KACX8D,UAAQ,IAGV,8BACEkF,KAAK,IACLrJ,GAAE,gBAAWL,EAAKK,GAAhB,YAAsB8I,EAAE9I,IAC1BF,UAAS,uBACPgJ,EAAEK,UAAyC,IAA7BL,EAAEK,SAASC,OAAO5I,OAC5B,qBACA,IAENO,MAAO+H,EAAEK,UAAY,GACrB/I,SAAU,SAACC,KACX8D,UAAQ,IAGZ,yBAAKrE,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,UAAoCgJ,EAAEE,eAAtC,aAAoC,EAAWM,eAW/D,kBAACC,EAAA,EAAD,CAAgBC,iBAAiB,EAAO1J,UAAU,0BAChD,kBAAC2J,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OACjC,0BAAM5J,UAAW4F,EAAQ2C,YAAarI,GAAIoB,GACvCzB,EAAK4B,QAGV,kBAACoI,EAAA,EAAD,CAAuB7J,UAAW4F,EAAQ8C,SACvCpJ,GAEH,kBAACwK,EAAA,EAAD,OAKS/K,kBAAWC,YAAQ,KAAM+K,IAAd/K,EAlhB1B,SAA0BC,GACxB,IAAQC,EAASD,EAATC,KACF8K,EAAUC,cAChB,EAA8BtK,oBAAS,GAAvC,mBAAgBuK,GAAhB,WACA,EAAsCvK,oBAAS,GAA/C,mBAAOwK,EAAP,KACA,GADA,KAC0CxK,oBAAS,IAAnD,mBAAOyK,EAAP,KAAsBC,EAAtB,KACA,EAAwB1K,mBAAS,IAAjC,mBAAOa,EAAP,KAAa8J,EAAb,KACA,EAAsB3K,mBAAS,IAA/B,mBAAY4K,GAAZ,WACA,EAAsB5K,oBAAS,GAA/B,mBACM6K,GADN,UACkBC,eAClB,EAA0C9K,mBAAS,IAAnD,mBAAO+K,EAAP,KAAsBC,EAAtB,KACA,EAAwChL,mBAAS,IAAjD,mBAAOiL,EAAP,KAAqBC,EAArB,KACA,GAAoClL,mBAAS,IAA7C,qBAAOmL,GAAP,MAAmBC,GAAnB,MACA,GAAwCpL,oBAAS,GAAjD,qBAAOqL,GAAP,MAAqBC,GAArB,MAEMC,IADKjM,EAAMkM,MAAMxG,OAAOzE,GACbjB,EAAMkM,MAAMxG,OAAOuG,UAC9B3G,GAAatF,EAAMkM,MAAMxG,OAAOJ,WAKhC6G,IAJgBC,aACpB,SAACC,GAAD,OAAWA,EAAMvB,KAAKwB,kBACtBC,KAEaH,aACb,qBAAGI,WAA4BL,SAC/BI,MAEF,GAA0C7L,mBAAS,IAAnD,qBAAO+L,GAAP,MAAsBC,GAAtB,MACA,GAA0BhM,mBAAS,MAA5BiM,GAAP,qBACMhG,GAAUsC,IA3Be,8CAkF/B,WAAkC2D,GAAlC,iBAAA7C,EAAA,2DACM6C,GAAuBA,EAAoBnL,OAAS,GAD1D,uBAEQF,EAAOqL,EACPC,EAAU,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAjD,EAAA,sDACfvI,EAAI,EADW,YACRA,EAAID,EAAKE,QADD,0CAGDkE,YAAgBpE,EAAKC,GAAGP,IAHvB,OAGhBgM,EAHgB,OAIpB1L,EAAKC,GAAG0L,eAAiBD,EAAO1L,KAAKA,KAAK2L,eAC1C3L,EAAKC,GAAG2L,IAAM5L,EAAKC,GAAG2L,IAAM5L,EAAKC,GAAG2L,IAAM,EACtC3L,IAAMD,EAAKE,OAAS,GAAGsL,IANP,kDAQpBK,IAAMC,aACJpN,EAAKmB,cAAc,CAAEH,GAAI,wBAEvBO,IAAMD,EAAKE,OAAS,GAAGsL,IAXP,QACSvL,IADT,yEAAZ,yDAHlB,SAkBUqL,EAlBV,OAmBIjB,EAAgBrK,GAnBpB,4CAlF+B,sBA6B/B+L,2BAAgB,WACd/B,EAAUgC,eAAe,CACvB,CACEC,SAAS,wBACThL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,oBAElC,CACEuM,SAAS,qCAAD,OAAuClI,GAAvC,YAAqD2G,IAC7DzJ,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,4BAGpCsK,EAAUkC,SAASxN,EAAKmB,cAAc,CAAEH,GAAI,4BAC3C,IAqBHyM,qBAnB0B,WACxBzC,GAAW,GACX5F,YAAiBC,IACdqI,MAAK,SAACV,GACLhC,GAAW,GACXI,EAAQ4B,EAAO1L,KAAKA,KAAKqM,KAAK,IAC9BlC,EAAiBuB,EAAO1L,KAAKA,KAAKsM,QAClCvC,EAAO2B,EAAO1L,KAAKA,KAAKuM,KAAOb,EAAO1L,KAAKA,KAAKuM,KAAO,IAlD9B,qCAoDzBC,CACEd,EAAO1L,KAAKA,KAAKyM,MAAQf,EAAO1L,KAAKA,KAAKyM,MAAQ,OAGrDC,OAAM,SAAC7N,GACN6K,GAAW,GACXmC,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,6BAIrB,IAkB7ByM,qBAhB0B,WACxBzC,GAAW,GACXiD,cACGP,MAAK,SAACV,GACLA,EAAO1L,KAAKA,KAAK4M,SAAQ,SAACC,GACxBA,EAAQpM,MAAQoM,EAAQnN,GACxBmN,EAAQ/K,MAAQ+K,EAAQC,WAE1B3B,GAAiBO,EAAO1L,KAAKA,SAE9B0M,OAAM,SAAC7N,GACN6K,GAAW,GACXmC,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,6BAIrB,IAmD7B,IAWMqN,GAA6B,WAEjC,IAnLkBC,EAkLlBnD,GAAiB,IACb7J,EAAOoK,EAAahL,QAnLN4N,EAmL0B1C,GAlLvC,SAAU2C,GACf,OAIgB,IAHdD,EAAW5N,QAAO,SAAUiG,GAE1B,OAAOA,EAAM3F,KAAOuN,EAAQvN,MAC3BQ,WA8KA0M,SAAQ,SAACC,GAAD,OAAcA,EAAQK,UAAYL,EAAQnN,MACvD,IAAIM,EAAO,CACT0K,YACAyC,SAAUnN,GAEZyE,YAAWzE,GACRoM,MAAK,SAACV,IApBS,WAClB,GAAId,GAAQ,CACV,IAAQwC,EAAwBC,IAAxBD,MAAOE,EAAiBD,IAAjBC,IAAKC,EAAYF,IAAZE,QACpB3C,GAAOyC,QAAQD,EAAOG,EAAS,CAAED,QAAO,SAACE,GACnCA,GACFC,QAAQC,IAAI,kBAAmBF,OAgBjCG,GACA9D,GAAiB,GACjBL,EAAQoE,QAAR,yBACA/B,IAAMC,aACJpN,EAAKmB,cAAc,CAAEH,GAAI,8BACzB,cAGHgN,OAAM,SAAC7N,GACNgL,GAAiB,GACjBgC,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,4BAIlD,OACE,kBAAC,IAAMH,SAAP,KACE,kBAACsO,EAAA,EAAD,CACE3L,KAAMsI,GACNsD,SAAS,KACTC,WAAW,EACXC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAkBxO,GAAG,0BAEvB,kBAACyO,EAAA,EAAD,KACGjE,EAAcrJ,KAAI,SAACxB,EAAMyB,GAAP,OACjB,kBAACsH,EAAD,CACEpH,IAAKF,EAAMT,WACXS,MAAOA,EAAMT,WACbhB,KAAMA,EACN+F,QAASA,SAIf,kBAACgJ,EAAA,EAAD,KACE,4BACEzO,KAAK,SACLH,UAAU,kBACVuD,QAAS,WACP0H,IAAgB,KAGlB,kBAAC,IAAD,CAAkB/K,GAAG,gBAI3B,yBAAKF,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,4DAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAd,oBACoBQ,EAAKqO,UAEzB,0BAAM7O,UAAU,cACbQ,EAAKsO,WACFC,OACGC,OAAO,IAAIC,KAAKzO,EAAKsO,aACrBI,OAAO,eACV,SAOhB,yBAAKlP,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,yDAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAkBQ,EAAK2O,QACrC,0BAAMnP,UAAU,cAAcQ,EAAK4O,YAO/C,yBAAKpP,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,MAAM,wBAChB,kBAAC,IAAD,KACE,4BACEtB,KAAK,SACLH,UAAU,kBACVuD,QAAS,WACP0H,IAAgB,KAJpB,uBAWJ,kBAAC,IAAD,KACE,2BAAOjL,UAAU,SACf,+BACE,4BACE,yCACA,oCACA,wBAAIqP,QAAS,EAAGrP,UAAU,eAA1B,WAGA,qCACA,yCACA,4BACE,kBAAC,IAAD,CAAkBE,GAAG,uBAI1B0K,EAAavJ,KAAI,SAACxB,EAAMyB,GACvB,OACE,2BAAOE,IAAKF,EAAMT,YAChB,4BACE,4BAAKhB,EAAKsJ,MACV,4BACE,kBAAC,IAAD,CACElI,MAAOpB,EAAKuM,IACZlM,GAAG,oBACHoP,YAAY,OACZtP,UAAU,eACVuP,sBAAsB,EACtBC,mBAAmB,EACnBC,eAAe,EACfC,cAAe,SAACnP,GACd,IAAIC,EAAOmP,OAAOC,OAAO,GAAIhF,GACzB9B,EAAMtI,EAAKqP,WACb,SAAC5O,GAAD,OAAWA,EAAMf,KAAOL,EAAKK,MAE/BM,EAAKsI,GAAKsD,IAAM7L,EAAEuP,WAAavP,EAAEuP,WAAa,EAC9CjF,EAAgBrK,OAItB,wBACEgD,MAAO,CACLuM,cAAe,SACfC,UAAW,WAHf,OAMGnQ,QANH,IAMGA,OANH,EAMGA,EAAMoQ,SAET,wBACEjQ,UAAU,OACVwD,MAAO,CACLuM,cAAe,SACfC,UAAW,WAJf,KASA,wBACExM,MAAO,CACLuM,cAAe,SACfC,UAAW,WAHf,OAMGnQ,QANH,IAMGA,OANH,EAMGA,EAAMqQ,SAET,wBAAIlQ,UAAU,SACZ,kBAAC,IAAD,CACEiB,OACM,OAAJpB,QAAI,IAAJA,OAAA,EAAAA,EAAMsQ,YACFzE,GAAc9L,QACZ,SAACqB,GAAD,OAAWA,EAAMA,SAAN,OAAgBpB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMsQ,eACjCzP,OAAS,EACTgL,GAAc9L,QACZ,SAACqB,GAAD,OACEA,EAAMA,SAAN,OAAgBpB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMsQ,eACxB,GACFvE,GACF,KAENwE,QAAS1E,GACT2E,YAAY,EACZC,aAAa,EACbtQ,UAAU,kDACVuQ,gBAAgB,eAChBjQ,SAAU,SAACW,QAUf,4BAAKuP,YAAO3Q,EAAK4Q,QACjB,4BAAKD,YAAO3Q,EAAK4Q,MAAQ5Q,EAAKuM,MAC9B,4BACE,2BACEjM,KAAK,WACLH,UAAU,mBACVwD,MAAO,CAAEM,MAAO,GAAI4M,OAAQ,IAC5BpQ,SAAU,SAACC,GACT,IAAIC,EAAOmP,OAAOC,OAAO,GAAI9E,IAC7B,GAAIvK,EAAES,OAAO2P,QACXnQ,EAAKU,KAAKrB,OACL,CACL,IAAIiJ,EAAMtI,EAAKqP,WACb,SAAC5O,GAAD,OAAWA,EAAMf,KAAOL,EAAKK,MAE/BM,EAAKoQ,OAAO9H,EAAK,GAEnBiC,GAAcvK,IAEhB6D,SAAU+F,MAIfvK,EAAKsM,gBACJtM,EAAKsM,eAAe9K,KAAI,SAACJ,EAAO6H,GAC9B,OACE,wBACEtH,IAAKsH,EAAIjI,WACT2C,MAAO,CAAEqN,gBAAiB,YAE1B,wBAAI7Q,UAAU,SAASiB,EAAMkI,MAC7B,4BACE,2BACEhJ,KAAK,SACLH,UAAU,eACViB,MAAOA,EAAMmL,IAAMvM,EAAKuM,IACxB9L,SAAU,aACV+D,UAAQ,KAGZ,4BAAKmM,YAAO,IACZ,4BAAKA,YAAO,IACZ,0CAYxB,yBAAKxQ,UAAU,4BACb,4BACEG,KAAK,SACLH,UAAU,6BACVwD,MAAO,CAAEM,MAAO,IAChBO,SAAU8F,GAAeC,EACzB7G,QAAS,WACPyG,EAAQ9I,KAAR,2BAGF,uBAAGlB,UAAU,oCACb,0BAAMA,UAAU,gBAAhB,WAEF,4BACEG,KAAK,SACLH,UAAU,8BACVwD,MAAO,CAAEM,MAAO,IAChBO,SAAU8F,GAAeC,EACzB7G,QAAS,WACPgK,OAGDnD,EACC,uBAAGpK,UAAU,gCAEb,uBAAGA,UAAU,6BAEf,0BAAMA,UAAU,gBAAhB,iB,8BCxeJ8Q,G,qBAAc,CAClB,CACErP,MAAO,qBACPb,KAAM,UACNhB,QAAQ,GAEV,CACE6B,MAAO,qBACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,kBACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,mBACPb,KAAM,QACNhB,QAAQ,GAEV,CACE6B,MAAO,gBACPb,KAAM,kBACNhB,QAAQ,GAEV,CACE6B,MAAO,0BACPb,KAAM,SACNhB,QAAQ,GAEV,CACE6B,MAAO,oBACPb,KAAM,UACNhB,QAAQ,GAEV,CACE6B,MAAO,cACPb,KAAM,QACNhB,QAAQ,GAEV,CACE6B,MAAO,4BACPb,KAAM,SACNhB,QAAQ,KAkGGb,kBAAWC,YAAQ,KAAM,KAAdA,EAtF1B,SAA2BC,GACzB,IAAQC,EAASD,EAATC,KACR,EAA8BS,oBAAS,GAAvC,mBAAOP,EAAP,KAAgB8K,EAAhB,KACA,EAAwBvK,mBAAS,IAAjC,mBAAOa,EAAP,KAAa8J,EAAb,KACA,EAAoC3K,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBsR,EAAnB,KACMvG,EAAYC,cAwClB,OAvCA8B,2BAAgB,WACd/B,EAAUgC,eAAe,CACvB,CACEC,SAAS,wBACThL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,oBAElC,CACEuM,SAAU,uCACVhL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,6BAGpCsK,EAAUkC,SAASxN,EAAKmB,cAAc,CAAEH,GAAI,6BAC3C,IAqBHyM,qBAnBiC,WAC/BzC,GAAW,GACX/E,cACGyH,MAAK,SAACV,GACLhC,GAAW,GACX,IAAI1J,EAAO0L,EAAO1L,KAAKA,KACvBA,EAAK4M,SAAQ,SAACC,GACZA,EAAQ2D,gBACkB,IAAxB3D,EAAQ4D,YAAoB,cAAgB,WAEhD3G,EAAQ9J,GACRuQ,EAAcvQ,MAEf0M,OAAM,SAAC7N,GACN6K,GAAW,GACXmC,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,6BAId,IAOlC,kBAAC,IAAMH,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEZ,WAAY2R,EACZrR,WAAYA,EACZD,aAVW,SAACgB,GACpB8J,EAAQ9J,IAUApB,QAASA,EACTG,MAAO,IAENiB,EAAKa,KAAI,SAACxB,EAAMyB,GACf,OACE,kBAAC4P,EAAA,EAAD,CAAU1P,IAAKF,EAAMT,YACnB,kBAACsQ,EAAA,EAAD,KAAYtR,EAAKuR,SACjB,kBAACD,EAAA,EAAD,KAAYtR,EAAKsJ,MACjB,kBAACgI,EAAA,EAAD,KAAYtR,EAAK2J,MACjB,kBAAC2H,EAAA,EAAD,KAAYX,YAAO3Q,EAAK4Q,QACxB,kBAACU,EAAA,EAAD,KAAYtR,EAAKmR,iBACjB,kBAACG,EAAA,EAAD,KAAYtR,EAAKwR,QACjB,kBAACF,EAAA,EAAD,KAAYtR,EAAKyR,SACjB,kBAACH,EAAA,EAAD,KAAYtR,EAAK0R,OACjB,kBAACJ,EAAA,EAAD,kBC3HZL,EAAc,CAClB,CACErP,MAAO,qBACPb,KAAM,UACNhB,QAAQ,GAEV,CACE6B,MAAO,qBACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,kBACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,mBACPb,KAAM,QACNhB,QAAQ,GAEV,CACE6B,MAAO,gBACPb,KAAM,kBACNhB,QAAQ,GAEV,CACE6B,MAAO,0BACPb,KAAM,SACNhB,QAAQ,GAEV,CACE6B,MAAO,oBACPb,KAAM,UACNhB,QAAQ,GAEV,CACE6B,MAAO,cACPb,KAAM,QACNhB,QAAQ,GAEV,CACE6B,MAAO,4BACPb,KAAM,SACNhB,QAAQ,IAoGGb,kBAAWC,YAAQ,KAAM,KAAdA,EAxF1B,SAAmCC,GACjC,IAAQC,EAASD,EAATC,KACR,EAA8BS,oBAAS,GAAvC,mBAAOP,EAAP,KAAgB8K,EAAhB,KACA,EAAwBvK,mBAAS,IAAjC,mBAAOa,EAAP,KAAa8J,EAAb,KACA,EAAoC3K,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBsR,EAAnB,KACMvG,EAAYC,cA0ClB,OAzCA8B,2BAAgB,WACd/B,EAAUgC,eAAe,CACvB,CACEC,SAAS,wBACThL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,oBAElC,CACEuM,SAAU,uCACVhL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,yCAGpCsK,EAAUkC,SACRxN,EAAKmB,cAAc,CAAEH,GAAI,yCAE1B,IAqBHyM,qBAnBmC,WACjCzC,GAAW,GACX9E,cACGwH,MAAK,SAACV,GACLhC,GAAW,GACX,IAAI1J,EAAO0L,EAAO1L,KAAKA,KACvBA,EAAK4M,SAAQ,SAACC,GACZA,EAAQ2D,gBACkB,IAAxB3D,EAAQ4D,YAAoB,cAAgB,WAEhD3G,EAAQ9J,GACRuQ,EAAcvQ,MAEf0M,OAAM,SAAC7N,GACN6K,GAAW,GACXmC,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,6BAIZ,IAOpC,kBAAC,IAAMH,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEZ,WAAY2R,EACZrR,WAAYA,EACZD,aAVW,SAACgB,GACpB8J,EAAQ9J,IAUApB,QAASA,EACTG,MAAO,IAENiB,EAAKa,KAAI,SAACxB,EAAMyB,GACf,OACE,kBAAC4P,EAAA,EAAD,CAAU1P,IAAKF,EAAMT,YACnB,kBAACsQ,EAAA,EAAD,KAAYtR,EAAKuR,SACjB,kBAACD,EAAA,EAAD,KAAYtR,EAAKsJ,MACjB,kBAACgI,EAAA,EAAD,KAAYtR,EAAK2J,MACjB,kBAAC2H,EAAA,EAAD,KAAYX,YAAO3Q,EAAK4Q,QACxB,kBAACU,EAAA,EAAD,KAAYtR,EAAKmR,iBACjB,kBAACG,EAAA,EAAD,KAAYtR,EAAKwR,QACjB,kBAACF,EAAA,EAAD,KAAYtR,EAAKyR,SACjB,kBAACH,EAAA,EAAD,KAAYtR,EAAK0R,OACjB,kBAACJ,EAAA,EAAD,kBCvIZL,EAAc,CAClB,CACErP,MAAO,yBACPb,KAAM,aACNhB,QAAQ,GAEV,CACE6B,MAAO,qBACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,kBACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,mBACPb,KAAM,QACNhB,QAAQ,GAEV,CACE6B,MAAO,gBACPb,KAAM,kBACNhB,QAAQ,GAEV,CACE6B,MAAO,iBACPb,KAAM,WACNhB,QAAQ,GAEV,CACE6B,MAAO,qBACPb,KAAM,cACNhB,QAAQ,GAEV,CACE6B,MAAO,4BACPb,KAAM,SACNhB,QAAQ,IA6HGb,kBAAWC,YAAQ,KAAM,KAAdA,EAjH1B,SAA0BC,GACxB,IAAQC,EAASD,EAATC,KACR,EAA8BS,oBAAS,GAAvC,mBAAOP,EAAP,KAAgB8K,EAAhB,KACA,EAAwBvK,mBAAS,IAAjC,mBAAOa,EAAP,KAAa8J,EAAb,KACA,EAAoC3K,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBsR,EAAnB,KACMvG,EAAYC,cAClB8B,2BAAgB,WACd/B,EAAUgC,eAAe,CACvB,CACEC,SAAS,wBACThL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,oBAElC,CACEuM,SAAU,0CACVhL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,uBAGpCsK,EAAUkC,SAASxN,EAAKmB,cAAc,CAAEH,GAAI,uBAC3C,IAEH,IAAMsR,EAA6B,WACjCtH,GAAW,GACX7E,cACGuH,MAAK,SAACV,GACLhC,GAAW,GACX,IAAI1J,EAAO0L,EAAO1L,KAAKA,KACvBA,EAAK4M,SAAQ,SAACC,GACZA,EAAQ2D,gBACkB,IAAxB3D,EAAQ4D,YAAoB,cAAgB,WAEhD3G,EAAQ9J,GACRuQ,EAAcvQ,MAEf0M,OAAM,SAAC7N,GACN6K,GAAW,GACXmC,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,4BA4BlD,OAxBAyM,oBAAU6E,EAA4B,IAyBpC,kBAAC,IAAMzR,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEZ,WAAY2R,EACZrR,WAAYA,EACZD,aA9BW,SAACgB,GACpB8J,EAAQ9J,IA8BApB,QAASA,EACTG,MAAO,IAENiB,EAAKa,KAAI,SAACxB,EAAMyB,GACf,OACE,kBAAC4P,EAAA,EAAD,CAAU1P,IAAKF,EAAMT,YACnB,kBAACsQ,EAAA,EAAD,KAAYtR,EAAK4R,YACjB,kBAACN,EAAA,EAAD,KAAYtR,EAAKsJ,MACjB,kBAACgI,EAAA,EAAD,KAAYtR,EAAK2J,MACjB,kBAAC2H,EAAA,EAAD,KAAYX,YAAO3Q,EAAK4Q,QACxB,kBAACU,EAAA,EAAD,KAAYtR,EAAKmR,iBACjB,kBAACG,EAAA,EAAD,KACGpC,OACEC,OAAO,IAAIC,KAAJ,OAASpP,QAAT,IAASA,OAAT,EAASA,EAAM6R,WACtBxC,OAAO,yBAEZ,kBAACiC,EAAA,EAAD,KAAYtR,EAAK8R,aACjB,kBAACR,EAAA,EAAD,KACE,4BACEhR,KAAK,SACLH,UAAU,yBACVuD,QAAS,YAhDR,SAACjC,EAAOpB,GAC3B6O,OAAO6C,EAAP,sBAAwBtQ,IAASuQ,YAAY,yBAC7C9C,OAAO6C,EAAP,sBAAwBtQ,IAASwQ,SAAS,uBAC1CrM,YAAUvF,GACP0M,MAAK,SAACV,GACL6C,OAAO6C,EAAP,sBAAwBtQ,IAASuQ,YAAY,uBAC7C9C,OAAO6C,EAAP,sBAAwBtQ,IAASwQ,SAAS,yBAC1CN,IACAnF,IAAMC,aACJpN,EAAKmB,cAAc,CAAEH,GAAI,8BACzB,cAGHgN,OAAM,SAAC7N,GACN0P,OAAO6C,EAAP,sBAAwBtQ,IAASuQ,YAAY,uBAC7C9C,OAAO6C,EAAP,sBAAwBtQ,IAASwQ,SAAS,yBAC1CzF,IAAMC,aAAapN,EAAKmB,cAAc,CAAEH,GAAI,2BAiC5BkC,CAAad,EAAOzB,EAAKK,MAG3B,uBACEA,GAAE,qBAAgBoB,GAClBtB,UAAU,mCAEZ,kBAAC,IAAD,CAAkBE,GAAG,iCC1H5BnB,sBAAWC,YAAQ,KAAM,KAAdA,EA/B1B,SAAgCC,GAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8S,OAAK,EACLC,KAAK,4BACL/N,GAAG,0BAEL,kBAAC,IAAD,CACEwD,KAAK,0DACLtG,UAAW,SAAClC,GAAD,OAAW,kBAAC,EAAqBA,IAC5C8S,OAAK,IAEP,kBAAC,IAAD,CACEtK,KAAK,uCACLtG,UAAW,SAAClC,GAAD,OAAW,kBAAC,EAAsBA,IAC7C8S,OAAK,IAEP,kBAAC,IAAD,CACEtK,KAAK,uCACLtG,UAAW,SAAClC,GAAD,OAAW,kBAAC,EAA8BA,IACrD8S,OAAK,IAEP,kBAAC,IAAD,CACEtK,KAAK,0CACLtG,UAAW,SAAClC,GAAD,OAAW,kBAAC,EAAqBA,IAC5C8S,OAAK","file":"static/js/23.a1a32d4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className={`bg-primary text-uppercase ${\r\n                        item?.td ? item?.td : \"\"\r\n                      }`}\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\nexport function getListPreOrder() {\r\n  return axios.get(`/api/v1/getpreorder`);\r\n}\r\nexport function getListStockName() {\r\n  return axios.get(`/api/v1/stockitem`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function addDrugNonDoctor(data) {\r\n  return axios.post(`/api/v1/reseppos`, data);\r\n}\r\nexport function getPoDrug(id) {\r\n  return axios.put(`/api/v1/takemissitem/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveApotek,\r\n  getMedicalRecord,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport { getTakaran } from \"../HandlingDoctor/_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  heading_new: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"96.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n    display: \"block\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n}));\r\n\r\nfunction DetailPharmacist(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [readyOrder, setReadyOrder] = useState([]);\r\n  const [dialogResume, setDialogResume] = useState(false);\r\n  const id = props.match.params.id;\r\n  const resep_id = props.match.params.resep_id;\r\n  const medical_id = props.match.params.medical_id;\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [optionTakaran, setOptionTakaran] = useState([]);\r\n  const [selectedTakaran] = useState(null);\r\n  const classes = useStyles();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/handling-page/process/${medical_id}/${resep_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medical_id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  const callApiGetTakaran = () => {\r\n    setLoading(true);\r\n    getTakaran()\r\n      .then((result) => {\r\n        result.data.data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.takaran;\r\n        });\r\n        setOptionTakaran(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetTakaran, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   async function callApiGetMedicine() {\r\n  //     if (medicinePatient && medicinePatient.length > 0) {\r\n  //       var data = medicinePatient;\r\n  //       var waiting = new Promise(async (resolve, reject) => {\r\n  //         for (let i = 0; i < data.length; i++) {\r\n  //           try {\r\n  //             var result = await getMedicineById(data[i].id);\r\n  //             data[i].composite_item = result.data.data.composite_item;\r\n  //             data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //             if (i === data.length - 1) resolve();\r\n  //           } catch (error) {\r\n  //             MODAL.showSnackbar(\r\n  //               intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //             );\r\n  //             if (i === data.length - 1) resolve();\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       await waiting;\r\n  //       setDataMedicine(data);\r\n  //     }\r\n  //   }\r\n  //   callApiGetMedicine();\r\n  // }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    var data = dataMedicine.filter(comparerData(readyOrder));\r\n    data.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      resep_id,\r\n      preorder: data,\r\n    };\r\n    saveApotek(data)\r\n      .then((result) => {\r\n        mqttPublish();\r\n        setLoadingSubmit(false);\r\n        history.replace(`/pharmacist/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogResume}\r\n        maxWidth=\"lg\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.MEDICAL_RECORD\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {dataScreening.map((item, index) => (\r\n            <ListItem\r\n              key={index.toString()}\r\n              index={index.toString()}\r\n              item={item}\r\n              classes={classes}\r\n            />\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDialogResume(false);\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    setDialogResume(true);\r\n                  }}\r\n                >\r\n                  Lihat Rekam Medis\r\n                </button>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th colSpan={4} className=\"text-center\">\r\n                      Takaran\r\n                    </th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.AVAILABLE\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {item?.eat_qty}\r\n                        </td>\r\n                        <td\r\n                          className=\"td-1\"\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          X\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            verticalAlign: \"middle\",\r\n                            textAlign: \"center\",\r\n                          }}\r\n                        >\r\n                          {item?.day_qty}\r\n                        </td>\r\n                        <td className=\"td-20\">\r\n                          <Select\r\n                            value={\r\n                              item?.takaran_id\r\n                                ? optionTakaran.filter(\r\n                                    (value) => value.value === item?.takaran_id\r\n                                  ).length > 0\r\n                                  ? optionTakaran.filter(\r\n                                      (value) =>\r\n                                        value.value === item?.takaran_id\r\n                                    )[0]\r\n                                  : selectedTakaran\r\n                                : null\r\n                            }\r\n                            options={optionTakaran}\r\n                            isDisabled={true}\r\n                            isClearable={false}\r\n                            className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                            classNamePrefix=\"react-select\"\r\n                            onChange={(value) => {\r\n                              // var data = Object.assign([], dataMedicine);\r\n                              // var idx = data.findIndex(\r\n                              //   (value) => value.id === item.id\r\n                              // );\r\n                              // data[idx].takaran_id = value ? value.value : null;\r\n                              // setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], readyOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setReadyOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty * item.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            history.push(`/pharmacist/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction ListItem({ item, classes, index }) {\r\n  let children = null;\r\n  children = (\r\n    <div className=\"w-100\">\r\n      <div className=\"row\">\r\n        {item.subtitle &&\r\n          item.subtitle.map((i, idx) => (\r\n            <div className=\"col-12\" key={idx.toString()}>\r\n              <ListItem\r\n                item={i}\r\n                index={\r\n                  index && typeof index === \"string\"\r\n                    ? index + \",\" + idx.toString()\r\n                    : null\r\n                }\r\n                classes={classes}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n        {item.input &&\r\n          item.input.map((a, adx) => (\r\n            <div className=\"col-12\" key={adx.toString()}>\r\n              <div className=\"form-group\">\r\n                <label>{a.medkind?.nama}</label>\r\n                <div className=\"input-group mb-3\">\r\n                  {a.medkind.datatype === 1 ||\r\n                  a.medkind.datatype === 2 ||\r\n                  a.medkind.datatype === 3 ||\r\n                  a.medkind.datatype === 4 ? (\r\n                    <input\r\n                      id={`input-${item.id}-${a.id}`}\r\n                      type={\r\n                        a.medkind.datatype === 1\r\n                          ? \"text\"\r\n                          : a.medkind.datatype === 2 || a.medkind.datatype === 3\r\n                          ? \"number\"\r\n                          : \"date\"\r\n                      }\r\n                      className={`form-control ${\r\n                        a.val_desc && a.val_desc.trim().length !== 0\r\n                          ? \"border-valid-input\"\r\n                          : \"\"\r\n                      }`}\r\n                      value={a.val_desc || \"\"}\r\n                      onChange={(e) => {}}\r\n                      disabled\r\n                    />\r\n                  ) : (\r\n                    <textarea\r\n                      rows=\"3\"\r\n                      id={`input-${item.id}-${a.id}`}\r\n                      className={`form-control ${\r\n                        a.val_desc && a.val_desc.trim().length !== 0\r\n                          ? \"border-valid-input\"\r\n                          : \"\"\r\n                      }`}\r\n                      value={a.val_desc || \"\"}\r\n                      onChange={(e) => {}}\r\n                      disabled\r\n                    ></textarea>\r\n                  )}\r\n                  <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{a.medkind?.unit}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ExpansionPanel defaultExpanded={false} className=\"my-5 rounded-top w-100\">\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span className={classes.heading_new} id={index}>\r\n          {item.title}\r\n        </span>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className={classes.details}>\r\n        {children}\r\n      </ExpansionPanelDetails>\r\n      <Divider />\r\n    </ExpansionPanel>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailPharmacist));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListEmptyMedicine } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscompositeName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.NUMBER_OF_ENTRIES\",\r\n    name: \"in_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.EXIT_AMOUNT\",\r\n    name: \"out_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STOCK\",\r\n    name: \"stock\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.CANCEL\",\r\n    icon: \"fas fa-ban text-danger\",\r\n    type: \"cancel\",\r\n  },\r\n];\r\n\r\nfunction ListEmptyItemPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-empty\",\r\n        title: intl.formatMessage({ id: \"LABEL.OUT_OF_MEDICINE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.OUT_OF_MEDICINE\" }));\r\n  }, []);\r\n\r\n  const callApiListEmptyMedicine = () => {\r\n    setLoading(true);\r\n    getListEmptyMedicine()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.iscompositeName =\r\n            element.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\";\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListEmptyMedicine, []);\r\n\r\n  const handleAction = (type, data) => {};\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>{item.iscompositeName}</TableCell>\r\n                  <TableCell>{item.in_qty}</TableCell>\r\n                  <TableCell>{item.out_qty}</TableCell>\r\n                  <TableCell>{item.stock}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && item.status !== \"7\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListEmptyItemPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListStockRunningOut } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscompositeName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.NUMBER_OF_ENTRIES\",\r\n    name: \"in_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.EXIT_AMOUNT\",\r\n    name: \"out_qty\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STOCK\",\r\n    name: \"stock\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.CANCEL\",\r\n    icon: \"fas fa-ban text-danger\",\r\n    type: \"cancel\",\r\n  },\r\n];\r\n\r\nfunction ListStockIsRunningOutPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-stock\",\r\n        title: intl.formatMessage({ id: \"LABEL.DRUG_STOCKS_ARE_RUNNING_OUT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(\r\n      intl.formatMessage({ id: \"LABEL.DRUG_STOCKS_ARE_RUNNING_OUT\" })\r\n    );\r\n  }, []);\r\n\r\n  const callApiListStockRunningOut = () => {\r\n    setLoading(true);\r\n    getListStockRunningOut()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.iscompositeName =\r\n            element.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\";\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListStockRunningOut, []);\r\n\r\n  const handleAction = (type, data) => {};\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>{item.iscompositeName}</TableCell>\r\n                  <TableCell>{item.in_qty}</TableCell>\r\n                  <TableCell>{item.out_qty}</TableCell>\r\n                  <TableCell>{item.stock}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && item.status !== \"7\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListStockIsRunningOutPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListPreOrder, getPoDrug } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TRANSACTION_CODE\",\r\n    name: \"kode_trans\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscompositeName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.BUY_DATE\",\r\n    name: \"buy_time\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama_pasien\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.HANDOVER\",\r\n    icon: \"fas fa-hand-holding-heart text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPreOrderPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-preorder\",\r\n        title: intl.formatMessage({ id: \"LABEL.PRE_ORDER\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PRE_ORDER\" }));\r\n  }, []);\r\n\r\n  const callApiListStockRunningOut = () => {\r\n    setLoading(true);\r\n    getListPreOrder()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.iscompositeName =\r\n            element.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\";\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListStockRunningOut, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  const handleAction = (index, id) => {\r\n    window.$(`#iconAction-${index}`).removeClass(\"fa-hand-holding-heart\");\r\n    window.$(`#iconAction-${index}`).addClass(\"fa-spinner fa-pulse\");\r\n    getPoDrug(id)\r\n      .then((result) => {\r\n        window.$(`#iconAction-${index}`).removeClass(\"fa-spinner fa-pulse\");\r\n        window.$(`#iconAction-${index}`).addClass(\"fa-hand-holding-heart\");\r\n        callApiListStockRunningOut();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        window.$(`#iconAction-${index}`).removeClass(\"fa-spinner fa-pulse\");\r\n        window.$(`#iconAction-${index}`).addClass(\"fa-hand-holding-heart\");\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_trans}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>{item.iscompositeName}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.buy_time))\r\n                      .format(\"DD MMM YYYY HH:mm:ss\")}\r\n                  </TableCell>\r\n                  <TableCell>{item.nama_pasien}</TableCell>\r\n                  <TableCell>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-primary\"\r\n                      onClick={() => {\r\n                        handleAction(index, item.id);\r\n                      }}\r\n                    >\r\n                      <i\r\n                        id={`iconAction-${index}`}\r\n                        className=\"px-2 fas fa-hand-holding-heart\"\r\n                      ></i>\r\n                      <FormattedMessage id=\"LABEL.HANDOVER\" />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPreOrderPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailPharmacist from \"./DetailPharmacist\";\r\nimport ListEmptyItemPage from \"./ListEmptyItemPage\";\r\nimport ListStockIsRunningOutPage from \"./ListStockIsRunningOutPage\";\r\nimport ListPreOrderPage from \"./ListPreOrderPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingPharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/pharmacist/handling-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/process/:medical_id/:resep_id\"\r\n        component={(props) => <DetailPharmacist {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-empty\"\r\n        component={(props) => <ListEmptyItemPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-stock\"\r\n        component={(props) => <ListStockIsRunningOutPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-preorder\"\r\n        component={(props) => <ListPreOrderPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingPharmacist));\r\n"],"sourceRoot":""}