{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/tableOnly.js","app/components/tableCustomV1/table.js","app/components/currency.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/ListPatientPage.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/StepConnector/StepConnector.js","../node_modules/@material-ui/core/esm/Stepper/Stepper.js","../node_modules/@material-ui/core/esm/Step/Step.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js","../node_modules/@material-ui/core/esm/StepIcon/StepIcon.js","../node_modules/@material-ui/core/esm/StepLabel/StepLabel.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","item","index","toString","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","Number","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","headerTable","data_ops","setLoading","setData","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","push","created_at","moment","Date","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","i","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","onChange","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","setErr","kode_pasien","kota","no_telp","email","jk","ref","classes","_props$color","valueBuffer","_props$variant","variant","other","useTheme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","concat","_transform","root","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","palette","backgroundPrimary","main","backgroundSecondary","secondary","overflow","height","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","Nav","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","id_kota","id_kec","id_kel","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","preventDefault","newParams","FormData","trim","keys","element","append","tempat_lahir","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord","createSvgIcon","d","childrenProp","_props$component","Component","imgProps","sizes","srcSet","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","display","alignItems","justifyContent","flexShrink","fontFamily","typography","pxToRem","lineHeight","borderRadius","userSelect","background","default","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","boxSizing","spacing","breakpoints","up","values","reduce","acc","breakpoint","maxWidthXs","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","_props$alternativeLab","alternativeLabel","completed","_props$orientation","orientation","line","lineHorizontal","lineVertical","flex","horizontal","vertical","borderColor","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","minHeight","defaultConnector","_props$activeStep","activeStep","_props$connector","connector","connectorProp","_props$nonLinear","nonLinear","childrenArray","toArray","steps","step","controlProps","last","elevation","flexDirection","_props$active","_props$completed","_props$disabled","_props$expanded","expanded","child","cx","cy","r","_props$error","error","Warning","CheckCircle","SvgIcon","text","x","y","textAnchor","fill","contrastText","caption","optional","StepIconComponentProp","StepIconComponent","StepIconProps","iconContainer","labelContainer","Typography","muiName","cursor","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","required","formik","useFormik","initialValues","validationSchema","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","setFieldValue","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","handleSaveRegis","exact","from","path","DetailMedicalRecord","PatientPage","ListPatientPage"],"mappings":"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","file":"static/js/7.3806b11b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={false}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"phone\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"email\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto'\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      marginLeft: 12,\n      // half icon\n      padding: '0 0 8px'\n    },\n\n    /* Styles applied to the root element if `alternativeLabel={true}`. */\n    alternativeLabel: {\n      position: 'absolute',\n      top: 8 + 4,\n      left: 'calc(-50% + 20px)',\n      right: 'calc(50% + 20px)'\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the line element. */\n    line: {\n      display: 'block',\n      borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    lineHorizontal: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    lineVertical: {\n      borderLeftStyle: 'solid',\n      borderLeftWidth: 1,\n      minHeight: 24\n    }\n  };\n};\nvar StepConnector = React.forwardRef(function StepConnector(props, ref) {\n  var active = props.active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      classes = props.classes,\n      className = props.className,\n      completed = props.completed,\n      disabled = props.disabled,\n      index = props.index,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"classes\", \"className\", \"completed\", \"disabled\", \"index\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.line, {\n      'horizontal': classes.lineHorizontal,\n      'vertical': classes.lineVertical\n    }[orientation])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepConnector'\n})(StepConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends(_extends(_extends({}, controlProps), state), step.props))];\n  });\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * An element to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nvar Step = React.forwardRef(function Step(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      connector = props.connector,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$expanded = props.expanded,\n      expanded = _props$expanded === void 0 ? false : _props$expanded,\n      index = props.index,\n      last = props.last,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"connector\", \"disabled\", \"expanded\", \"index\", \"last\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 && React.cloneElement(connector, {\n    orientation: orientation,\n    alternativeLabel: alternativeLabel,\n    index: index,\n    active: active,\n    completed: completed,\n    disabled: disabled\n  }), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Step component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.cloneElement(child, _extends({\n      active: active,\n      alternativeLabel: alternativeLabel,\n      completed: completed,\n      disabled: disabled,\n      expanded: expanded,\n      last: last,\n      icon: index + 1,\n      orientation: orientation\n    }, child.props));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   */\n  expanded: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport withStyles from '../styles/withStyles';\nimport SvgIcon from '../SvgIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      color: theme.palette.text.disabled,\n      '&$completed': {\n        color: theme.palette.primary.main\n      },\n      '&$active': {\n        color: theme.palette.primary.main\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the SVG text element. */\n    text: {\n      fill: theme.palette.primary.contrastText,\n      fontSize: theme.typography.caption.fontSize,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {}\n  };\n};\n\nvar _ref = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nvar StepIcon = React.forwardRef(function StepIcon(props, ref) {\n  var _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      icon = props.icon,\n      _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      classes = props.classes;\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    var className = clsx(classes.root, active && classes.active, error && classes.error, completed && classes.completed);\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    if (completed) {\n      return /*#__PURE__*/React.createElement(CheckCircle, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SvgIcon, {\n      className: className,\n      ref: ref\n    }, _ref, /*#__PURE__*/React.createElement(\"text\", {\n      className: classes.text,\n      x: \"12\",\n      y: \"16\",\n      textAnchor: \"middle\"\n    }, icon));\n  }\n\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepIcon'\n})(StepIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport StepIcon from '../StepIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      '&$alternativeLabel': {\n        flexDirection: 'column'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {},\n\n    /* Styles applied to the `Typography` component which wraps `children`. */\n    label: {\n      color: theme.palette.text.secondary,\n      '&$active': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$completed': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$alternativeLabel': {\n        textAlign: 'center',\n        marginTop: 16\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Pseudo-class applied to the `Typography` component if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the `Typography` component if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the `icon` container element. */\n    iconContainer: {\n      flexShrink: 0,\n      // Fix IE 11 issue\n      display: 'flex',\n      paddingRight: 8,\n      '&$alternativeLabel': {\n        paddingRight: 0\n      }\n    },\n\n    /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */\n    alternativeLabel: {},\n\n    /* Styles applied to the container element which wraps `Typography` and `optional`. */\n    labelContainer: {\n      width: '100%'\n    }\n  };\n};\nvar StepLabel = React.forwardRef(function StepLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      expanded = props.expanded,\n      icon = props.icon,\n      last = props.last,\n      optional = props.optional,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      StepIconComponentProp = props.StepIconComponent,\n      StepIconProps = props.StepIconProps,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"error\", \"expanded\", \"icon\", \"last\", \"optional\", \"orientation\", \"StepIconComponent\", \"StepIconProps\"]);\n\n  var StepIconComponent = StepIconComponentProp;\n\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),\n    ref: ref\n  }, other), icon || StepIconComponent ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.iconContainer, alternativeLabel && classes.alternativeLabel)\n  }, /*#__PURE__*/React.createElement(StepIconComponent, _extends({\n    completed: completed,\n    active: active,\n    error: error,\n    icon: icon\n  }, StepIconProps))) : null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.labelContainer\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: clsx(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error),\n    display: \"block\"\n  }, children), optional));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * The component to render in place of the [`StepIcon`](/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`StepIcon`](/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default withStyles(styles, {\n  name: 'MuiStepLabel'\n})(StepLabel);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"kel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}