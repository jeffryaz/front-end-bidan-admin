{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/ListPatientPage.js","app/modules/Patient/_redux/CrudPatient.js","app/components/navs/index.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","className","map","item","index","key","toString","id","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","to","url","icon","primary","disabled","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","headerTable","data_ops","setLoading","setData","setErr","suhbeader","useSubheader","useLayoutEffect","setBreadcrumbs","pathname","setTitle","history","push","axios","get","listPatientPagination","then","result","rows","catch","MODAL","showSnackbar","TableRow","TableCell","kode_pasien","padStart","nama","window","moment","Date","created_at","format","alamat","jk","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","match","callApiDataPatient","getDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","console","log","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","autoComplete","onSubmit","e","preventDefault","newParams","FormData","keys","forEach","element","append","post","updateDataPatient","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","tempat_lahir","onChange","options","isDisabled","classNamePrefix","no_telp","no_kk","pendidikan","pekerjaan","tgl_lahir","email","kec","kota","partner","partner_status","partner_tel","selectedKey","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","formik","useFormik","initialValues","validationSchema","values","a","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","handleSaveRegis","dataReq","reg_rule","add_user","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","exact","from","path"],"mappings":"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","file":"static/js/5.143d4373.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${data.order ? \"asc\" : \"desc\"}`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.order = !sortDatas.order;\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={sortData.order ? \"asc\" : \"desc\"}\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n    name: \"no_regis\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"name_patient\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"registration_date\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"alamat\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"gender\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>\r\n                    {\"REG\" + (item.id + \"\").padStart(6, \"0\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.alamat}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\n// import { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"Tanggal Kunjungan\",\r\n  },\r\n  {\r\n    title: \"Nomor Kunjungan\",\r\n  },\r\n  {\r\n    title: \"Poli\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    // listPatientPagination(params)\r\n    //   .then((result) => {\r\n    //     setLoading(false);\r\n    //     setData({\r\n    //       ...data,\r\n    //       count: result.data.data.count || 0,\r\n    //       data: result.data.data.rows,\r\n    //     });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setErr(true);\r\n    //     setLoading(false);\r\n    //     MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n    //   });\r\n  };\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={loading}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { getDataPatient, updateDataPatient } from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n        console.log(\"result\", result);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    Object.keys(dataForm).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <button type=\"button\" className=\"btn btn-danger\">\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Pendidikan Terakhir\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.pendidikan || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Pekerjaan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.pekerjaan || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Kecamatan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.kec || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Kecamatan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.kota || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${!statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport { listPatientPagination } from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_kk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ktpno: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Email<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Exp: SD, SMP, SMA, Diploma 1-4, Sarjana, Magister, Doktor\"\r\n                  required\r\n                  {...formik.getFieldProps(\"pendidikan\")}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Pekerjaan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"pekerjaan\")}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport { listPatientPagination } from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Kecamatan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"kec\")}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Kota/Kabupaten\"\r\n                  required\r\n                  {...formik.getFieldProps(\"kota\")}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { listPatientPagination } from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <span>Simpan</span>\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            // onClick={() => setModalHistory(false)}\r\n            // disabled={loading}\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}