{"version":3,"sources":["app/components/tableCustomV1/table.js","app/components/buttonAction/ButtonAction.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/components/textEditor/TextEditor.js","app/modules/Administrator/Article/ListArticlePage.js","app/modules/Administrator/Article/WriteArticlePage.js","app/modules/Administrator/Article/RootAdministratorArticle.js"],"names":["rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","type","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","handleClose","Fragment","id","className","map","item","index","key","toString","onClick","title","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","width","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","Boolean","handleClick","currentTarget","handleChange","listUsed","placement","aria-label","aria-controls","aria-haspopup","margin","padding","marginLeft","el","includes","to","url","icon","primary","disabled","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","activePoli","put","inactivePoli","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","editMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","createTakaran","editTakaran","deleteTakaran","getTakaran","toolbar","initialData","getData","onBlur","content","setContent","lang","height","dialogsInBody","onChange","onImageUpload","files","node","createElement","fr","FileReader","onload","setAttribute","result","ReactSummernote","insertNode","readAsDataURL","headerTable","data_ops","auth","suhbeader","useSubheader","setLoading","loadingDelete","setLoadingDelete","dataCancel","setDataCancel","setData","setErr","history","useHistory","dialogCancel","setDialogCancel","paramTable","setParamTable","useLayoutEffect","setBreadcrumbs","pathname","setTitle","requestApi","then","catch","MODAL","showSnackbar","push","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","subject","DialogActions","TableRow","TableCell","window","created_at","updated_at","initialValues","state","match","Schema","Yup","shape","required","thumbnail_img","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","newParams","FormData","dataReq","load_thumbnail_img","file_thumbnail_img","keys","forEach","element","append","console","log","setValues","setFieldTouched","autoComplete","handleSubmit","backgroundImage","toAbsoluteUrl","display","hostBase","data-action","data-toggle","data-original-title","accept","setFieldValue","getFieldProps","touched","errors","TextEditor","isValid","constructor","exact","from","path"],"mappings":"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","file":"static/js/22.ce5ec50f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poliall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function activePoli(id) {\r\n  return axios.put(`/api/v1/poli/enable/${id}`);\r\n}\r\nexport function inactivePoli(id) {\r\n  return axios.put(`/api/v1/poli/disable/${id}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function editMedicalKind(id, data) {\r\n  return axios.put(`/api/v1/medicalkind/${id}`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\nexport function createTakaran(data) {\r\n  return axios.post(`/api/v1/takaran`, data);\r\n}\r\nexport function editTakaran(id, data) {\r\n  return axios.put(`/api/v1/takaran/${id}`, data);\r\n}\r\nexport function deleteTakaran(id) {\r\n  return axios.delete(`/api/v1/takaran/${id}`);\r\n}\r\nexport function getTakaran() {\r\n  return axios.get(`/api/v1/takaran`);\r\n}\r\n","import React from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactSummernote from \"react-summernote\";\r\nimport \"react-summernote/dist/react-summernote.css\";\r\nimport \"react-summernote/lang/summernote-id-ID\";\r\nimport \"bootstrap/js/dist/modal\";\r\nimport \"bootstrap/js/dist/dropdown\";\r\nimport \"bootstrap/js/dist/tooltip\";\r\nimport \"./styles.scss\";\r\n\r\nconst toolbar = {\r\n  toolbar: [\r\n    [\"style\", [\"style\"]],\r\n    [\"font\", [\"bold\", \"underline\", \"clear\"]],\r\n    [\"fontname\", [\"fontname\"]],\r\n    [\"color\", [\"color\"]],\r\n    [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n    [\"table\", [\"table\"]],\r\n    [\"insert\", [\"link\", \"picture\", \"video\"]],\r\n  ],\r\n};\r\n\r\nconst TextEditor = (props) => {\r\n  const { initialData = \"\", getData, onBlur, options = toolbar } = props;\r\n  const [content, setContent] = React.useState(initialData);\r\n\r\n  const initial = () => {\r\n    setContent(initialData);\r\n    getData(initialData);\r\n  };\r\n\r\n  React.useEffect(initial, [initialData]);\r\n  return (\r\n    <React.Fragment>\r\n      <ReactSummernote\r\n        value={content}\r\n        options={Object.assign(\r\n          {\r\n            lang: \"id-ID\",\r\n            height: 450,\r\n            dialogsInBody: true,\r\n          },\r\n          options\r\n        )}\r\n        onChange={(e) => {\r\n          setContent(e);\r\n          getData(e);\r\n        }}\r\n        onImageUpload={(files) => {\r\n          let node = document.createElement(\"img\");\r\n          let fr = new FileReader();\r\n          fr.onload = () => {\r\n            node.setAttribute(\"src\", fr.result);\r\n            ReactSummernote.insertNode(node);\r\n          };\r\n          fr.readAsDataURL(files[0]);\r\n        }}\r\n        onBlur={onBlur}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TextEditor));\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listArticlePagination,\r\n  deleteArticleById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.TITLE\",\r\n    name: \"subject\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.CREATE_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n  {\r\n    label: \"LABEL.DELETE\",\r\n    icon: \"fas fa-trash-alt text-danger\",\r\n    type: \"delete\",\r\n  },\r\n];\r\n\r\nfunction ListArticlePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingDelete, setLoadingDelete] = useState(false);\r\n  const [dataCancel, setDataCancel] = useState({});\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const history = useHistory();\r\n  const [dialogCancel, setDialogCancel] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/article-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.ARTICLE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.ARTICLE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listArticlePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    if (type === \"open\") {\r\n      props.history.push(`/administrator/article-page/write/${data.id}`);\r\n    } else {\r\n      setDataCancel(data);\r\n      setDialogCancel(true);\r\n    }\r\n  };\r\n\r\n  const callApiDeteleArtivleById = () => {\r\n    setLoadingDelete(true);\r\n    deleteArticleById(dataCancel.id)\r\n      .then((result) => {\r\n        setDialogCancel(false);\r\n        setLoadingDelete(false);\r\n        requestApi(paramTable);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingDelete(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogCancel}\r\n        maxWidth=\"sm\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.DELETE\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          Apakah Anda yakin ingin menghapus Artikel berjudul{\" \"}\r\n          <b>{dataCancel.subject}</b>?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              setDialogCancel(false);\r\n            }}\r\n            disabled={loadingDelete}\r\n          >\r\n            <FormattedMessage id=\"LABEL.CANCEL\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            disabled={loadingDelete}\r\n            onClick={() => {\r\n              callApiDeteleArtivleById();\r\n            }}\r\n          >\r\n            {loadingDelete ? (\r\n              <FormattedMessage id=\"LABEL.WAITING\" />\r\n            ) : (\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            )}\r\n            {loadingDelete ? (\r\n              <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-save ml-2\"></i>\r\n            )}\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                history.push(`/administrator/article-page/write/new`);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.subject}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListArticlePage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  craeteArticle,\r\n  getArticleById,\r\n  editArticle,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\nimport TextEditor from \"../../../components/textEditor/TextEditor\";\r\n\r\nconst initialValues = {};\r\n\r\nfunction WriteArticlePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(false);\r\n  const history = useHistory();\r\n  const state = props.match.params.state;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/article-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.ARTICLE_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/article-page/write/${state}`,\r\n        title: intl.formatMessage({ id: \"LABEL.ARTICLE_WRITING\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.ARTICLE_WRITING\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    subject: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    content: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    thumbnail_img: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoading(true);\r\n      let newParams = new FormData();\r\n      var dataReq = Object.assign({}, values);\r\n      delete dataReq.load_thumbnail_img;\r\n      if (dataReq.file_thumbnail_img && dataReq.file_thumbnail_img !== null) {\r\n        dataReq.thumbnail_img = dataReq.file_thumbnail_img;\r\n      } else {\r\n        delete dataReq.thumbnail_img;\r\n      }\r\n      delete dataReq.file_thumbnail_img;\r\n      Object.keys(dataReq).forEach((element) => {\r\n        newParams.append(element, dataReq[element]);\r\n      });\r\n      if (state === \"new\") {\r\n        craeteArticle(newParams)\r\n          .then((result) => {\r\n            console.log(\"result create ->\", result);\r\n            history.push(`/administrator/article-page/list`);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err -> new\", err);\r\n            setLoading(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      } else {\r\n        editArticle(state, newParams)\r\n          .then((result) => {\r\n            console.log(\"result edit ->\", result);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\"\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"err -> edit\", err);\r\n            setLoading(false);\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const getUserPic = () => {\r\n    if (!formik.values.thumbnail_img) {\r\n      return \"none\";\r\n    }\r\n\r\n    return `url(${hostBase()}/storage/app/thumbnail_img/${\r\n      formik.values.thumbnail_img\r\n    })`;\r\n  };\r\n\r\n  const callApiArticleById = () => {\r\n    if (state !== \"new\") {\r\n      getArticleById(state)\r\n        .then((result) => {\r\n          formik.setValues(result.data.data);\r\n          formik.setFieldTouched({ ...formik, subject: true });\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(callApiArticleById, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <form\r\n            className=\"form\"\r\n            autoComplete=\"off\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div\r\n              className=\"image-input image-input-outline\"\r\n              style={{\r\n                backgroundImage: `url(${toAbsoluteUrl(\r\n                  \"/media/bg/image_2.jpg\"\r\n                )}`,\r\n                margin: \"0 4.5%\",\r\n                display: \"block\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"image-input-wrapper\"\r\n                style={{\r\n                  backgroundImage: `${\r\n                    formik.values?.file_thumbnail_img\r\n                      ? `url('${formik.values?.load_thumbnail_img}')`\r\n                      : getUserPic()\r\n                  }`,\r\n                  width: \"100%\",\r\n                  height: \"calc(60vh)\",\r\n                }}\r\n              />\r\n              <label\r\n                className=\"btn btn-md btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                data-action=\"change\"\r\n                data-toggle=\"tooltip\"\r\n                title=\"\"\r\n                data-original-title=\"Change avatar\"\r\n              >\r\n                <i className=\"fa fa-pen icon-md text-primary\"></i>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".png, .jpg, .jpeg\"\r\n                  onChange={(e) => {\r\n                    let fr = new FileReader();\r\n                    fr.onload = () => {\r\n                      formik.setFieldValue(\"load_thumbnail_img\", fr.result);\r\n                    };\r\n                    fr.readAsDataURL(e.target.files[0]);\r\n                    formik.setFieldValue(\r\n                      \"file_thumbnail_img\",\r\n                      e.target.files[0]\r\n                    );\r\n\r\n                    if (state === \"new\")\r\n                      formik.setFieldValue(\"thumbnail_img\", e.target.files[0]);\r\n                  }}\r\n                />\r\n              </label>\r\n            </div>\r\n            <span className=\"form-text text-muted mt-5\">\r\n              Hanya menerima type file: png, jpg, jpeg.\r\n              <span className=\"text-left text-danger\">\r\n                <FormattedMessage id=\"LABEL.VALIDATION_REQUIRED_FIELD\" />\r\n              </span>\r\n            </span>\r\n            <div className=\"mt-5 pt-5\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"LABEL.TITLE\" />\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"subject\")}\r\n                />\r\n                {formik.touched.subject && formik.errors.subject && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.subject}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <FormattedMessage id=\"LABEL.CONTENTS\" />\r\n                </label>\r\n                <TextEditor\r\n                  initialData={formik.values.content}\r\n                  getData={(e) => {\r\n                    formik.setFieldValue(\"content\", e);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched({ ...formik, content: true });\r\n                  }}\r\n                />\r\n                {formik.touched.content && formik.errors.content && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.content}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"toolbar-custom scrolltop\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm my-2\"\r\n                style={{ width: 60 }}\r\n                disabled={loading}\r\n                onClick={() => {\r\n                  history.push(`/administrator/article-page/list`);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n                <span className=\"font-size-xs\">Cancel</span>\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-sm my-2\"\r\n                style={{ width: 60 }}\r\n                disabled={\r\n                  !formik.isValid ||\r\n                  (Object.keys(formik.touched).length === 0 &&\r\n                    formik.touched.constructor === Object) ||\r\n                  loading\r\n                }\r\n                onClick={() => {}}\r\n              >\r\n                {loading ? (\r\n                  <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-check d-block p-0\"></i>\r\n                )}\r\n                <span className=\"font-size-xs\">Submit</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(WriteArticlePage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListArticlePage from \"./ListArticlePage\";\r\nimport WriteArticlePage from \"./WriteArticlePage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorArticle(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/article-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/article-page/list\"\r\n        component={(props) => <ListArticlePage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/administrator/article-page/write/:state\"\r\n        component={(props) => <WriteArticlePage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorArticle));\r\n"],"sourceRoot":""}