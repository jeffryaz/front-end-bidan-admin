{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/modules/Administrator/MasterData/ListPoliPage.js","app/modules/Administrator/MasterData/RootAdministratorMasterData.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","index","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","Fragment","item","toString","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","listPoliPagination","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","put","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","useHistory","dialog","setDialog","paramTable","setParamTable","statusDialog","setStatusDialog","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","poli","required","ruangan","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","then","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","setValues","setFieldTouched","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","getFieldProps","touched","errors","DialogActions","isValid","keys","constructor","TableRow","TableCell","window","moment","Date","updated_at","format","exact","from","path"],"mappings":"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","file":"static/js/11.324690cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poli${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listPoliPagination,\r\n  craetePoli,\r\n  getPoliById,\r\n  editPoliById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ROOM\",\r\n    name: \"ruangan\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListPoliPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/poli`,\r\n        title: intl.formatMessage({ id: \"LABEL.POLI\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.POLI\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    poli: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ruangan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        craetePoli(values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editPoliById(statusDialog, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listPoliPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    setStatusDialog(data.id);\r\n    getPoliById(data.id)\r\n      .then((result) => {\r\n        formik.setValues(result.data.data);\r\n        formik.setFieldTouched(\"poli\", true);\r\n        setDialog(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.POLI\" />\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"poli\")}\r\n                />\r\n                {formik.touched.poli && formik.errors.poli && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.poli}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.ROOM\" />\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"ruangan\")}\r\n                />\r\n                {formik.touched.ruangan && formik.errors.ruangan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ruangan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loadingSave\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={5}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.poli}</TableCell>\r\n                  <TableCell>{item?.ruangan}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListPoliPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPoliPage from \"./ListPoliPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorMasterData(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/master-data-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/master-data-page/poli\"\r\n        component={(props) => <ListPoliPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorMasterData));\r\n"],"sourceRoot":""}