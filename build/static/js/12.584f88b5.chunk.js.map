{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/tableOnly.js","app/components/currency.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/HandlingPharmacist/DetailPharmacist.js","app/modules/HandlingPharmacist/ListEmptyItemPage.js","app/modules/HandlingPharmacist/ListStockIsRunningOutPage.js","app/modules/HandlingPharmacist/RootHandlingPharmacist.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","url","className","icon","primary","disabled","injectIntl","connect","props","intl","dataHeader","loading","children","hecto","Fragment","component","Paper","item","index","toString","format","countryCode","currency","number","options","currencyDisplay","Intl","NumberFormat","rupiah","getMedicalRecord","medical_id","axios","get","listMedicinePagination","params","getMedicineById","createMedicine","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","color","palette","action","active","flexShrink","display","name","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","paddingLeft","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","auth","history","useHistory","setLoading","loadingSave","loadingSubmit","setLoadingSubmit","setData","setLab","suhbeader","useSubheader","setDataScreening","dataMedicine","setDataMedicine","readyOrder","setReadyOrder","resep_id","match","dataMedicinePatient","a","length","waiting","i","result","composite_item","qty","MODAL","showSnackbar","formatMessage","useSelector","state","medicinePatient","shallowEqual","clientMqtt","client","useLayoutEffect","setBreadcrumbs","pathname","setTitle","useEffect","form","screen","labs","callApiGetMedicine","resep","catch","code_reg","created_at","window","moment","Date","pasien","poli","nama","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","e","Object","assign","idx","findIndex","floatValue","harga","height","onChange","target","checked","push","splice","backgroundColor","otherArray","current","forEach","element","barang_id","preorder","callApiSubmitMedicalRecord","headerTable","TableRow","TableCell","barcode","unit","iscomposite","in_qty","out_qty","stock","exact","from"],"mappings":"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","file":"static/js/12.584f88b5.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveApotek,\r\n  getMedicalRecord,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nfunction DetailPharmacist(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [readyOrder, setReadyOrder] = useState([]);\r\n  const id = props.match.params.id;\r\n  const resep_id = props.match.params.resep_id;\r\n  const medical_id = props.match.params.medical_id;\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/handling-page/process/${medical_id}/${resep_id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medical_id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   async function callApiGetMedicine() {\r\n  //     if (medicinePatient && medicinePatient.length > 0) {\r\n  //       var data = medicinePatient;\r\n  //       var waiting = new Promise(async (resolve, reject) => {\r\n  //         for (let i = 0; i < data.length; i++) {\r\n  //           try {\r\n  //             var result = await getMedicineById(data[i].id);\r\n  //             data[i].composite_item = result.data.data.composite_item;\r\n  //             data[i].qty = data[i].qty ? data[i].qty : 1;\r\n  //             if (i === data.length - 1) resolve();\r\n  //           } catch (error) {\r\n  //             MODAL.showSnackbar(\r\n  //               intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n  //             );\r\n  //             if (i === data.length - 1) resolve();\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       await waiting;\r\n  //       setDataMedicine(data);\r\n  //     }\r\n  //   }\r\n  //   callApiGetMedicine();\r\n  // }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    var data = dataMedicine.filter(comparerData(readyOrder));\r\n    data.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      resep_id,\r\n      preorder: data,\r\n    };\r\n    saveApotek(data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        history.push(`/pharmacist/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar></CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.AVAILABLE\" />\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], readyOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setReadyOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            history.push(`/pharmacist/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailPharmacist));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListEmptyMedicine } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n  },\r\n  {\r\n    title: \"LABEL.NUMBER_OF_ENTRIES\",\r\n  },\r\n  {\r\n    title: \"LABEL.EXIT_AMOUNT\",\r\n  },\r\n  {\r\n    title: \"LABEL.STOCK\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.CANCEL\",\r\n    icon: \"fas fa-ban text-danger\",\r\n    type: \"cancel\",\r\n  },\r\n];\r\n\r\nfunction ListEmptyItemPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-empty\",\r\n        title: intl.formatMessage({ id: \"LABEL.OUT_OF_MEDICINE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.OUT_OF_MEDICINE\" }));\r\n  }, []);\r\n\r\n  const callApiListEmptyMedicine = () => {\r\n    setLoading(true);\r\n    getListEmptyMedicine()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListEmptyMedicine, []);\r\n\r\n  const handleAction = (type, data) => {};\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly dataHeader={headerTable} loading={loading} hecto={10}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>\r\n                    {item.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.in_qty}</TableCell>\r\n                  <TableCell>{item.out_qty}</TableCell>\r\n                  <TableCell>{item.stock}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && item.status !== \"7\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListEmptyItemPage));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getListStockRunningOut } from \"./_redux/CrudHandlingPharmacist\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n  },\r\n  {\r\n    title: \"LABEL.NUMBER_OF_ENTRIES\",\r\n  },\r\n  {\r\n    title: \"LABEL.EXIT_AMOUNT\",\r\n  },\r\n  {\r\n    title: \"LABEL.STOCK\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.CANCEL\",\r\n    icon: \"fas fa-ban text-danger\",\r\n    type: \"cancel\",\r\n  },\r\n];\r\n\r\nfunction ListStockIsRunningOutPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const suhbeader = useSubheader();\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: \"/pharmacist/handling-page/list-stock\",\r\n        title: intl.formatMessage({ id: \"LABEL.DRUG_STOCKS_ARE_RUNNING_OUT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(\r\n      intl.formatMessage({ id: \"LABEL.DRUG_STOCKS_ARE_RUNNING_OUT\" })\r\n    );\r\n  }, []);\r\n\r\n  const callApiListStockRunningOut = () => {\r\n    setLoading(true);\r\n    getListStockRunningOut()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListStockRunningOut, []);\r\n\r\n  const handleAction = (type, data) => {};\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly dataHeader={headerTable} loading={loading} hecto={10}>\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga)}</TableCell>\r\n                  <TableCell>\r\n                    {item.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.in_qty}</TableCell>\r\n                  <TableCell>{item.out_qty}</TableCell>\r\n                  <TableCell>{item.stock}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && item.status !== \"7\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListStockIsRunningOutPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailPharmacist from \"./DetailPharmacist\";\r\nimport ListEmptyItemPage from \"./ListEmptyItemPage\";\r\nimport ListStockIsRunningOutPage from \"./ListStockIsRunningOutPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingPharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/pharmacist/handling-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/process/:medical_id/:resep_id\"\r\n        component={(props) => <DetailPharmacist {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-empty\"\r\n        component={(props) => <ListEmptyItemPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/handling-page/list-stock\"\r\n        component={(props) => <ListStockIsRunningOutPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingPharmacist));\r\n"],"sourceRoot":""}