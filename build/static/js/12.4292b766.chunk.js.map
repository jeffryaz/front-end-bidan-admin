{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/DetailMedicalRecordSpecialCase.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","td","key","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","palette","action","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","specialCase","setSpecialCase","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","transaksi","form","screen","labs","callApiGetMedicine","resep","countSubTotal","harga","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","verticalAlign","special","payamt","pay_amt","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","controlled","default","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","role","undefined","input","newChecked","cursor","opacity","height","top","left","zIndex","createSvgIcon","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","text","colorPrimary","main","hoverOpacity","colorSecondary","optionParameter","screeningItem","useStyles","makeStyles","heading","typography","pxToRem","secondaryHeading","details","column","flexBasis","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","selectedTakaran","setSelectedTakaran","optionTakaran","setOptionTakaran","items","group_id","setScreeningPatient","setMedicinePatient","getTakaran","forEach","element","takaran","mqttPublish","topic","publish","qos","payload","error","console","log","isDisabled","classNamePrefix","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","updated_at","upd_user","Divider","initialQty","focus","select","eat_qty","day_qty","takaran_id","isClearable","splice","cancelMedicalRecord","barang_id","screenitems","screenitems_","trim","treatment_kind","detail_resep","saveMedicalRecord","callApiSaveMedicalRecord","submitMedicalRecord","callApiSubmitMedicalRecord","getSpecialCase","detail","submitMedicalRecordSpecialCase","topicCallSpecialCase","callSpecialCase","qosCallSpecialCase","payloadCallSpecialCase","mqttPublishSpecialCase","code_trans","MedicalRecord","listAllReservationDoctor","statusName","TableRow","TableCell","kode_pasien","tgl_book","listMedicalRecordDone","special_case_id","setErr","dataChecked","setDataChecked","listMedicinePagination","Checkbox","barcode","unit","exact","from"],"mappings":"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","file":"static/js/12.4292b766.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className={`bg-primary text-uppercase ${\r\n                        item?.td ? item?.td : \"\"\r\n                      }`}\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase(result.data.data.transaksi);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        // onClick={() => {\r\n                        //   var item = cloneDeep(specialCase);\r\n                        //   item.special = specialCase.special === 0 ? 1 : 0;\r\n                        //   setSpecialCase(item);\r\n                        // }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id=\"NumberFormat-text\"\r\n                        value={specialCase.payamt}\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {specialCase.special === 0\r\n                        ? rupiah(data.fee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase.payamt)}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Bayar</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={specialCase.pay_amt}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={false}\r\n                        allowNegative={false}\r\n                        thousandSeparator={true}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Kembalian</th>\r\n                    <th colSpan=\"2\">\r\n                      {specialCase?.special === 0\r\n                        ? rupiah(\r\n                            specialCase.pay_amt -\r\n                              (data.fee + countSubTotal(dataMedicine))\r\n                          )\r\n                        : rupiah(specialCase - specialCase?.payamt)}\r\n                    </th>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Lab\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n  getTakaran,\r\n} from \"./_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nconst screeningItem = [\r\n  {\r\n    label: \"Anamnesa\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Pemeriksaan Fisik\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Pemeriksaan Penunjang\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Diagnosa\",\r\n    item: [],\r\n  },\r\n  {\r\n    label: \"Penata Laksanaan\",\r\n    item: [],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n}));\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState(screeningItem);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n  const classes = useStyles();\r\n  const [selectedTakaran, setSelectedTakaran] = useState(null);\r\n  const [optionTakaran, setOptionTakaran] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase(result.data.data.transaksi);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          var data = cloneDeep(dataScreening);\r\n          var items = result.data.data.screen;\r\n          data[0].item = items.filter((item) => item.group_id === 1);\r\n          data[1].item = items.filter((item) => item.group_id === 2);\r\n          data[2].item = items.filter((item) => item.group_id === 3);\r\n          data[3].item = items.filter((item) => item.group_id === 4);\r\n          data[4].item = items.filter((item) => item.group_id === 5);\r\n          props.setScreeningPatient(data);\r\n          setDataScreening(data);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  const callApiGetTakaran = () => {\r\n    setLoading(true);\r\n    getTakaran()\r\n      .then((result) => {\r\n        result.data.data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.takaran;\r\n        });\r\n        setOptionTakaran(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetTakaran, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    var screenitems_ = [\r\n      ...dataScreening[0].item,\r\n      ...dataScreening[1].item,\r\n      ...dataScreening[2].item,\r\n      ...dataScreening[3].item,\r\n      ...dataScreening[4].item,\r\n    ];\r\n    for (let i = 0; i < screenitems_.length; i++) {\r\n      if (\r\n        screenitems_[i].val_desc &&\r\n        screenitems_[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(screenitems_[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n      special: specialCase.special,\r\n      payamt: specialCase.payamt,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    var screenitems_ = [\r\n      ...dataScreening[0].item,\r\n      ...dataScreening[1].item,\r\n      ...dataScreening[2].item,\r\n      ...dataScreening[3].item,\r\n      ...dataScreening[4].item,\r\n    ];\r\n    for (let i = 0; i < screenitems_.length; i++) {\r\n      if (\r\n        screenitems_[i].val_desc &&\r\n        screenitems_[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(screenitems_[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n      special: specialCase.special,\r\n      payamt: specialCase.payamt,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <ExpansionPanel\r\n                      defaultExpanded={true}\r\n                      key={index.toString()}\r\n                      className=\"my-5 rounded-top w-100\"\r\n                    >\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                      >\r\n                        {item.label}\r\n                      </ExpansionPanelSummary>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <div className=\"row w-100\">\r\n                          {item.item.map((value, idx) => {\r\n                            return (\r\n                              <div key={idx.toString()} className=\"col-sm-4\">\r\n                                <div className=\"form-group\">\r\n                                  <span className=\"d-flex justify-content-between\">\r\n                                    <label>{value.label_kind}</label>\r\n                                    <small\r\n                                      id=\"emailHelp\"\r\n                                      className=\"form-text text-muted\"\r\n                                    >\r\n                                      {value.updated_at\r\n                                        ? window\r\n                                            .moment(new Date(value.updated_at))\r\n                                            .format(\"DD MMM YYYY HH:mm:ss\")\r\n                                        : \"\"}\r\n                                      <span className=\"text-uppercase\">\r\n                                        {value.upd_user || \"\"}\r\n                                      </span>\r\n                                    </small>\r\n                                  </span>\r\n                                  {value.datatype === 1 ||\r\n                                  value.datatype === 2 ||\r\n                                  value.datatype === 3 ||\r\n                                  value.datatype === 4 ? (\r\n                                    <input\r\n                                      type={\r\n                                        value.datatype === 1\r\n                                          ? \"text\"\r\n                                          : value.datatype === 2 ||\r\n                                            value.datatype === 3\r\n                                          ? \"number\"\r\n                                          : \"date\"\r\n                                      }\r\n                                      className=\"form-control\"\r\n                                      id={(value.label_kind + value.id)\r\n                                        .match(/[a-zA-Z0-9]+/g)\r\n                                        .join(\"\")}\r\n                                      value={value.val_desc || \"\"}\r\n                                      onChange={(e) => {\r\n                                        var data = cloneDeep(dataScreening);\r\n                                        data[index].item[idx].val_desc =\r\n                                          e.target.value;\r\n                                        setDataScreening(data);\r\n                                        props.setScreeningPatient(data);\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                    <textarea\r\n                                      rows=\"3\"\r\n                                      className=\"form-control\"\r\n                                      id={(value.label_kind + value.id)\r\n                                        .match(/[a-zA-Z0-9]+/g)\r\n                                        .join(\"\")}\r\n                                      value={value.val_desc}\r\n                                      onChange={(e) => {\r\n                                        var data = cloneDeep(dataScreening);\r\n                                        data[index].item[idx].val_desc =\r\n                                          e.target.value;\r\n                                        setDataScreening(data);\r\n                                        props.setScreeningPatient(data);\r\n                                      }}\r\n                                    ></textarea>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </ExpansionPanelDetails>\r\n                      <Divider />\r\n                    </ExpansionPanel>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th colSpan={4} className=\"text-center\">\r\n                      Takaran\r\n                    </th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td className=\"td-10\">\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.target.focus();\r\n                              e.target.select();\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td className=\"td-10\">\r\n                          <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            className=\"form-control\"\r\n                            value={item?.eat_qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].eat_qty = e.target.value\r\n                                ? e.target.value\r\n                                : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td\r\n                          className=\"td-1\"\r\n                          style={{ verticalAlign: \"middle\" }}\r\n                        >\r\n                          X\r\n                        </td>\r\n                        <td className=\"td-10\">\r\n                          <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            className=\"form-control\"\r\n                            value={item?.day_qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].day_qty = e.target.value\r\n                                ? e.target.value\r\n                                : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td className=\"td-20\">\r\n                          <Select\r\n                            value={\r\n                              item?.takaran_id\r\n                                ? optionTakaran.filter(\r\n                                    (value) => value.value === item?.takaran_id\r\n                                  ).length > 0\r\n                                  ? optionTakaran.filter(\r\n                                      (value) =>\r\n                                        value.value === item?.takaran_id\r\n                                    )[0]\r\n                                  : selectedTakaran\r\n                                : null\r\n                            }\r\n                            options={optionTakaran}\r\n                            isDisabled={false}\r\n                            isClearable={true}\r\n                            className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                            classNamePrefix=\"react-select\"\r\n                            onChange={(value) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].takaran_id = value ? value.value : null;\r\n                              setDataMedicine(data);\r\n                              setSelectedTakaran(value);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special === 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={handlingFee}\r\n                        displayType={\r\n                          specialCase?.special === 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special === 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        onClick={() => {\r\n                          var item = cloneDeep(specialCase);\r\n                          item.special = specialCase.special === 0 ? 1 : 0;\r\n                          setSpecialCase(item);\r\n                        }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special !== 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={specialCase.payamt}\r\n                        displayType={\r\n                          specialCase?.special !== 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          var item = cloneDeep(specialCase);\r\n                          item.payamt = e.floatValue ? e.floatValue : 0;\r\n                          setSpecialCase(item);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special !== 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {specialCase.special === 0\r\n                        ? rupiah(handlingFee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase.payamt)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id)\r\n              .then((result) => {\r\n                history.push(`/doctor/dashboard`);\r\n              })\r\n              .catch((err) => {\r\n                MODAL.showSnackbar(\r\n                  intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n                );\r\n              });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  submitMedicalRecordSpecialCase,\r\n  getSpecialCase,\r\n  getTakaran,\r\n} from \"./_redux/CrudHandlingDoctor\";\r\nimport { publish, callSpecialCase } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecordSpecialCase(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const suhbeader = useSubheader();\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient } = useSelector((state) => state.auth, shallowEqual);\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n  const [selectedTakaran, setSelectedTakaran] = useState(null);\r\n  const [optionTakaran, setOptionTakaran] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process-special/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getSpecialCase(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase({\r\n          payamt: result.data.data.resep[0].payamt,\r\n          special: result.data.data.resep[0].special,\r\n        });\r\n        setData(result.data.data.resep[0]);\r\n        setHandlingFee(result.data.data.resep[0].fee || 0);\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.detail ? result.data.data.detail : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.detail ? result.data.data.detail : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  const callApiGetTakaran = () => {\r\n    setLoading(true);\r\n    getTakaran()\r\n      .then((result) => {\r\n        result.data.data.forEach((element) => {\r\n          element.value = element.id;\r\n          element.label = element.takaran;\r\n        });\r\n        setOptionTakaran(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetTakaran, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].barang_id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].barang_id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const mqttPublishSpecialCase = () => {\r\n    if (client) {\r\n      const {\r\n        topicCallSpecialCase,\r\n        qosCallSpecialCase,\r\n        payloadCallSpecialCase,\r\n      } = callSpecialCase;\r\n      client.publish(\r\n        topicCallSpecialCase,\r\n        payloadCallSpecialCase,\r\n        { qosCallSpecialCase },\r\n        (error) => {\r\n          if (error) {\r\n            console.log(\"Publish error: \", error);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    // dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      payamt: specialCase?.payamt,\r\n    };\r\n    submitMedicalRecordSpecialCase(id, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        mqttPublishSpecialCase();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_trans}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.nama}</h4>\r\n                  {/* <span className=\"text-muted\">{data.poli}</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                {/* <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link> */}\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th colSpan={4} className=\"text-center\">\r\n                      Takaran\r\n                    </th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td className=\"td-10\">\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td className=\"td-10\"></td>\r\n                        <td className=\"td-1\">X</td>\r\n                        <td className=\"td-10\"></td>\r\n                        <td className=\"td-20\">\r\n                          <Select\r\n                            value={\r\n                              item?.takaran_id\r\n                                ? optionTakaran.filter(\r\n                                    (value) => value.value === item?.takaran_id\r\n                                  ).length > 0\r\n                                  ? optionTakaran.filter(\r\n                                      (value) =>\r\n                                        value.value === item?.takaran_id\r\n                                    )[0]\r\n                                  : selectedTakaran\r\n                                : null\r\n                            }\r\n                            options={optionTakaran}\r\n                            isDisabled={true}\r\n                            className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                            classNamePrefix=\"react-select\"\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special === 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={handlingFee}\r\n                        displayType={\r\n                          specialCase?.special === 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special === 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        // onClick={() => {\r\n                        //   var item = cloneDeep(specialCase);\r\n                        //   item.special = specialCase.special === 0 ? 1 : 0;\r\n                        //   setSpecialCase(item);\r\n                        // }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special !== 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={specialCase?.payamt || 0}\r\n                        displayType={\r\n                          specialCase?.special !== 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          var item = cloneDeep(specialCase);\r\n                          item.payamt = e.floatValue ? e.floatValue : 0;\r\n                          setSpecialCase(item);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special !== 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {specialCase.special === 0\r\n                        ? rupiah(handlingFee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase?.payamt || 0)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            history.replace(`/doctor/dashboard`);\r\n            props.setMedicinePatient([]);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(null, auth.actions)(DetailMedicalRecordSpecialCase)\r\n);\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const special_case_id = props.match.params.special_case_id;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process${\r\n          special_case_id ? \"-special\" : \"\"\r\n        }/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process${\r\n                    special_case_id ? \"-special\" : \"\"\r\n                  }/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process${\r\n                    special_case_id ? \"-special\" : \"\"\r\n                  }/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecordSpecialCase from \"./DetailMedicalRecordSpecialCase\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process-special/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecordSpecialCase {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}