{"version":3,"sources":["app/components/tableCustomV1/table.js","app/components/tableCustomV1/tableOnly.js","app/components/currency.js","app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingPharmacist/ListProduct.js","app/modules/HandlingPharmacist/RootMedicinePharmacist.js"],"names":["injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","type","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","index","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","Fragment","id","className","map","item","key","toString","data-toggle","aria-expanded","onClick","title","style","paddingRight","paddingLeft","color","role","zIndex","width","padding","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","format","countryCode","currency","number","options","currencyDisplay","Intl","NumberFormat","rupiah","getMedicalRecord","medical_id","axios","get","listMedicinePagination","getMedicineById","createMedicine","post","saveApotek","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","ref","_props$checkedIcon","checkedIcon","classes","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","other","SwitchBase","root","concat","capitalize","checked","disabled","fontSize","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","headerTable","headerTableMedicine","auth","useHistory","setLoading","loadingReq","setLoadingReq","setData","setErr","dialogPackage","setDialogPackage","dialogMedicine","setDialogMedicine","barcode","nama","unit","harga","iscomposite","addPackage","setAddPackage","suhbeader","useSubheader","useSelector","clientMqtt","client","shallowEqual","dataChecked","setDataChecked","state","setState","paramTable","setParamTable","useLayoutEffect","setBreadcrumbs","pathname","setTitle","requestApi","then","result","catch","MODAL","showSnackbar","isEnabled","Dialog","open","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TableRow","TableCell","Checkbox","findIndex","onChange","e","push","idx","splice","DialogActions","autoComplete","onSubmit","preventDefault","forEach","element","barang_id","itemcomposite","console","log","response","messages","required","toUpperCase","displayType","allowEmptyFormatting","allowLeadingZeros","thousandSeparator","allowNegative","prefix","onValueChange","floatValue","Switch","colSpan","qty","exact","from","to","path"],"mappings":"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","file":"static/js/11.53eb8e0f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  listMedicinePagination,\r\n  createMedicine,\r\n  saveApotek,\r\n  getMedicalRecord,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n  Switch,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscomposite\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst headerTableMedicine = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n  },\r\n];\r\n\r\nfunction ListProduct(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingReq, setLoadingReq] = useState(false);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dialogPackage, setDialogPackage] = useState(false);\r\n  const [dialogMedicine, setDialogMedicine] = useState(false);\r\n  const [addPackage, setAddPackage] = useState({\r\n    barcode: \"\",\r\n    nama: \"\",\r\n    unit: \"\",\r\n    harga: 0,\r\n    iscomposite: false,\r\n  });\r\n  const suhbeader = useSubheader();\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const [state, setState] = useState(\"new\");\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/medicine-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }));\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const saveProduct = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = {\r\n      barcode: addPackage?.barcode,\r\n      nama: addPackage?.nama,\r\n      unit: addPackage?.unit,\r\n      harga: addPackage?.harga,\r\n      iscomposite: addPackage?.iscomposite,\r\n    };\r\n    if (addPackage?.iscomposite) {\r\n      dataChecked.forEach((element) => (element.barang_id = element.id));\r\n      data.itemcomposite = dataChecked;\r\n    }\r\n    console.log(\"masuk\", data);\r\n    if (state === \"new\") {\r\n      createMedicine(data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    }\r\n    // setDialogPackage(false);\r\n  };\r\n\r\n  const isEnabled =\r\n    addPackage.barcode.length > 0 &&\r\n    addPackage.nama.length > 0 &&\r\n    addPackage.unit.length > 0;\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogMedicine}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <TableOnly dataHeader={headerTableMedicine} hecto={8}>\r\n            {data.data\r\n              .filter((item) => item.iscomposite === 0)\r\n              .map((item, index) => {\r\n                return (\r\n                  <TableRow key={index.toString()}>\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        indeterminate={false}\r\n                        checked={\r\n                          dataChecked.findIndex(\r\n                            (value) => value.id === item.id\r\n                          ) !== -1\r\n                        }\r\n                        onChange={(e) => {\r\n                          var data = Object.assign([], dataChecked);\r\n                          if (e.target.checked) {\r\n                            data.push(item);\r\n                          } else {\r\n                            var idx = data.findIndex(\r\n                              (value) => value.id === item.id\r\n                            );\r\n                            data.splice(idx, 1);\r\n                          }\r\n                          setDataChecked(data);\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{item.barcode}</TableCell>\r\n                    <TableCell>{item.nama}</TableCell>\r\n                    <TableCell>{item.unit}</TableCell>\r\n                    <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableOnly>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setDialogMedicine(false);\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogPackage}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n        </DialogTitle>\r\n\r\n        <form autoComplete=\"off\" onSubmit={saveProduct}>\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_CODE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.barcode}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, barcode: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.nama}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, nama: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.unit}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      unit: e.target.value.toUpperCase(),\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loadingReq ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={addPackage?.harga}\r\n                  displayType={loadingReq ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  thousandSeparator={true}\r\n                  allowNegative={false}\r\n                  prefix={\"Rp \"}\r\n                  onValueChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      harga: e.floatValue ? e.floatValue : 0,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PACKAGE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Switch\r\n                  checked={addPackage?.iscomposite}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      iscomposite: e.target.checked,\r\n                    });\r\n                  }}\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            {addPackage?.iscomposite && (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.QTY\" />\r\n                    </th>\r\n                    <th className=\"text-right\" style={{ maxWidth: 80 }}>\r\n                      <button\r\n                        className=\"btn btn-warning btn-sm\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setDialogMedicine(true);\r\n                        }}\r\n                      >\r\n                        <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n                      </button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataChecked.map((item, index) => {\r\n                    return (\r\n                      <tr key={index.toString()}>\r\n                        <td>{item.nama}</td>\r\n                        <td>{item.unit}</td>\r\n                        <td colSpan=\"2\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={item.qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataChecked);\r\n                              data[index].qty = e.target.value;\r\n                              setDataChecked(data);\r\n                            }}\r\n                            required={true}\r\n                            disabled={loadingReq}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogPackage(false);\r\n                setAddPackage({\r\n                  barcode: \"\",\r\n                  nama: \"\",\r\n                  unit: \"\",\r\n                  harga: 0,\r\n                  iscomposite: false,\r\n                });\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !isEnabled ||\r\n                (addPackage.iscomposite === true && dataChecked.length == 0) ||\r\n                loadingReq\r\n              }\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setState(\"new\");\r\n                setDialogPackage(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-prescription-bottle mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PACKAGE\" />\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\">\r\n              <i className=\"fas fa-capsules mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                  <TableCell>\r\n                    {item.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <button type=\"button\" className=\"btn btn-success\">\r\n                      <i className=\"far fa-edit mx-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.EDIT\" />\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListProduct));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListProduct from \"./ListProduct\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootMedicinePharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/pharmacist/medicine-page\"\r\n        to=\"/pharmacist/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/pharmacist/medicine-page/list\"\r\n        component={(props) => <ListProduct {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootMedicinePharmacist));\r\n"],"sourceRoot":""}