{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/RootPatient.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","className","map","item","index","key","toString","id","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","to","url","icon","primary","disabled","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","listProvince","axios","get","listCity","prov","listDistricts","city","listWard","districts","headerTable","data_ops","setLoading","setData","setErr","suhbeader","useSubheader","useLayoutEffect","setBreadcrumbs","pathname","setTitle","history","push","listPatientPagination","then","result","rows","catch","MODAL","showSnackbar","TableRow","TableCell","kode_pasien","nama","window","moment","Date","created_at","format","kota","no_telp","email","jk","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","match","patient_id","code_reg","poli","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","useSelector","state","auth","user","shallowEqual","callApiDataPatient","getDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","Number","id_kota","id_kec","id_kel","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","e","preventDefault","newParams","FormData","trim","keys","element","append","post","updateDataPatient","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","tempat_lahir","onChange","options","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","formik","useFormik","initialValues","validationSchema","values","a","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","handleSaveRegis","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","Lab","setLab","dataScreening","setDataScreening","medicalRecordId","medical_id","form","screen","labs","pasien","dokter","label_kind","datatype","join","val_desc","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","exact","from","path"],"mappings":"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","file":"static/js/5.f6525f2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${id}/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={false}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.code_reg}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${!statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"kel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n      {\r\n        pathname: `/registry/patient/list/${id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>Resep Yang Diberikan</CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}