{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/ListPatientPage.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","className","map","item","index","key","toString","id","title","listPatientPagination","params","axios","get","getDataPatient","updateDataPatient","data","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","to","url","icon","primary","disabled","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","openFilterTable","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","headerTable","data_ops","setLoading","setData","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","push","created_at","moment","Date","format","code_reg","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","pasien","dokter","label_kind","datatype","join","val_desc","onChange","rows","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","setErr","kode_pasien","nama","kota","no_telp","email","jk","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","Number","id_kota","id_kec","id_kel","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","e","preventDefault","newParams","FormData","trim","keys","element","append","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","tempat_lahir","options","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","formik","useFormik","initialValues","validationSchema","values","a","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","handleSaveRegis","exact","from","path","DetailMedicalRecord","PatientPage","ListPatientPage"],"mappings":"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","file":"static/js/7.7ae88289.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={false}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.code_reg}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>Resep Yang Diberikan</CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"kel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}