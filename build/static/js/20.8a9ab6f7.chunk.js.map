{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/buttonAction/ButtonAction.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/DetailMedicalRecordSpecialCase.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","url","className","icon","primary","disabled","listPatientPagination","params","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","ListItemIcon","props","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","color","palette","action","active","flexShrink","display","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","component","multiline","flex","marginBottom","paddingLeft","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","getSpecialCase","listMedicinePagination","cancelMedicalRecord","put","saveMedicalRecord","submitMedicalRecord","listMedicalRecordDone","listAllReservationDoctor","listSpecialCase","submitMedicalRecordSpecialCase","headerTable","data_ops","injectIntl","connect","intl","setLoading","setData","dataSecond","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","useEffect","result","catch","MODAL","showSnackbar","formatMessage","window","location","pathname","split","history","push","Fragment","dataHeader","handleFilter","loading","hecto","item","index","toString","created_at","moment","Date","format","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","specialCase","setSpecialCase","dataMedicinePatient","a","waiting","i","length","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","transaksi","form","screen","labs","callApiGetMedicine","resep","countSubTotal","count","harga","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","onChange","rows","nama","displayType","allowEmptyFormatting","allowLeadingZeros","allowNegative","onValueChange","e","Object","assign","idx","findIndex","floatValue","rupiah","backgroundColor","colSpan","fee","thousandSeparator","prefix","fixedDecimalScale","decimalScale","verticalAlign","special","payamt","pay_amt","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","optionParameter","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","setScreeningPatient","setMedicinePatient","mqttPublish","topic","publish","qos","payload","console","log","options","isDisabled","classNamePrefix","updated_at","upd_user","target","initialQty","focus","select","splice","cloneDeep","forEach","element","barang_id","screenitems","trim","treatment_kind","detail_resep","callApiSaveMedicalRecord","replace","callApiSubmitMedicalRecord","detail","code_trans","MedicalRecord","statusName","status","TableRow","TableCell","kode_pasien","tgl_book","order","special_case_id","setErr","dataChecked","setDataChecked","handleParams","countData","Checkbox","indeterminate","checked","barcode","unit","exact","from"],"mappings":"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","file":"static/js/20.8a9ab6f7.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getSpecialCase(id) {\r\n  return axios.get(`/api/v1/special/${id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function listSpecialCase() {\r\n  return axios.get(`/api/v1/special`);\r\n}\r\nexport function submitMedicalRecordSpecialCase(id, data) {\r\n  return axios.put(`/api/v1/processspecial/${id}`, data);\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase(result.data.data.transaksi);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        // onClick={() => {\r\n                        //   var item = cloneDeep(specialCase);\r\n                        //   item.special = specialCase.special === 0 ? 1 : 0;\r\n                        //   setSpecialCase(item);\r\n                        // }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id=\"NumberFormat-text\"\r\n                        value={specialCase.payamt}\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {specialCase.special === 0\r\n                        ? rupiah(data.fee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase.payamt)}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Bayar</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={specialCase.pay_amt}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={false}\r\n                        allowNegative={false}\r\n                        thousandSeparator={true}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Kembalian</th>\r\n                    <th colSpan=\"2\">\r\n                      {specialCase?.special === 0\r\n                        ? rupiah(\r\n                            specialCase.pay_amt -\r\n                              (data.fee + countSubTotal(dataMedicine))\r\n                          )\r\n                        : rupiah(specialCase - specialCase?.payamt)}\r\n                    </th>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Lab\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase(result.data.data.transaksi);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          props.setScreeningPatient(\r\n            result.data.data.screen ? result.data.data.screen : []\r\n          );\r\n          setDataScreening(result.data.data.screen);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n      special: specialCase.special,\r\n      payamt: specialCase.payamt,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n      special: specialCase.special,\r\n      payamt: specialCase.payamt,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-sm-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {item.updated_at\r\n                              ? window\r\n                                  .moment(new Date(item.updated_at))\r\n                                  .format(\"DD MMM YYYY HH:mm:ss\")\r\n                              : \"\"}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc || \"\"}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.target.focus();\r\n                              e.target.select();\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special === 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={handlingFee}\r\n                        displayType={\r\n                          specialCase?.special === 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special === 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        onClick={() => {\r\n                          var item = cloneDeep(specialCase);\r\n                          item.special = specialCase.special === 0 ? 1 : 0;\r\n                          setSpecialCase(item);\r\n                        }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special !== 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={specialCase.payamt}\r\n                        displayType={\r\n                          specialCase?.special !== 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          var item = cloneDeep(specialCase);\r\n                          item.payamt = e.floatValue ? e.floatValue : 0;\r\n                          setSpecialCase(item);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special !== 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {specialCase.special === 0\r\n                        ? rupiah(handlingFee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase.payamt)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id)\r\n              .then((result) => {\r\n                history.push(`/doctor/dashboard`);\r\n              })\r\n              .catch((err) => {\r\n                MODAL.showSnackbar(\r\n                  intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n                );\r\n              });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  submitMedicalRecordSpecialCase,\r\n  getSpecialCase,\r\n} from \"./_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecordSpecialCase(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const suhbeader = useSubheader();\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient } = useSelector((state) => state.auth, shallowEqual);\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process-special/${id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getSpecialCase(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase({\r\n          payamt: result.data.data.resep[0].payamt,\r\n          special: result.data.data.resep[0].special,\r\n        });\r\n        setData(result.data.data.resep[0]);\r\n        setHandlingFee(result.data.data.resep[0].fee || 0);\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.detail ? result.data.data.detail : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.detail ? result.data.data.detail : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].barang_id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].barang_id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    // dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var data = {\r\n      payamt: specialCase?.payamt,\r\n    };\r\n    submitMedicalRecordSpecialCase(id, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        history.replace(`/doctor/dashboard`);\r\n        mqttPublish();\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_trans}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.nama}</h4>\r\n                  {/* <span className=\"text-muted\">{data.poli}</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                {/* <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link> */}\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              if (\r\n                                data[idx].composite_item &&\r\n                                data[idx].composite_item.length > 0\r\n                              ) {\r\n                                data[idx].composite_item.map((value) => {\r\n                                  if (!value.initialQty) {\r\n                                    value.initialQty = value.qty;\r\n                                  }\r\n                                  return (value.qty =\r\n                                    value.initialQty * data[idx].qty);\r\n                                });\r\n                              }\r\n                              setDataMedicine(data);\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.target.focus();\r\n                              e.target.select();\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special === 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={handlingFee}\r\n                        displayType={\r\n                          specialCase?.special === 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special === 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        // onClick={() => {\r\n                        //   var item = cloneDeep(specialCase);\r\n                        //   item.special = specialCase.special === 0 ? 1 : 0;\r\n                        //   setSpecialCase(item);\r\n                        // }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id={\r\n                          specialCase?.special !== 0\r\n                            ? \"NumberFormat-input\"\r\n                            : \"NumberFormat-text\"\r\n                        }\r\n                        value={specialCase?.payamt || 0}\r\n                        displayType={\r\n                          specialCase?.special !== 0 ? \"input\" : \"text\"\r\n                        }\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          var item = cloneDeep(specialCase);\r\n                          item.payamt = e.floatValue ? e.floatValue : 0;\r\n                          setSpecialCase(item);\r\n                        }}\r\n                        onClick={(e) => {\r\n                          if (specialCase?.special !== 0) {\r\n                            e.target.focus();\r\n                            e.target.select();\r\n                          }\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {specialCase.special === 0\r\n                        ? rupiah(handlingFee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase?.payamt || 0)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            history.replace(`/doctor/dashboard`);\r\n            props.setMedicinePatient([]);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(null, auth.actions)(DetailMedicalRecordSpecialCase)\r\n);\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const special_case_id = props.match.params.special_case_id;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process${\r\n          special_case_id ? \"-special\" : \"\"\r\n        }/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process${\r\n                    special_case_id ? \"-special\" : \"\"\r\n                  }/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process${\r\n                    special_case_id ? \"-special\" : \"\"\r\n                  }/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecordSpecialCase from \"./DetailMedicalRecordSpecialCase\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process-special/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecordSpecialCase {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}