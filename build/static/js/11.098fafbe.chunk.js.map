{"version":3,"sources":["app/components/buttonAction/ButtonAction.js","app/components/currency.js","app/components/tableCustomV1/tableOnly.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","app/modules/HandlingDoctor/_redux/CrudHandlingDoctor.js","app/modules/HandlingDoctor/DetailMedicalRecord.js","app/modules/HandlingDoctor/ListMedicalRecord.js","app/modules/HandlingDoctor/ListReservationPage.js","app/modules/HandlingDoctor/ListDonePatientPage.js","app/modules/HandlingDoctor/ListDrugPage.js","app/modules/HandlingDoctor/RootHandlingDoctor.js"],"names":["CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","data","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","title","id","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","map","to","key","url","className","icon","primary","disabled","format","countryCode","currency","number","options","currencyDisplay","Intl","NumberFormat","rupiah","injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","item","dataFilter","Fragment","htmlFor","placeholder","formatMessage","onChange","e","i","length","j","name","toString","toLowerCase","target","value","push","component","Paper","index","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","SwitchBase","ref","autoFocus","checkedProp","checked","checkedIcon","classes","defaultChecked","disabledProp","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","other","_useControlled","controlled","default","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","root","role","undefined","input","newChecked","cursor","opacity","height","top","left","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$color","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","size","concat","capitalize","palette","text","secondary","colorPrimary","main","action","hoverOpacity","colorSecondary","optionParameter","useHistory","loadingSave","setLoadingSave","loadingSubmit","setLoadingSubmit","handlingFee","setHandlingFee","medicinePatient","screeningPatient","client","clientMqtt","selectedParameter","setSelectedParameter","console","log","setScreeningPatient","setMedicinePatient","callApiSaveMedicalRecord","forEach","element","barang_id","screenitems","trim","treatment_kind","detail_resep","put","saveMedicalRecord","callApiSubmitMedicalRecord","submitMedicalRecord","isDisabled","classNamePrefix","updated_at","upd_user","splice","topic","publish","qos","payload","error","mqttPublish","cancelMedicalRecord","MedicalRecord","statusName","TableRow","TableCell","kode_pasien","tgl_book","setErr","dataChecked","setDataChecked","listMedicinePagination","Checkbox","barcode","unit","exact","from","path"],"mappings":"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","file":"static/js/11.098fafbe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","const format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: 'currency',\r\n    currencyDisplay: 'symbol',\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format('id-ID', 'IDR', number);\r\n\r\nexport default format;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  getMedicineById,\r\n  cancelMedicalRecord,\r\n  saveMedicalRecord,\r\n  submitMedicalRecord,\r\n} from \".//_redux/CrudHandlingDoctor\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\n\r\nconst optionParameter = [\r\n  { value: \"1\", label: \"Rawat Inap\" },\r\n  { value: \"2\", label: \"Rawat Jalan\" },\r\n];\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [handlingFee, setHandlingFee] = useState(0);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let { medicinePatient, screeningPatient } = useSelector(\r\n    (state) => state.auth,\r\n    shallowEqual\r\n  );\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [selectedParameter, setSelectedParameter] = useState({\r\n    value: \"2\",\r\n    label: \"Rawat Jalan\",\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(medicalRecordId)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setHandlingFee(result.data.data.form[0].fee || 0);\r\n        console.log(\"result\", result);\r\n        if (\r\n          (screeningPatient && screeningPatient.length === 0) ||\r\n          !screeningPatient\r\n        ) {\r\n          props.setScreeningPatient(\r\n            result.data.data.screen ? result.data.data.screen : []\r\n          );\r\n          setDataScreening(result.data.data.screen);\r\n        } else {\r\n          setDataScreening(screeningPatient);\r\n        }\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        if (\r\n          (medicinePatient && medicinePatient.length === 0) ||\r\n          !medicinePatient\r\n        ) {\r\n          // setDataMedicine(result.data.data.resep ? result.data.data.resep : []);\r\n          props.setMedicinePatient(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n          callApiGetMedicine(\r\n            result.data.data.resep ? result.data.data.resep : []\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    if (dataMedicinePatient && dataMedicinePatient.length > 0) {\r\n      var data = dataMedicinePatient;\r\n      var waiting = new Promise(async (resolve, reject) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          try {\r\n            var result = await getMedicineById(data[i].id);\r\n            data[i].composite_item = result.data.data.composite_item;\r\n            data[i].qty = data[i].qty ? data[i].qty : 1;\r\n            if (i === data.length - 1) resolve();\r\n          } catch (error) {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n            );\r\n            if (i === data.length - 1) resolve();\r\n          }\r\n        }\r\n      });\r\n      await waiting;\r\n      setDataMedicine(data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function callApiGetMedicine() {\r\n      if (medicinePatient && medicinePatient.length > 0) {\r\n        var data = medicinePatient;\r\n        var waiting = new Promise(async (resolve, reject) => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var result = await getMedicineById(data[i].id);\r\n              data[i].composite_item = result.data.data.composite_item;\r\n              data[i].qty = data[i].qty ? data[i].qty : 1;\r\n              if (i === data.length - 1) resolve();\r\n            } catch (error) {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n              if (i === data.length - 1) resolve();\r\n            }\r\n          }\r\n        });\r\n        await waiting;\r\n        setDataMedicine(data);\r\n      }\r\n    }\r\n    callApiGetMedicine();\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  const callApiSaveMedicalRecord = () => {\r\n    setLoadingSave(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    saveMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSave(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiSubmitMedicalRecord = () => {\r\n    setLoadingSubmit(true);\r\n    dataMedicine.forEach((element) => (element.barang_id = element.id));\r\n    var screenitems = [];\r\n    for (let i = 0; i < dataScreening.length; i++) {\r\n      if (\r\n        dataScreening[i].val_desc &&\r\n        dataScreening[i].val_desc.toString().trim().length != 0\r\n      )\r\n        screenitems.push(dataScreening[i]);\r\n    }\r\n    var data = {\r\n      treatment_kind: selectedParameter.value,\r\n      screenitems,\r\n      detail_resep: dataMedicine,\r\n      fee: handlingFee,\r\n    };\r\n    submitMedicalRecord(medicalRecordId, data)\r\n      .then((result) => {\r\n        setLoadingSubmit(false);\r\n        props.setMedicinePatient([]);\r\n        props.setScreeningPatient([]);\r\n        history.push(`/doctor/dashboard`);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingSubmit(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h4>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h4 className=\"text-dark mb-1\">{data.pasien}</h4>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={false}\r\n                    className=\"form-control form-control-sm border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-history mx-1\"></i>\r\n                  <FormattedMessage id=\"LABEL.HISTORY\" />\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-sm-4\">\r\n                      <div className=\"form-group\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                          <label>{item.label_kind}</label>\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            {item.updated_at\r\n                              ? window\r\n                                  .moment(new Date(item.updated_at))\r\n                                  .format(\"DD MMM YYYY HH:mm:ss\")\r\n                              : \"\"}\r\n                            <span className=\"text-uppercase\">\r\n                              {item.upd_user || \"\"}\r\n                            </span>\r\n                          </small>\r\n                        </span>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc || \"\"}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataScreening);\r\n                              data[index].val_desc = e.target.value;\r\n                              setDataScreening(data);\r\n                              props.setScreeningPatient(data);\r\n                            }}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              {/* <div className=\"row\">\r\n                <div className=\"col-12\">Diagnosa Dokter</div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"form-group\">\r\n                    <textarea rows=\"3\" className=\"form-control\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\">\r\n              <CardHeaderToolbar>\r\n                <Link\r\n                  to={`/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/medicine-list`}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <i className=\"fas fa-prescription-bottle-alt mx-1\"></i>\r\n                  Penambahan Obat\r\n                </Link>\r\n              </CardHeaderToolbar>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                    <th>Aksi</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            displayType=\"input\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"far fa-trash-alt text-danger cursor-pointer\"\r\n                            onClick={() => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data.splice(idx, 1);\r\n                              setDataMedicine(data);\r\n                              props.setMedicinePatient(data);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={item.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td></td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={handlingFee}\r\n                        displayType=\"input\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {\r\n                          setHandlingFee(e.floatValue ? e.floatValue : 0);\r\n                        }}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td colSpan=\"2\">\r\n                      {rupiah(handlingFee + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"toolbar-custom scrolltop\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            mqttPublish();\r\n            cancelMedicalRecord(data.id).catch((err) => {\r\n              MODAL.showSnackbar(\r\n                intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" })\r\n              );\r\n            });\r\n            props.setMedicinePatient([]);\r\n            props.setScreeningPatient([]);\r\n            history.push(`/doctor/dashboard`);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-times-circle d-block p-0\"></i>\r\n          <span className=\"font-size-xs\">Cancel</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSaveMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSave ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-save d-block p-0\"></i>\r\n          )}\r\n\r\n          <span className=\"font-size-xs\">Save</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm my-2\"\r\n          style={{ width: 60 }}\r\n          disabled={loadingSave || loadingSubmit}\r\n          onClick={() => {\r\n            callApiSubmitMedicalRecord();\r\n          }}\r\n        >\r\n          {loadingSubmit ? (\r\n            <i className=\"fas fa-spinner fa-pulse p-2\"></i>\r\n          ) : (\r\n            <i className=\"fas fa-check d-block p-0\"></i>\r\n          )}\r\n          <span className=\"font-size-xs\">Submit</span>\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailMedicalRecord));\r\n","import React, { useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport MedicalRecord from \"../Patient/patientPages/MedicalRecord\";\r\n\r\nfunction ListMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }));\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MedicalRecord {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListMedicalRecord));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listAllReservationDoctor } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListReservationPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/list-reservation`,\r\n        title: intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.RESERVATION_LIST\" }));\r\n  }, []);\r\n\r\n  const callApiListAllReservation = () => {\r\n    setLoading(true);\r\n    listAllReservationDoctor()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListAllReservation, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListReservationPage));\r\n","import React, { useLayoutEffect, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecordDone } from \"./_redux/CrudHandlingDoctor\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"tgl_book\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"statusName\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nfunction ListDonePatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/done`,\r\n        title: intl.formatMessage({ id: \"LABEL.DONE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DONE\" }));\r\n  }, []);\r\n\r\n  const callApiListMedicalRecordDone = () => {\r\n    setLoading(true);\r\n    listMedicalRecordDone()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        data.forEach((element) => {\r\n          element.statusName =\r\n            element.status === \"1\"\r\n              ? intl.formatMessage({ id: \"LABEL.BOOKING\" })\r\n              : element.status === \"2\"\r\n              ? intl.formatMessage({ id: \"LABEL.CANCELED\" })\r\n              : element.status === \"3\"\r\n              ? intl.formatMessage({ id: \"LABEL.CHECKIN_SCREENING\" })\r\n              : element.status === \"4\"\r\n              ? intl.formatMessage({ id: \"LABEL.POLI_PROCESS\" })\r\n              : element.status === \"5\"\r\n              ? intl.formatMessage({ id: \"LABEL.PHARMACIST\" })\r\n              : element.status === \"6\"\r\n              ? intl.formatMessage({ id: \"LABEL.PAYMENT\" })\r\n              : intl.formatMessage({ id: \"LABEL.FINISH\" });\r\n        });\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedicalRecordDone, []);\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={loading}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.tgl_book}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>{item.statusName}</TableCell>\r\n                  <TableCell>\r\n                    {/* {item.status !== \"2\" && (\r\n                      <ButtonAction\r\n                        data={item}\r\n                        handleAction={handleAction}\r\n                        ops={data_ops}\r\n                      />\r\n                    )} */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListDonePatientPage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listMedicinePagination } from \"./_redux/CrudHandlingDoctor\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell, Checkbox } from \"@material-ui/core\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport { rupiah } from \"../../components/currency\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"number\",\r\n    },\r\n  },\r\n];\r\n\r\nfunction ListDrugPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const patient_id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const history = useHistory();\r\n  let medicinePatient = useSelector(\r\n    (state) => state.auth.medicinePatient,\r\n    shallowEqual\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/doctor/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n      },\r\n      {\r\n        pathname: `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}/medicine-list`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICINE_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (medicinePatient) setDataChecked(medicinePatient);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger mx-1\"\r\n              onClick={() => {\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-1\"\r\n              onClick={() => {\r\n                props.setMedicinePatient(dataChecked);\r\n                history.push(\r\n                  `/doctor/handling-page/process/${patient_id}/${antrian_id}/${medicalRecordId}`\r\n                );\r\n              }}\r\n            >\r\n              <i className=\"fas fa-save\"></i>\r\n              <FormattedMessage id=\"LABEL.SAVE\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListDrugPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport DetailMedicalRecord from \"./DetailMedicalRecord\";\r\nimport DetailMedicalRecords from \"../Patient/patientPages/DetailMedicalRecord\";\r\nimport ListMedicalRecord from \"./ListMedicalRecord\";\r\nimport ListReservationPage from \"./ListReservationPage\";\r\nimport ListDonePatientPage from \"./ListDonePatientPage\";\r\nimport ListDrugPage from \"./ListDrugPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootHandlingDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/handling-page\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list/:medicalRecordIdPass\"\r\n        component={(props) => <DetailMedicalRecords {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/list\"\r\n        component={(props) => <ListMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId/medicine-list\"\r\n        component={(props) => <ListDrugPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/process/:id/:antrian_id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/list-reservation\"\r\n        component={(props) => <ListReservationPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/handling-page/done\"\r\n        component={(props) => <ListDonePatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootHandlingDoctor));\r\n"],"sourceRoot":""}