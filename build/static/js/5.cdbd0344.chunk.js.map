{"version":3,"sources":["app/components/tableCustomV1/table.js","app/components/buttonAction/ButtonAction.js","app/modules/Patient/ListPatientPage.js","app/modules/Patient/_redux/CrudPatient.js","app/components/navs/index.js","app/components/tableCustomV1/tableOnly.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/PatientPage.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["injectIntl","connect","props","intl","dataHeader","handleParams","loading","err","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","openFilterTable","index","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","Fragment","id","className","map","item","key","toString","data-toggle","aria-expanded","onClick","title","style","paddingRight","paddingLeft","color","role","zIndex","width","padding","type","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","currentTarget","handleClose","handleChange","listUsed","placement","IconButton","aria-label","aria-controls","aria-haspopup","MoreVert","margin","Menu","keepMounted","onClose","PaperProps","marginLeft","el","includes","to","url","MenuItem","ListItemIcon","icon","ListItemText","primary","disabled","headerTable","data_ops","setLoading","setData","setErr","useSubheader","setTitle","history","push","axios","get","listPatientPagination","then","result","rows","catch","MODAL","showSnackbar","TableRow","TableCell","kode_pasien","padStart","nama","window","moment","Date","created_at","format","alamat","jk","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","other","Nav","variant","onSelect","Item","Link","eventKey","fontWeight","TableContainer","Table","TableHead","TableBody","optionParameter","optionParameterGender","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","height","suhbeader","classes","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","match","callApiDataPatient","getDataPatient","ktpno","statusIndex","findIndex","status_nikah","genderIndex","console","log","LinearProgress","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","autoComplete","onSubmit","e","preventDefault","newParams","FormData","keys","forEach","element","append","post","updateDataPatient","displayType","mask","allowEmptyFormatting","allowLeadingZeros","onValueChange","floatValue","tempat_lahir","onChange","options","isDisabled","classNamePrefix","no_telp","no_kk","pendidikan","pekerjaan","tgl_lahir","email","kec","kota","partner","partner_status","partner_tel","selectedKey","steps","Stepper","alternativeLabel","Step","completed","StepLabel","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","shape","required","formik","useFormik","initialValues","validationSchema","values","a","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","max","setFieldValue","undefined","setErrors","onBlur","dataAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","handleSaveRegis","dataReq","reg_rule","add_user","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","Container","exact","from","path"],"mappings":"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","file":"static/js/5.cdbd0344.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${data.order ? \"asc\" : \"desc\"}`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.order = !sortDatas.order;\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={sortData.order ? \"asc\" : \"desc\"}\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n    name: \"no_regis\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"name_patient\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"registration_date\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"alamat\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"gender\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n\r\n  suhbeader.setTitle(\r\n    intl.formatMessage({\r\n      id: \"LABEL.PATIENT_LIST\",\r\n    })\r\n  );\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>\r\n                    {\"REG\" + (item.id + \"\").padStart(6, \"0\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.alamat}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React, {\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\n// import { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"Tanggal Kunjungan\",\r\n  },\r\n  {\r\n    title: \"Nomor Kunjungan\",\r\n  },\r\n  {\r\n    title: \"Poli\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    // listPatientPagination(params)\r\n    //   .then((result) => {\r\n    //     setLoading(false);\r\n    //     setData({\r\n    //       ...data,\r\n    //       count: result.data.data.count || 0,\r\n    //       data: result.data.data.rows,\r\n    //     });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setErr(true);\r\n    //     setLoading(false);\r\n    //     MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n    //   });\r\n  };\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/registry/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={loading}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>-</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { getDataPatient, updateDataPatient } from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const id = props.match.params.id;\r\n\r\n  suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n        console.log(\"result\", result);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    Object.keys(dataForm).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n    console.log(\"dataForm\", dataForm);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"d-flex\">\r\n            <Avatar\r\n              alt=\"Foto\"\r\n              src={\r\n                dataForm?.photo_pasien\r\n                  ? `${hostBase()}/storage/app/photo_pasien/${\r\n                      dataForm?.photo_pasien\r\n                    }`\r\n                  : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n              }\r\n              className={classes.bigAvatar}\r\n            />\r\n            <div className=\"py-5\">\r\n              <h1>{nama}</h1>\r\n              <h6>{ktp}</h6>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Pendidikan Terakhir\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.pendidikan || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Pekerjaan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.pekerjaan || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Kecamatan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.kec || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Kecamatan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.kota || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${!statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport { listPatientPagination } from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_kk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ktpno: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Email<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Exp: SD, SMP, SMA, Diploma 1-4, Sarjana, Magister, Doktor\"\r\n                  required\r\n                  {...formik.getFieldProps(\"pendidikan\")}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Pekerjaan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"pekerjaan\")}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport { listPatientPagination } from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Kecamatan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"kec\")}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Kota/Kabupaten\"\r\n                  required\r\n                  {...formik.getFieldProps(\"kota\")}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { listPatientPagination } from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <span>Simpan</span>\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, {\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n\r\n  suhbeader.setTitle(\r\n    intl.formatMessage({\r\n      id: \"LABEL.REGISTRATION\",\r\n    })\r\n  );\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            // onClick={() => setModalHistory(false)}\r\n            // disabled={loading}\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}