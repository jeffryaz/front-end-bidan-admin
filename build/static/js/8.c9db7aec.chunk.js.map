{"version":3,"sources":["../node_modules/@material-ui/core/esm/Container/Container.js","app/modules/ScreenQueue/QueuePage.js","app/modules/ScreenQueue/_redux/CrudScreenQueue.js"],"names":["Container","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","root","concat","String","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","injectIntl","connect","intl","useState","1","2","3","dataQueue","setQueue","client","useSelector","clientMqtt","shallowEqual","useEffect","axios","get","then","result","data","queue","catch","err","MODAL","showSnackbar","formatMessage","id","on","topic","message","payload","toString","console","log","Fragment","style","backgroundImage","toAbsoluteUrl","height","backgroundPosition","backgroundSize","src","alt","href","fontSize","map","item","index","kode_pasien","nama"],"mappings":"2GAAA,iEAqEIA,EAAY,cAAiB,SAAmBC,EAAOC,GACzD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAwBP,EAAMQ,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAeT,EAAMU,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBX,EAAMY,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAC/CE,EAAQ,YAAyBb,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoB,gBAAoBM,EAAW,YAAS,CAC1DH,UAAW,YAAKD,EAAQY,KAAMX,EAAWO,GAASR,EAAQQ,MAAOF,GAAkBN,EAAQM,gBAA6B,IAAbI,GAAsBV,EAAQ,WAAWa,OAAO,YAAWC,OAAOJ,OAC7KX,IAAKA,GACJY,OA0CU,iBAvHK,SAAgBI,GAClC,MAAO,CAELH,KAAM,YAAgB,CACpBI,MAAO,OACPC,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,GAC5BE,QAAS,SACRR,EAAMS,YAAYC,GAAG,MAAO,CAC7BL,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,KAI9Bf,eAAgB,CACdc,YAAa,EACbE,aAAc,GAIhBd,MAAOkB,OAAOC,KAAKZ,EAAMS,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAIC,EAAQjB,EAAMS,YAAYI,OAAOG,GAQrC,OANc,IAAVC,IACFF,EAAIf,EAAMS,YAAYC,GAAGM,IAAe,CACtCrB,SAAUsB,IAIPF,IACN,IAGHG,WAAY,YAAgB,GAAIlB,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUwB,KAAKC,IAAIpB,EAAMS,YAAYI,OAAOQ,GAAI,OAIlDC,WAAY,YAAgB,GAAItB,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOU,KAIrCC,WAAY,YAAgB,GAAIxB,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOY,KAIrCC,WAAY,YAAgB,GAAI1B,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOc,KAIrCC,WAAY,YAAgB,GAAI5B,EAAMS,YAAYC,GAAG,MAAO,CAC1Df,SAAUK,EAAMS,YAAYI,OAAOgB,QA8DP,CAChCC,KAAM,gBADO,CAEZhD,I,uJCgIYiD,sBAAWC,YAAQ,KAAM,KAAdA,EAjP1B,SAAmBjD,GACjB,IAAQkD,EAASlD,EAATkD,KACR,EAA8BC,mBAAS,CACrCC,EAAG,GACHC,EAAG,GACHC,EAAG,KAHL,mBAAOC,EAAP,KAAkBC,EAAlB,KAKMC,EAASC,aACb,qBAAGC,WAA4BF,SAC/BG,KAuBF,OAVAC,qBAVyB,WCzBlBC,IAAMC,IAAN,kBD2BFC,MAAK,SAACC,GACLT,EAASS,EAAOC,KAAKA,KAAKC,UAE3BC,OAAM,SAACC,GACNC,IAAMC,aAAarB,EAAKsB,cAAc,CAAEC,GAAI,6BAItB,IAC5BZ,qBAAU,WACJJ,GACFA,EAAOiB,GAAG,WAAW,SAACC,EAAOC,GAC3B,IAAMC,EAAU,CAAEF,QAAOC,QAASA,EAAQE,YAC1CC,QAAQC,IAAI,UAAWH,QAG1B,IAGD,kBAAC,IAAMI,SAAP,KACE,yBACEC,MAAO,CACLC,gBAAgB,OAAD,OAASC,YAAc,uBAAvB,KACfC,OAAQ,0BACRC,mBAAoB,MACpBC,eAAgB,UAGlB,kBAACxF,EAAA,EAAD,CAAWa,SAAS,KAAKF,OAAK,GAC5B,yBAAKP,UAAU,0BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,8CACb,0BAAMA,UAAU,gBACd,yBACEqF,IAAKJ,YAAc,iCACnBjF,UAAU,sBACVsF,IAAI,eAIV,yBAAKtF,UAAU,mDACb,uBACEuF,KAAK,IACLvF,UAAU,oCACV+E,MAAO,CAAES,SAAU,SAHrB,cAOA,0BACExF,UAAU,aACV+E,MAAO,CAAES,SAAU,WAFrB,mBAWV,yBAAKxF,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,8CACb,0BAAMA,UAAU,gBACd,yBACEqF,IAAKJ,YAAc,mCACnBjF,UAAU,sBACVsF,IAAI,eAIV,yBAAKtF,UAAU,mDACb,uBACEuF,KAAK,IACLvF,UAAU,oCACV+E,MAAO,CAAES,SAAU,SAHrB,cAOA,0BACExF,UAAU,aACV+E,MAAO,CAAES,SAAU,WAFrB,kBAWV,yBAAKxF,UAAU,YACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,8CACb,0BAAMA,UAAU,gBACd,yBACEqF,IAAKJ,YACH,uCAEFjF,UAAU,sBACVsF,IAAI,eAIV,yBAAKtF,UAAU,mDACb,uBACEuF,KAAK,IACLvF,UAAU,oCACV+E,MAAO,CAAES,SAAU,SAHrB,cAOA,0BACExF,UAAU,aACV+E,MAAO,CAAES,SAAU,WAFrB,gCAYZ,yBAAKxF,UAAU,0BACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAMA,UAAU,yBACd,kBAAC,IAAD,KACE,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAiBA,UAAU,cAA3B,yBAKJ,kBAAC,IAAD,KACGoD,EAAU,GAAGqC,KAAI,SAACC,EAAMC,GACvB,OACE,yBAAK3F,UAAU,uCACb,6BACE,0BAAMA,UAAU,gBACH,IAAV2F,GACC,uBAAG3F,UAAU,uCAEd0F,EAAKE,cAGV,6BACE,0BAAM5F,UAAU,gBAAgB0F,EAAKG,cAQnD,yBAAK7F,UAAU,YACb,kBAAC,IAAD,CAAMA,UAAU,yBACd,kBAAC,IAAD,KACE,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAiBA,UAAU,cAA3B,eAKJ,kBAAC,IAAD,KACGoD,EAAU,GAAGqC,KAAI,SAACC,EAAMC,GACvB,OACE,yBAAK3F,UAAU,uCACb,6BACE,0BAAMA,UAAU,gBACH,IAAV2F,GACC,uBAAG3F,UAAU,uCAEd0F,EAAKE,cAGV,6BACE,0BAAM5F,UAAU,gBAAgB0F,EAAKG,cAQnD,yBAAK7F,UAAU,YACb,kBAAC,IAAD,CAAMA,UAAU,yBACd,kBAAC,IAAD,KACE,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAiBA,UAAU,cAA3B,4BAKJ,kBAAC,IAAD,KACGoD,EAAU,GAAGqC,KAAI,SAACC,EAAMC,GACvB,OACE,yBAAK3F,UAAU,uCACb,6BACE,0BAAMA,UAAU,gBACH,IAAV2F,GACC,uBAAG3F,UAAU,uCAEd0F,EAAKE,cAGV,6BACE,0BAAM5F,UAAU,gBAAgB0F,EAAKG","file":"static/js/8.c9db7aec.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderTitle,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { getDataQueueRegistry } from \"./_redux/CrudScreenQueue\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction QueuePage(props) {\r\n  const { intl } = props;\r\n  const [dataQueue, setQueue] = useState({\r\n    1: [],\r\n    2: [],\r\n    3: [],\r\n  });\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n\r\n  const callApiDataQueue = () => {\r\n    getDataQueueRegistry()\r\n      .then((result) => {\r\n        setQueue(result.data.data.queue);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataQueue, []);\r\n  useEffect(() => {\r\n    if (client) {\r\n      client.on(\"message\", (topic, message) => {\r\n        const payload = { topic, message: message.toString() };\r\n        console.log(\"payload\", payload);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          backgroundImage: `url(${toAbsoluteUrl(\"media/bg/bg1-01.png\")})`,\r\n          height: \"calc(100vh + 10.526rem)\",\r\n          backgroundPosition: \"50%\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"xl\" fixed>\r\n          <div className=\"row gutter-b mt-9 pt-9\">\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"card card-custom wave wave-animate-slow wave-primary gutter-b\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"symbol symbol-40 symbol-light-success mr-5\">\r\n                      <span className=\"symbol-label\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\"/media/svg/avatars/doctor.svg\")}\r\n                          className=\"h-75 align-self-end\"\r\n                          alt=\"Doctor 1\"\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"text-dark text-hover-primary mb-1\"\r\n                        style={{ fontSize: \"2rem\" }}\r\n                      >\r\n                        Ricky Hunt\r\n                      </a>\r\n                      <span\r\n                        className=\"text-muted\"\r\n                        style={{ fontSize: \"1.1rem\" }}\r\n                      >\r\n                        POLI BIDAN\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"card card-custom wave wave-animate-fast wave-warning gutter-b\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"symbol symbol-40 symbol-light-success mr-5\">\r\n                      <span className=\"symbol-label\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\"/media/svg/avatars/doctor-2.svg\")}\r\n                          className=\"h-75 align-self-end\"\r\n                          alt=\"Doctor 1\"\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"text-dark text-hover-primary mb-1\"\r\n                        style={{ fontSize: \"2rem\" }}\r\n                      >\r\n                        Ricky Hunt\r\n                      </a>\r\n                      <span\r\n                        className=\"text-muted\"\r\n                        style={{ fontSize: \"1.1rem\" }}\r\n                      >\r\n                        POLI GIGI\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"card card-custom wave wave-animate-slow wave-danger gutter-b\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"symbol symbol-40 symbol-light-success mr-5\">\r\n                      <span className=\"symbol-label\">\r\n                        <img\r\n                          src={toAbsoluteUrl(\r\n                            \"/media/svg/avatars/medical-team.svg\"\r\n                          )}\r\n                          className=\"h-75 align-self-end\"\r\n                          alt=\"Doctor 3\"\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"text-dark text-hover-primary mb-1\"\r\n                        style={{ fontSize: \"2rem\" }}\r\n                      >\r\n                        Ricky Hunt\r\n                      </a>\r\n                      <span\r\n                        className=\"text-muted\"\r\n                        style={{ fontSize: \"1.1rem\" }}\r\n                      >\r\n                        POLI KULIT DAN KELAMIN\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row gutter-b mt-9 pt-9\">\r\n            <div className=\"col-lg-4\">\r\n              <Card className=\"bg-primary text-white\">\r\n                <CardHeader>\r\n                  <div className=\"card-title m-auto\">\r\n                    <CardHeaderTitle className=\"text-white\">\r\n                      POLI UMUM dan BIDAN\r\n                    </CardHeaderTitle>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {dataQueue[2].map((item, index) => {\r\n                    return (\r\n                      <div className=\"d-flex justify-content-between my-3\">\r\n                        <div>\r\n                          <span className=\"font-size-h5\">\r\n                            {index === 0 && (\r\n                              <i className=\"fas fa-stethoscope text-white px-1\"></i>\r\n                            )}\r\n                            {item.kode_pasien}\r\n                          </span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"font-size-h5\">{item.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Card className=\"bg-primary text-white\">\r\n                <CardHeader>\r\n                  <div className=\"card-title m-auto\">\r\n                    <CardHeaderTitle className=\"text-white\">\r\n                      POLI GIGI\r\n                    </CardHeaderTitle>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {dataQueue[1].map((item, index) => {\r\n                    return (\r\n                      <div className=\"d-flex justify-content-between my-3\">\r\n                        <div>\r\n                          <span className=\"font-size-h5\">\r\n                            {index === 0 && (\r\n                              <i className=\"fas fa-stethoscope text-white px-1\"></i>\r\n                            )}\r\n                            {item.kode_pasien}\r\n                          </span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"font-size-h5\">{item.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Card className=\"bg-primary text-white\">\r\n                <CardHeader>\r\n                  <div className=\"card-title m-auto\">\r\n                    <CardHeaderTitle className=\"text-white\">\r\n                      POLI KULIT DAN KELAMIN\r\n                    </CardHeaderTitle>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {dataQueue[3].map((item, index) => {\r\n                    return (\r\n                      <div className=\"d-flex justify-content-between my-3\">\r\n                        <div>\r\n                          <span className=\"font-size-h5\">\r\n                            {index === 0 && (\r\n                              <i className=\"fas fa-stethoscope text-white px-1\"></i>\r\n                            )}\r\n                            {item.kode_pasien}\r\n                          </span>\r\n                        </div>\r\n                        <div>\r\n                          <span className=\"font-size-h5\">{item.nama}</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(QueuePage));\r\n","import axios from \"axios\";\r\n\r\nexport function getDataQueueRegistry() {\r\n  return axios.get(`/api/v1/screen`);\r\n}\r\n"],"sourceRoot":""}