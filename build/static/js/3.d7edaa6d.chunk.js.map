{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/modules/Patient/_redux/CrudPatient.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","Fragment","component","Paper","className","map","item","index","key","toString","id","title","listPatientPagination","params","axios","get","getDataPatient","updateDataPatient","data","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","type","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","filter","el","includes","to","url","icon","primary","disabled","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","value","order","status","active","length","replace","sortData","setSortData","nameStateFilter","setNameStateFilter","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","openFilterTable","idFilter","idInputFilter","document","getElementById","getAttribute","setAttribute","classList","add","remove","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","color","role","zIndex","min","defaultValue","placeholder","formatMessage","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","headerTable","data_ops","setLoading","setData","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","push","created_at","moment","Date","format","code_reg","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","pasien","dokter","label_kind","datatype","join","val_desc","onChange","rows","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa"],"mappings":"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","file":"static/js/3.d7edaa6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  const listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [nameStateFilter, setNameStateFilter] = React.useState(\"\");\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const openFilterTable = (name, index) => {\r\n    let idFilter = index;\r\n    let idInputFilter = name;\r\n    let status = document.getElementById(idFilter).getAttribute(\"status\");\r\n    if (nameStateFilter === \"\") {\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    } else if (nameStateFilter === idFilter) {\r\n      if (status === \"closed\") {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n        document.getElementById(idFilter).classList.add(\"open\");\r\n      } else {\r\n        document.getElementById(idFilter).setAttribute(\"status\", \"closed\");\r\n        document.getElementById(idFilter).classList.remove(\"open\");\r\n        document.getElementById(idInputFilter).value =\r\n          filterTable[idInputFilter] || \"\";\r\n      }\r\n    } else {\r\n      document.getElementById(nameStateFilter).setAttribute(\"status\", \"closed\");\r\n      document.getElementById(nameStateFilter).classList.remove(\"open\");\r\n      setNameStateFilter(idFilter);\r\n      document.getElementById(idFilter).setAttribute(\"status\", \"open\");\r\n      document.getElementById(idFilter).classList.add(\"open\");\r\n    }\r\n  };\r\n\r\n  const updateValueFilter = (property, index) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    setFilterTable({ ...filterTables });\r\n    openFilterTable(property, index);\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        onClick={() => {\r\n                          openFilterTable(item.name.replace(/\\s/g, \"\"), index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <ul\r\n                        role=\"menu\"\r\n                        className=\"dropdown-menu\"\r\n                        style={{ zIndex: 90 }}\r\n                      >\r\n                        <li style={{ width: 380, padding: 5 }}>\r\n                          <div className=\"clearfix\">\r\n                            <div className=\"float-left\">\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control form-control-sm\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-left btn btn-sm btn-primary\"\r\n                                onClick={() => {\r\n                                  updateValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\"),\r\n                                    index\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mx-2 float-right btn btn-sm btn-light d-flex\"\r\n                                onClick={() => {\r\n                                  resetValueFilter(\r\n                                    item.name.replace(/\\s/g, \"\")\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-redo fa-right\"></i>\r\n                                <span>\r\n                                  <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                                </span>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className=\"bg-primary text-uppercase\"\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_NO\",\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            loading={false}\r\n            // err={err}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.code_reg}</TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>Resep Yang Diberikan</CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n"],"sourceRoot":""}