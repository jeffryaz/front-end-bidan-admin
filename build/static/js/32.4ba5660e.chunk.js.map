{"version":3,"sources":["app/modules/HandlingPharmacist/_redux/CrudHandlingPharmacist.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","app/modules/HandlingPharmacist/ListProduct.js","app/modules/Administrator/Obat/RootAdministratorMedicinePharmacist.js"],"names":["getMedicalRecord","medical_id","axios","get","listMedicinePagination","params","getMedicineById","id","createMedicine","data","post","editMedicine","put","saveApotek","createItemMedicine","getListEmptyMedicine","getListStockRunningOut","getListPreOrder","getListStockName","listAllPatient","addDrugNonDoctor","getPoDrug","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","icon","thumb","root","edgeStart","edgeEnd","concat","capitalize","SwitchBase","type","checkedIcon","switchBase","input","checked","disabled","track","withStyles","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","headerTable","title","order","active","status","filter","headerTableMedicine","injectIntl","connect","auth","intl","useHistory","useState","loading","setLoading","loadingReq","setLoadingReq","count","setData","datas","setDatas","dataSecond","setDataSecond","err","setErr","dialogPackage","setDialogPackage","dialogMedicine","setDialogMedicine","barcode","nama","unit","harga","iscomposite","addPackage","setAddPackage","suhbeader","useSubheader","useSelector","clientMqtt","client","shallowEqual","dataChecked","setDataChecked","state","setState","paramTable","setParamTable","dialogAddItems","setDialogAddItems","useLayoutEffect","setBreadcrumbs","pathname","formatMessage","setTitle","requestApi","then","result","rows","Object","assign","item","catch","MODAL","showSnackbar","useEffect","isEnabled","length","Fragment","Dialog","open","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","onSubmit","e","preventDefault","forEach","element","barang_id","sellingPrice","items","response","messages","DialogContent","style","onClick","map","index","key","toString","rupiah","value","qty","onChange","target","required","colSpan","displayType","allowEmptyFormatting","allowLeadingZeros","thousandSeparator","allowNegative","prefix","onValueChange","floatValue","DialogActions","undefined","dataHeader","handleFilter","hecto","TableRow","TableCell","Checkbox","indeterminate","findIndex","push","idx","splice","autoComplete","itemcomposite","toUpperCase","select","inputProps","handleParams","countData","composite_item","exact","from","to","path","component"],"mappings":"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","file":"static/js/32.4ba5660e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function listMedicinePagination(params) {\r\n  return axios.get(`/api/v1/obat${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\nexport function createMedicine(data) {\r\n  return axios.post(`/api/v1/obat`, data);\r\n}\r\nexport function editMedicine(id, data) {\r\n  return axios.put(`/api/v1/obat/${id}`, data);\r\n}\r\nexport function cancelMedicalRecord(id) {\r\n  return axios.put(`/api/v1/medicalcancel/${id}`);\r\n}\r\nexport function saveMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsave/${medical_id}`, data);\r\n}\r\nexport function submitMedicalRecord(medical_id, data) {\r\n  return axios.put(`/api/v1/medicalsubmit/${medical_id}`, data);\r\n}\r\nexport function listMedicalRecordDone() {\r\n  return axios.get(`/api/v1/medicaldone`);\r\n}\r\nexport function listAllReservationDoctor() {\r\n  return axios.get(`/api/v1/medicalallres`);\r\n}\r\nexport function saveApotek(data) {\r\n  return axios.post(`/api/v1/apotekcheck`, data);\r\n}\r\nexport function createItemMedicine(data) {\r\n  return axios.post(`/api/v1/obat-in`, data);\r\n}\r\nexport function getListEmptyMedicine() {\r\n  return axios.get(`/api/v1/getemptyitem`);\r\n}\r\nexport function getListStockRunningOut() {\r\n  return axios.get(`/api/v1/getwarnitem`);\r\n}\r\nexport function getListPreOrder() {\r\n  return axios.get(`/api/v1/getpreorder`);\r\n}\r\nexport function getListStockName() {\r\n  return axios.get(`/api/v1/stockitem`);\r\n}\r\nexport function listAllPatient() {\r\n  return axios.get(`/api/v1/pasien?page=1&rowsPerPage=100000`);\r\n}\r\nexport function addDrugNonDoctor(data) {\r\n  return axios.post(`/api/v1/reseppos`, data);\r\n}\r\nexport function getPoDrug(id) {\r\n  return axios.put(`/api/v1/takemissitem/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  listMedicinePagination,\r\n  createMedicine,\r\n  editMedicine,\r\n  getMedicineById,\r\n  createItemMedicine,\r\n} from \"./_redux/CrudHandlingPharmacist\";\r\nimport { publish } from \"../../../redux/MqttOptions\";\r\nimport { rupiah } from \"../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport * as auth from \"../Auth/_redux/ActionAuth\";\r\nimport Select from \"react-select\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  TableRow,\r\n  TableCell,\r\n  Switch,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TableOnly from \"../../components/tableCustomV1/tableOnly\";\r\n\r\nfunction comparerData(otherArray) {\r\n  return function (current) {\r\n    return (\r\n      otherArray.filter(function (other) {\r\n        // wajib compare data yang tidak boleh berubah. contoh ID. sisanya boleh compare dengan data yang berubah.\r\n        return other.id === current.id;\r\n      }).length === 0\r\n    );\r\n  };\r\n}\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"currency\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PACKAGE\",\r\n    name: \"iscomposite\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst headerTableMedicine = [\r\n  {\r\n    title: \"LABEL.CHECK\",\r\n    name: \"check\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_CODE\",\r\n    name: \"barcode\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.PRODUCT_NAME\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_TYPE\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT_PRICE\",\r\n    name: \"harga\",\r\n    filter: true,\r\n  },\r\n];\r\n\r\nfunction ListProduct(props) {\r\n  const { intl } = props;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingReq, setLoadingReq] = useState(false);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [datas, setDatas] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const [dialogPackage, setDialogPackage] = useState(false);\r\n  const [dialogMedicine, setDialogMedicine] = useState(false);\r\n  const [addPackage, setAddPackage] = useState({\r\n    barcode: \"\",\r\n    nama: \"\",\r\n    unit: \"\",\r\n    harga: 0,\r\n    iscomposite: false,\r\n  });\r\n  const suhbeader = useSubheader();\r\n  const client = useSelector(\r\n    ({ clientMqtt }) => clientMqtt.client,\r\n    shallowEqual\r\n  );\r\n  const [dataChecked, setDataChecked] = useState([]);\r\n  const [state, setState] = useState(\"new\");\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [dialogAddItems, setDialogAddItems] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/pharmacist/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/pharmacist/medicine-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PRODUCT_LIST\" }));\r\n  }, []);\r\n\r\n  const mqttPublish = () => {\r\n    if (client) {\r\n      const { topic, qos, payload } = publish;\r\n      client.publish(topic, payload, { qos }, (error) => {\r\n        if (error) {\r\n          console.log(\"Publish error: \", error);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listMedicinePagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count,\r\n          data: result.data.data.rows,\r\n        });\r\n        var data = Object.assign([], result.data.data.rows);\r\n        data = data.filter((item) => item.iscomposite === 0);\r\n        setDatas(data);\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const getApiAll = (params) => {\r\n    listMedicinePagination(\"page=1&rowsPerPage=1000000&sort=nama,asc\")\r\n      .then((result) => {\r\n        var data = Object.assign([], result.data.data.rows);\r\n        data = data.filter((item) => item.iscomposite === 0);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  useEffect(getApiAll, []);\r\n\r\n  const saveProduct = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = {\r\n      barcode: addPackage?.barcode,\r\n      nama: addPackage?.nama,\r\n      unit: addPackage?.unit,\r\n      harga: addPackage?.harga,\r\n      iscomposite: addPackage?.iscomposite,\r\n    };\r\n    if (addPackage?.iscomposite) {\r\n      dataChecked.forEach((element) => (element.barang_id = element.id));\r\n      data.itemcomposite = dataChecked;\r\n    }\r\n    if (state === \"new\") {\r\n      createMedicine(data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    } else {\r\n      editMedicine(state, data)\r\n        .then((result) => {\r\n          setAddPackage({\r\n            barcode: \"\",\r\n            nama: \"\",\r\n            unit: \"\",\r\n            harga: 0,\r\n            iscomposite: false,\r\n          });\r\n          setDataChecked([]);\r\n          setLoadingReq(false);\r\n          MODAL.showSnackbar(\r\n            intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n            \"success\"\r\n          );\r\n          requestApi(paramTable);\r\n          setDialogPackage(false);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(err.response?.data.messages);\r\n        });\r\n    }\r\n  };\r\n\r\n  const callApiEdit = (id) => {\r\n    getMedicineById(id)\r\n      .then((result) => {\r\n        setAddPackage({\r\n          ...addPackage,\r\n          barcode: result.data.data.barcode,\r\n          nama: result.data.data.nama,\r\n          unit: result.data.data.unit,\r\n          harga: result.data.data.harga,\r\n          iscomposite: result.data.data.iscomposite === 0 ? false : true,\r\n        });\r\n        if (result.data.data.iscomposite === 1) {\r\n          setDataChecked(result.data.data.composite_item);\r\n        }\r\n        setState(id);\r\n        setDialogPackage(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiAddItems = (e) => {\r\n    e.preventDefault();\r\n    setLoadingReq(true);\r\n    var data = Object.assign([], dataChecked);\r\n    data.forEach((element) => {\r\n      element.barang_id = element.id;\r\n      element.harga = element.sellingPrice;\r\n      delete element.id;\r\n      delete element.sellingPrice;\r\n    });\r\n    createItemMedicine({ items: data })\r\n      .then((result) => {\r\n        setDataChecked([]);\r\n        setLoadingReq(false);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        requestApi(paramTable);\r\n        setDialogAddItems(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingReq(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n\r\n  function isEnabledAdd() {\r\n    if (dataChecked.length == 0) return true;\r\n    var data = dataChecked.filter((item) => {\r\n      return (\r\n        item.qty === null ||\r\n        item.qty === undefined ||\r\n        item.sellingPrice === null ||\r\n        item.sellingPrice === undefined ||\r\n        item.unit === null ||\r\n        item.unit === undefined\r\n      );\r\n    });\r\n    return data.length === 0 ? false : true;\r\n  }\r\n  const handleFilter = (data) => {\r\n    setDatas(data);\r\n  };\r\n\r\n  const isEnabled = addPackage.barcode.length > 0 && addPackage.nama.length > 0;\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialogAddItems}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.ADD_QTY\" />\r\n        </DialogTitle>\r\n        <form onSubmit={callApiAddItems}>\r\n          <DialogContent>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.QTY\" />\r\n                  </th>\r\n                  <th>\r\n                    <FormattedMessage id=\"LABEL.SELLING_PRICE\" />\r\n                  </th>\r\n                  <th className=\"text-right\" style={{ maxWidth: 90 }}>\r\n                    <button\r\n                      className=\"btn btn-warning btn-sm\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setDialogMedicine(true);\r\n                        setDatas(dataSecond);\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"LABEL.ADD_ITEM\" />\r\n                    </button>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataChecked.map((item, index) => {\r\n                  return (\r\n                    <tr key={index.toString()}>\r\n                      <td>{item.nama}</td>\r\n                      <td>{item.unit}</td>\r\n                      <td>{rupiah(item.harga)}</td>\r\n                      <td>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          value={item.qty}\r\n                          onChange={(e) => {\r\n                            var data = Object.assign([], dataChecked);\r\n                            data[index].qty = e.target.value;\r\n                            setDataChecked(data);\r\n                          }}\r\n                          required={true}\r\n                          disabled={loadingReq}\r\n                        />\r\n                      </td>\r\n                      <td colSpan=\"2\">\r\n                        <NumberFormat\r\n                          id={\r\n                            loadingReq\r\n                              ? \"NumberFormat-text\"\r\n                              : \"NumberFormat-input\"\r\n                          }\r\n                          value={item.sellingPrice}\r\n                          displayType={loadingReq ? \"text\" : \"input\"}\r\n                          className=\"form-control\"\r\n                          allowEmptyFormatting={true}\r\n                          allowLeadingZeros={true}\r\n                          thousandSeparator={true}\r\n                          allowNegative={false}\r\n                          prefix={\"Rp \"}\r\n                          onValueChange={(e) => {\r\n                            var data = Object.assign([], dataChecked);\r\n                            data[index].sellingPrice = e.floatValue\r\n                              ? e.floatValue\r\n                              : 0;\r\n                            setDataChecked(data);\r\n                          }}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogAddItems(false);\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isEnabledAdd() || loadingReq}\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogMedicine}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <TableOnly\r\n            dataHeader={headerTableMedicine}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            hecto={8}\r\n          >\r\n            {datas.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={false}\r\n                      checked={\r\n                        dataChecked.findIndex(\r\n                          (value) => value.id === item.id\r\n                        ) !== -1\r\n                      }\r\n                      onChange={(e) => {\r\n                        var data = Object.assign([], dataChecked);\r\n                        if (e.target.checked) {\r\n                          data.push(item);\r\n                        } else {\r\n                          var idx = data.findIndex(\r\n                            (value) => value.id === item.id\r\n                          );\r\n                          data.splice(idx, 1);\r\n                        }\r\n                        setDataChecked(data);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item.barcode}</TableCell>\r\n                  <TableCell>{item.nama}</TableCell>\r\n                  <TableCell>{item.unit}</TableCell>\r\n                  <TableCell>{rupiah(item.harga || 0)}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setDialogMedicine(false);\r\n              setDatas(dataSecond);\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            <FormattedMessage id=\"LABEL.OK\" />\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={dialogPackage}\r\n        // keepMounted\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {state === \"new\" ? (\r\n            <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.EDIT_PRODUCT\" />\r\n          )}\r\n        </DialogTitle>\r\n\r\n        <form autoComplete=\"off\" onSubmit={saveProduct}>\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_CODE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.barcode}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, barcode: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.nama}\r\n                  onChange={(e) => {\r\n                    setAddPackage({ ...addPackage, nama: e.target.value });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={addPackage?.unit}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      unit: e.target.value.toUpperCase(),\r\n                    });\r\n                  }}\r\n                  required={true}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.UNIT_PRICE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loadingReq ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={addPackage?.harga}\r\n                  displayType={loadingReq ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  thousandSeparator={true}\r\n                  allowNegative={false}\r\n                  prefix={\"Rp \"}\r\n                  onValueChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      harga: e.floatValue ? e.floatValue : 0,\r\n                    });\r\n                  }}\r\n                  onClick={(e) => {\r\n                    e.target.select();\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.PACKAGE\" />\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Switch\r\n                  checked={addPackage?.iscomposite}\r\n                  onChange={(e) => {\r\n                    setAddPackage({\r\n                      ...addPackage,\r\n                      iscomposite: e.target.checked,\r\n                    });\r\n                  }}\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  disabled={loadingReq}\r\n                />\r\n              </div>\r\n            </div>\r\n            {addPackage?.iscomposite && (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.PRODUCT_NAME\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.UNIT_TYPE\" />\r\n                    </th>\r\n                    <th>\r\n                      <FormattedMessage id=\"LABEL.QTY\" />\r\n                    </th>\r\n                    <th className=\"text-right\" style={{ maxWidth: 80 }}>\r\n                      <button\r\n                        className=\"btn btn-warning btn-sm\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setDialogMedicine(true);\r\n                          setDatas(dataSecond);\r\n                        }}\r\n                      >\r\n                        <FormattedMessage id=\"LABEL.SELECT_PRODUCT\" />\r\n                      </button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataChecked.map((item, index) => {\r\n                    return (\r\n                      <tr key={index.toString()}>\r\n                        <td>{item.nama}</td>\r\n                        <td>{item.unit}</td>\r\n                        <td colSpan=\"2\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            value={item.qty}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], dataChecked);\r\n                              data[index].qty = e.target.value;\r\n                              setDataChecked(data);\r\n                            }}\r\n                            required={true}\r\n                            disabled={loadingReq}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setDialogPackage(false);\r\n                setAddPackage({\r\n                  barcode: \"\",\r\n                  nama: \"\",\r\n                  unit: \"\",\r\n                  harga: 0,\r\n                  iscomposite: false,\r\n                });\r\n                setDataChecked([]);\r\n              }}\r\n              disabled={loadingReq}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !isEnabled ||\r\n                (addPackage.iscomposite === true && dataChecked.length == 0) ||\r\n                loadingReq\r\n              }\r\n            >\r\n              {loadingReq ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingReq ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setState(\"new\");\r\n                setDialogPackage(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-prescription-bottle mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_PRODUCT\" />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                setDialogAddItems(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-capsules mx-1\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD_QTY\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.barcode}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>{rupiah(item?.harga || 0)}</TableCell>\r\n                  <TableCell>\r\n                    {item.iscomposite === 0 ? \"Tidak Paket\" : \"Paket\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => {\r\n                        callApiEdit(item.id);\r\n                      }}\r\n                    >\r\n                      <i className=\"far fa-edit mx-1\"></i>\r\n                      Ubah Obat\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListProduct));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListProduct from \"../../HandlingPharmacist/ListProduct\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorMedicinePharmacist(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact={true}\r\n        from=\"/administrator/medicine-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/medicine-page/list\"\r\n        component={(props) => <ListProduct {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(\r\n  connect(null, null)(RootAdministratorMedicinePharmacist)\r\n);\r\n"],"sourceRoot":""}