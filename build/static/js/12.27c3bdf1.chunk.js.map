{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/icons/esm/MoreVert.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/ListPatientPage.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","app/modules/Patient/RootPatientByDoctor.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","td","key","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","ListItemIcon","ref","classes","other","context","root","alignItems","alignItemsFlexStart","minWidth","palette","action","flexShrink","display","ListItemText","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","variant","multiline","flex","marginBottom","path","displayName","Component","memo","forwardRef","createElement","SvgIcon","muiName","d","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","useStyles","makeStyles","heading","typography","pxToRem","heading_new","flexBasis","secondaryHeading","details","column","ListItem","subtitle","idx","input","a","adx","medkind","nama","datatype","val_desc","trim","rows","unit","defaultExpanded","expandIcon","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","specialCase","setSpecialCase","dataMedicinePatient","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","transaksi","form","screen","labs","callApiGetMedicine","resep","countSubTotal","harga","code_reg","pasien","dokter","allowNegative","findIndex","floatValue","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","verticalAlign","special","payamt","pay_amt","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","setErr","kode_pasien","kota","no_telp","email","jk","user_id","active_user","_props$color","valueBuffer","_props$variant","useTheme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","concat","_transform","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","backgroundPrimary","main","backgroundSecondary","overflow","height","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","Nav","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","bigAvatar","marginRight","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","id_kota","id_kec","id_kel","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","preventDefault","newParams","FormData","keys","element","append","tempat_lahir","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord","createSvgIcon","childrenProp","_props$component","imgProps","sizes","srcSet","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","fontFamily","lineHeight","borderRadius","userSelect","background","default","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","exact","from"],"mappings":"wQAiHeA,gBAAWC,YAAQ,KAAM,KAAdA,EAnGR,SAACC,GACjB,IACEC,EAQED,EARFC,KADF,EASID,EAPFE,kBAFF,MAEe,GAFf,IASIF,EANFG,eAHF,WASIH,EALFI,WAJF,SAKEC,EAIEL,EAJFK,SALF,EASIL,EAHFM,aANF,MAMU,EANV,EAOEC,EAEEP,EAFFO,aAPF,EASIP,EADFQ,kBARF,MAQe,GARf,EAUA,EAAqBC,IAAMC,SACzBR,EAAWS,QAAO,SAACC,GAAD,OAA0B,IAAhBA,EAAKD,WAD5BE,EAAP,oBAkBA,OACE,kBAAC,IAAMC,SAAP,KACE,6BACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,kBACb,2BAAOC,QAAQ,eAAeD,UAAU,2BACtC,kBAAC,IAAD,CAAkBE,GAAG,iBADvB,KAGA,yBAAKF,UAAU,YACb,2BACEG,KAAK,OACLH,UAAU,eACVE,GAAG,eACHE,YAAalB,EAAKmB,cAAc,CAC9BH,GAAI,iBAENI,SA/BM,SAACC,GAErB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIhB,EAAWiB,OAAQD,IACrC,IAAK,IAAIE,EAAI,EAAGA,EAAIb,EAAWY,OAAQC,IAAK,CAE1C,GADWlB,EAAWgB,GAAGX,EAAWa,GAAGC,MAAMC,WAAWC,cAC/CC,SAASR,EAAES,OAAOC,MAAMH,eAAgB,CAC/CN,EAAKU,KAAKzB,EAAWgB,IACrB,OAIsB,oBAAjBjB,GAA6BA,EAAagB,UA0BjD,kBAAC,IAAD,CAAgBW,UAAWC,KACzB,kBAAC,IAAD,CAAOpB,UAAW,SAAWT,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGJ,EAAWkC,KAAI,SAACxB,EAAMyB,GACrB,OACE,kBAAC,IAAD,CACEtB,UAAS,qCACH,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,IAAN,OAAW1B,QAAX,IAAWA,OAAX,EAAWA,EAAM0B,GAAK,IAExBC,IAAKF,EAAMT,YAEX,8BACE,kBAAC,IAAD,CAAkBX,GAAIL,EAAK4B,eAOvC,kBAAC,IAAD,KAAYnC,IAGd,yBAAKU,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZZ,GACC,8BACE,uBAAGY,UAAU,2CACb,kBAAC,IAAD,CAAkBE,GAAG,8BAGxBb,GACC,0BAAMW,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBE,GAAG,oC,gMCvFnCwB,EAAgBC,aAAW,SAACC,GAAD,MAAY,CAC3CC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzBC,SAAU,WACVC,UAAW,cAJON,CAMlBO,KAEW,SAASC,EAAT,GAMX,IALF3B,EAKC,EALDA,KACA4B,EAIC,EAJDA,aACAC,EAGC,EAHDA,IAGC,IAFDC,aAEC,MAFO,KAEP,MADDC,eACC,MADS,GACT,EACD,EAAgC7C,IAAMC,SAAS,MAA/C,mBAAO6C,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GACrB,SAASI,EAAYC,GACnBJ,EAAYI,EAAMC,eAEpB,SAASC,IACPN,EAAY,MAEd,IAAMO,EAAetD,IAAMuD,aACzB,SAAC9C,EAAMK,GACuB,oBAAjB4B,GAA6BA,EAAajC,EAAMK,GAC3DuC,MAEF,CAACX,EAAcW,IAGbG,EAAWb,EAEf,OACE,6BACGC,EACC,kBAACZ,EAAD,CACED,MAAO,kBAAC,IAAD,CAAkBvB,GAAIoC,IAC7Ba,UAAU,UAEV,kBAAC,IAAD,CACEC,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASX,GAET,kBAAC,IAAD,QAIJ,kBAAC,IAAD,CACEQ,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAASX,EACTY,MAAO,CACLC,OAAQ,WACRC,QAAS,IAGX,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CACExD,GAAG,YACHsC,SAAUA,EACVmB,aAAW,EACXjB,KAAMA,EACNkB,QAASb,EACTc,WAAY,CACVL,MAAO,CACLM,MAAO,IACPC,YAAa,MAIhBb,EACEtD,QAAO,SAACoE,GAAD,OAASzB,EAAQxB,SAASiD,EAAG7D,SACpCkB,KAAI,SAAC2C,EAAI9D,GACI,IAAD,IAAX,OAAI8D,EAAGC,GAEH,kBAAC,IAAD,CAAMzC,IAAKtB,EAAI+D,GAAE,UAAED,EAAGC,UAAL,aAAE,EAAOC,IAAKV,MAAK,UAAEQ,EAAGC,UAAL,aAAE,EAAOT,OAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGxD,UAAWgE,EAAGG,QAEnB,kBAAC,IAAD,CACEC,QAAS,kBAAC,IAAD,CAAkBlE,GAAI8D,EAAG1B,YAOxC,kBAAC,IAAD,CACEd,IAAKtB,EACLqD,QAAS,kBAAMP,EAAagB,EAAG7D,KAAMK,IACrC6D,SAAUL,EAAGK,UAEb,kBAAC,IAAD,KACE,uBAAGrE,UAAWgE,EAAGG,QAEnB,kBAAC,IAAD,CAAcC,QAAS,kBAAC,IAAD,CAAkBlE,GAAI8D,EAAG1B,kB,0OCtFrDgC,G,QAAS,SAACC,GAAD,OAVP,SAACC,EAAaC,EAAUF,GACrC,IAAMG,EAAU,CACdD,WACAjB,MAAO,WACPmB,gBAAiB,UAGnB,OAAO,IAAIC,KAAKC,aAAaL,EAAaE,GAASI,OAAOP,GAG1BO,CAAO,QAAS,MAAOP,KA4b1CxF,gBAAWC,YAAQ,KAAM,KAAdA,EA1bX,SAACC,GACd,IACEC,EAQED,EARFC,KADF,EASID,EAPFE,kBAFF,MAEe,GAFf,EAGE4F,EAME9F,EANF8F,aAHF,EASI9F,EALFG,eAJF,WASIH,EAJFI,WALF,SAMEC,EAGEL,EAHFK,SANF,EASIL,EAFF+F,iBAPF,MAOc,EAPd,IASI/F,EADFM,aARF,MAQU,EARV,EAUA,EAAsCG,IAAMC,SAAS,CACnDsF,YAAa,EACbC,KAAM,EACNC,MAAOH,EACPI,YAAa,KAJf,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,EAAgC5F,IAAMC,SAAS,CAC7CiB,KACEzB,EAAWS,QACT,SAACqB,GAAD,OAAkC,IAAvBA,EAAMsE,MAAMC,SAA0C,IAAvBvE,EAAMsE,MAAME,UACtD/E,OAAS,EACPvB,EACGS,QACC,SAACqB,GAAD,OACyB,IAAvBA,EAAMsE,MAAMC,SAA0C,IAAvBvE,EAAMsE,MAAME,UAC7C,GACD7E,KAAK8E,QAAQ,MAAO,IACvB,GACNH,QACEpG,EAAWS,QACT,SAACqB,GAAD,OAAkC,IAAvBA,EAAMsE,MAAMC,SAA0C,IAAvBvE,EAAMsE,MAAME,UACtD/E,OAAS,IACPvB,EAAWS,QACT,SAACqB,GAAD,OACyB,IAAvBA,EAAMsE,MAAMC,SAA0C,IAAvBvE,EAAMsE,MAAME,UAC7C,GAAGF,MAAMC,OAEjBrF,KACEhB,EAAWS,QACT,SAACqB,GAAD,OACyB,IAAvBA,EAAMsE,MAAMC,SACW,IAAvBvE,EAAMsE,MAAME,QACS,OAArBxE,EAAMsE,MAAMpF,QACdO,OAAS,EACPvB,EAAWS,QACT,SAACqB,GAAD,OACyB,IAAvBA,EAAMsE,MAAMC,SACW,IAAvBvE,EAAMsE,MAAME,QACS,OAArBxE,EAAMsE,MAAMpF,QACd,GAAGoF,MAAMpF,KACX,OAlCR,mBAAOwF,EAAP,KAAiBC,EAAjB,KAoCA,EAAsClG,IAAMC,SAAS,IAArD,mBAAOkG,EAAP,KAAoBC,EAApB,KACA,EAAoCpG,IAAMC,SAAS,CAAEC,OAAQ,GAAImG,KAAM,KAAvE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCvG,IAAMC,SAAS,MAA/C,mBAAO6C,EAAP,KAAiBC,EAAjB,KAqBMyD,EAAoBxG,IAAMuD,aAC9B,SAACkD,EAAmBC,GAClB,IAdqB5F,EAcjB6F,EAAaC,oBAAUjB,GACvBkB,EAAcP,EAClBO,EAAY3G,OAvBU,SAACY,GACzB,IAAIgG,EAAM,GACV,IAAK,IAAIC,KAAKjG,EACRA,EAAKiG,KAAID,GAAO,UAAYC,EAAI,KAAOjG,EAAKiG,GAAK,KAEvD,OAAOD,EAkBgBE,CACnBP,GAAwCN,GAE1CU,EAAYR,KAlBP,WADgBvF,EAoBnB4F,GAAoCT,GAnBtB/E,KAAX,YACS,OAAdJ,EAAKL,KACDK,EAAKL,KACH,MACA,OACFK,EAAK+E,MACL,MACA,QAcJc,EAAWnB,KAAOmB,EAAWnB,KAAO,EACpCqB,EAAcI,OAAOC,OAAO,GAAIL,EAAaF,GAC7CJ,EAAc,eAAKM,IACnB,IAAIM,EACFN,EAAY3G,OACZ,QACA2G,EAAYrB,KACZ,gBACAqB,EAAYnB,YACZ,SACAmB,EAAYR,KACc,oBAAjBhB,GAA6BA,EAAa8B,KAEvD,CAAChB,EAAaF,EAAUK,EAAY9G,EAAMmG,IA2E5C3F,IAAMoH,UAAUZ,EAAmB,IACnCxG,IAAMoH,WAAU,WACdxB,EAAe,2BAAKD,GAAN,IAAmBF,MAAOH,GAAa,OACpD,CAACA,IAEJ,IAIMjC,EAAc,WAClBN,EAAY,OAGd,OACE,kBAAC,IAAM1C,SAAP,KACE,6BACE,0BAAMG,GAAG,kBAAkBF,UAAU,2BACnC,0BAAMA,UAAU,wBACd,kBAAC,IAAD,CAAkBE,GAAG,wBAEvB,yBAAKF,UAAU,WACb,yBAAKA,UAAU,IACZb,EACES,QAAO,SAACqB,GAAD,OAAmC,IAAxBA,EAAMrB,OAAO6F,UAC/BpE,KAAI,SAACxB,EAAMyB,GACV,OACE,yBACEE,IAAKF,EAAMT,WACXb,UAAU,+BACVwF,OAAO,SACPtF,GAAIoB,GAEJ,yBACEtB,UAAU,aACVE,GAAI,cAAgBoB,EACpBiC,QAAS,WA7B7Bd,EA8BkCnB,KAGd,8BACE,kBAAC,IAAD,CAAkBpB,GAAIL,EAAK4B,QAD7B,KAGA,4BAAQ+B,MAAO,CAAEuD,aAAc,EAAGC,YAAa,IAC7C,0BACEhH,UAAU,eACVE,GAAI,eAAiBoB,GAEC,aAArBzB,EAAKD,OAAOO,MACb0F,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,KACjCpB,EACE2C,OACEpB,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,OAGpB,UAArB7F,EAAKD,OAAOO,MACZ0F,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,KADrC,cAGEG,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,MAElB,SAArB7F,EAAKD,OAAOO,MACZ0F,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,KADrC,UAEGwB,IACD,IAAIC,KACFtB,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,OAEvCZ,OAAO,gBACTe,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,OAG5CG,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,KAAO,KAC3C,0BAAMlC,MAAO,CAAE4D,MAAO,YACpB,kBAAC,IAAD,CAAkBlH,GAAG,gBAI3B,kBAAC,IAAD,CACEsC,SAAU6E,SAASC,eAAT,qBACM9E,GAAsB,IAEtCmB,aAAa,EACbjB,KAAMpB,IAAUkB,EAChBoB,QAASb,EACTc,WAAY,CACVL,MAAO,CACL+D,UAAW,sCAIf,yBAAKvH,UAAU,QACb,yBAAKA,UAAU,cACS,aAArBH,EAAKD,OAAOO,KACX,kBAAC,IAAD,CACEc,MACE4E,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,MACrC,GAEF8B,YAAY,QACZxH,UAAU,eACVY,KAAMf,EAAKe,KAAK8E,QAAQ,MAAO,IAC/BxF,GAAIL,EAAKe,KAAK8E,QAAQ,MAAO,IAC7B+B,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAsB,EACtBC,mBAAmB,EACnBC,OAAQ,MACRC,cAAe,SAACvH,OAEK,UAArBV,EAAKD,OAAOO,KACd,kBAAC,IAAD,CACEc,MACE4E,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,MACrC,GAEF8B,YAAY,QACZxH,UAAU,eACVY,KAAMf,EAAKe,KAAK8E,QAAQ,MAAO,IAC/BxF,GAAIL,EAAKe,KAAK8E,QAAQ,MAAO,IAC7BZ,OAAO,oBACPiD,KAAK,IACLJ,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACvH,OAGlB,2BACEJ,KAAMN,EAAKD,OAAOO,KAClBH,UAAU,eACVgI,IAAI,IACJpH,KAAMf,EAAKe,KAAK8E,QAAQ,MAAO,IAC/BxF,GAAIL,EAAKe,KAAK8E,QAAQ,MAAO,IAC7BuC,aACEpC,EAAYhG,EAAKe,KAAK8E,QAAQ,MAAO,MACrC,GAEFtF,YAAalB,EAAKmB,cAAc,CAC9BH,GAAI,cAENsD,MAAO,CAAEM,MAAO,QAItB,yBAAK9D,UAAU,UACb,4BACEG,KAAK,SACLH,UAAU,yCACVuD,QAAS,YAhLX,SAAC2E,EAAU/H,GACnC,IAAIgI,EAAetC,EACnBsC,EAAaD,GAAYb,SAASC,eAAeY,GAAUjH,MAC9C,aAATd,EACFgI,EAAaD,GAAYC,EAAaD,GACnCxC,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,KACD,UAATvF,IACTgI,EAAaD,GAAYC,EAAaD,GAAUxC,QAAQ,YAAa,KAEvE,IAAIW,EAAahB,EACjBgB,EAAWnB,KAAO,EAClBI,EAAee,GACfP,EAAe,eAAKqC,IACpBjC,IAmK4BkC,CACEvI,EAAKe,KAAK8E,QAAQ,MAAO,IACzB7F,EAAKD,OAAOO,MAEd4C,MAGF,kBAAC,IAAD,CAAkB7C,GAAG,kBAEvB,4BACEC,KAAK,SACLH,UAAU,+CACVuD,QAAS,YA5KZ,SAAC2E,GACxB,IAAIC,EAAetC,EACnBsC,EAAaD,GAAY,GACzBb,SAASC,eAAeY,GAAUjH,MAAQ,GAC1C6E,EAAe,eAAKqC,IACpBjC,IAwK4BmC,CAAiBxI,EAAKe,KAAK8E,QAAQ,MAAO,KAC1C3C,MAGF,uBAAG/C,UAAU,mCACb,0BAAMA,UAAU,QACd,kBAAC,IAAD,CAAkBE,GAAG,sCASvC,4BACEC,KAAK,SACLH,UAAU,uDACVuD,QAAS,WAtLrBuC,EAAe,IACfuB,SAASC,eAAe,mBAAmBgB,QAC3CpC,EAAkB,MAwLN,kBAAC,IAAD,CAAkBhG,GAAG,iCAK7B,6BACE,kBAAC,IAAD,CAAgBiB,UAAWC,KACzB,kBAAC,IAAD,CAAOpB,UAAW,SAAWT,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGJ,EAAWkC,KAAI,SAACxB,EAAMyB,GACrB,OACE,kBAAC,IAAD,CACEtB,UAAS,qCACH,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,IAAN,OAAW1B,QAAX,IAAWA,OAAX,EAAWA,EAAM0B,GAAK,IAExBC,IAAKF,EAAMT,YAEVhB,EAAK0F,MAAME,OACV,kBAAC,IAAD,CACEA,OACEE,EAAS/E,OAASf,EAAKe,KAAK8E,QAAQ,MAAO,IAE7C6C,UACoB,OAAlB5C,EAASxF,KACLwF,EAASxF,KACP,MACA,OACFwF,EAASJ,MACT,MACA,OAENhC,QAAS,YArQT,SAAC1D,GACzB,IAAI2I,EAAY7C,EACZ9F,EAAKe,KAAK8E,QAAQ,MAAO,MAAQ8C,EAAU5H,KAC1B,OAAnB4H,EAAUrI,KACLqI,EAAUrI,MAAQqI,EAAUrI,KAC5BqI,EAAUjD,OAASiD,EAAUjD,OAElCiD,EAAU5H,KAAOf,EAAKe,KAAK8E,QAAQ,MAAO,IAC1C8C,EAAUjD,OAAQ,EAClBiD,EAAUrI,KAAO,MAEnByF,EAAY,eACP4C,IAELtC,IAwP0BuC,CAAkB5I,KAGpB,8BACE,kBAAC,IAAD,CAAkBK,GAAIL,EAAK4B,UAI/B,8BACE,kBAAC,IAAD,CAAkBvB,GAAIL,EAAK4B,eAQzC,kBAAC,IAAD,KAAYnC,IAGd,yBAAKU,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZZ,GACC,8BACE,uBAAGY,UAAU,2CACb,kBAAC,IAAD,CAAkBE,GAAG,8BAGxBb,GACC,0BAAMW,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBE,GAAG,6BAOjC,kBAAC,IAAD,CACEwI,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACpDvH,UAAU,MACVgE,MAAOE,EAAYF,MACnBC,YAAaC,EAAYD,YACzBF,KAAMG,EAAYH,KAClByD,aA3Ue,SAAC9F,EAAO+F,GAC/B,IAAIvC,EAAahB,EACjBgB,EAAWpB,YACT2D,EAAUvC,EAAWnB,KACjBmB,EAAWpB,YAAcoB,EAAWjB,YACpCiB,EAAWpB,YAAcoB,EAAWjB,YAC1CiB,EAAWnB,KAAO0D,EAClBtD,EAAe,eACVe,IAELH,KAkUQ2C,oBA/TsB,SAAChG,GAC/B,IAAIwD,EAAahB,EACjBgB,EAAWnB,KAAO,EAClBmB,EAAWjB,YAAc0D,SAASjG,EAAM7B,OAAOC,MAAO,IACtDoF,EAAWpB,YAAc,EACzBK,EAAe,eACVe,IAELH,e,kCC3JJ,2YAEO,SAAS6C,EAAsBlC,GACpC,OAAOmC,IAAMC,IAAN,wBAA2BpC,EAAS,IAAMA,EAAS,KAErD,SAASqC,EAAehJ,GAC7B,OAAO8I,IAAMC,IAAN,yBAA4B/I,IAE9B,SAASiJ,EAAkBjJ,EAAIM,GACpC,OAAOwI,IAAMI,KAAN,6BAAiClJ,GAAMM,GAEzC,SAAS6I,EAAwB7I,GACtC,OAAOwI,IAAMI,KAAN,qBAAiC5I,GAEnC,SAAS8I,IACd,OAAON,IAAMC,IAAN,mBAEF,SAASM,EAASC,GACvB,OAAOR,IAAMC,IAAN,sBAAyBO,IAE3B,SAASC,EAAcD,EAAME,GAClC,OAAOV,IAAMC,IAAN,qBAAwBO,EAAxB,YAAgCE,IAElC,SAASC,EAASH,EAAME,EAAME,GACnC,OAAOZ,IAAMC,IAAN,sBAAyBO,EAAzB,YAAiCE,EAAjC,YAAyCE,IAK3C,SAASC,EAAkBC,GAChC,OAAOd,IAAMC,IAAN,iCAAoCa,IAEtC,SAASC,EAAiBC,GAC/B,OAAOhB,IAAMC,IAAN,0BAA6Be,IAE/B,SAASC,EAAgB/J,GAC9B,OAAO8I,IAAMC,IAAN,uBAA0B/I,M,kCCpCnC,2DA2BIgK,EAAe,cAAiB,SAAsBjL,EAAOkL,GAC/D,IAAIC,EAAUnL,EAAMmL,QAChBpK,EAAYf,EAAMe,UAClBqK,EAAQ,YAAyBpL,EAAO,CAAC,UAAW,cAEpDqL,EAAU,aAAiB,KAC/B,OAAoB,gBAAoB,MAAO,YAAS,CACtDtK,UAAW,YAAKoK,EAAQG,KAAMvK,EAAkC,eAAvBsK,EAAQE,YAA+BJ,EAAQK,qBACxFN,IAAKA,GACJE,OAyBU,iBAtDK,SAAgBzI,GAClC,MAAO,CAEL2I,KAAM,CACJG,SAAU,GACVtD,MAAOxF,EAAM+I,QAAQC,OAAOnF,OAC5BoF,WAAY,EACZC,QAAS,eAIXL,oBAAqB,CACnBxI,UAAW,MA0CiB,CAChCrB,KAAM,mBADO,CAEZsJ,I,kCC/DH,oEAqCIa,EAAe,cAAiB,SAAsB9L,EAAOkL,GAC/D,IAAI7K,EAAWL,EAAMK,SACjB8K,EAAUnL,EAAMmL,QAChBpK,EAAYf,EAAMe,UAClBgL,EAAwB/L,EAAMgM,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAejM,EAAMkM,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAcnM,EAAMmF,QACpBiH,EAAyBpM,EAAMoM,uBAC/BC,EAAgBrM,EAAMsM,UACtBC,EAA2BvM,EAAMuM,yBACjCnB,EAAQ,YAAyBpL,EAAO,CAAC,WAAY,UAAW,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,6BAG7JwM,EADoB,aAAiB,KACXA,MAE1BrH,EAAyB,MAAfgH,EAAsBA,EAAc9L,EAEnC,MAAX8E,GAAmBA,EAAQjE,OAAS,KAAe8K,IACrD7G,EAAuB,gBAAoB,IAAY,YAAS,CAC9DsH,QAASD,EAAQ,QAAU,QAC3BzL,UAAWoK,EAAQhG,QACnBjD,UAAW,OACX2J,QAAS,SACRO,GAAyBjH,IAG9B,IAAImH,EAAYD,EAWhB,OATiB,MAAbC,GAAqBA,EAAUpL,OAAS,KAAe8K,IACzDM,EAAyB,gBAAoB,IAAY,YAAS,CAChEG,QAAS,QACT1L,UAAWoK,EAAQmB,UACnBnE,MAAO,gBACP0D,QAAS,SACRU,GAA2BD,IAGZ,gBAAoB,MAAO,YAAS,CACtDvL,UAAW,YAAKoK,EAAQG,KAAMvK,EAAWyL,GAASrB,EAAQqB,MAAON,GAASf,EAAQe,MAAO/G,GAAWmH,GAAanB,EAAQuB,WACzHxB,IAAKA,GACJE,GAAQjG,EAASmH,MA4DP,gBAnIK,CAElBhB,KAAM,CACJqB,KAAM,WACNlB,SAAU,EACVzI,UAAW,EACX4J,aAAc,GAIhBF,UAAW,CACT1J,UAAW,EACX4J,aAAc,GAIhBJ,MAAO,GAGPN,MAAO,CACLnE,YAAa,IAIf5C,QAAS,GAGTmH,UAAW,IAwGqB,CAChC3K,KAAM,mBADO,CAEZmK,I,sEC3IY,ICCA,SAAuBe,EAAMC,GAC1C,IAAIC,EAAY,IAAMC,KAAK,IAAMC,YAAW,SAAUjN,EAAOkL,GAC3D,OAAO,IAAMgC,cAAcC,EAAA,EAAS,YAAS,CAC3CjC,IAAKA,GACJlL,GAAQ6M,OAQb,OADAE,EAAUK,QAAUD,EAAA,EAAQC,QACrBL,EDbM,CAAc,IAAMG,cAAc,OAAQ,CACvDG,EAAG,wJ,kJEeCC,EAAc,CAClB,CACE9K,MAAO,sBACPb,KAAM,aACNhB,QAAQ,GAEV,CACE6B,MAAO,aACPb,KAAM,OACNhB,QAAQ,GAEV,CACE6B,MAAO,4BACPb,KAAM,SACNhB,QAAQ,IAIN4M,EAAW,CACf,CACElK,MAAO,eACP6B,KAAM,wCACNhE,KAAM,SAmFKpB,gBAAWC,YAAQ,KAAM,KAAdA,EA/E1B,SAAuBC,GACrB,IAAQC,EAASD,EAATC,KACR,EAA8BS,oBAAS,GAAvC,mBAAgB8M,GAAhB,WACA,EAAwB9M,mBAAS,IAAjC,mBAAOa,EAAP,KAAakM,EAAb,KACA,EAAoC/M,mBAAS,IAA7C,mBAAOF,EAAP,KAAmBkN,EAAnB,KACA,EAAsBhN,oBAAS,GAA/B,mBACMO,GADN,UACWjB,EAAM2N,MAAM/F,OAAO3G,IACxB2M,EAAa5N,EAAM2N,MAAM/F,OAAOgG,WAChCC,EAAkB7N,EAAM2N,MAAM/F,OAAOiG,gBACvCC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,WAAUK,KAiBhEtG,qBAf2B,WACzB2F,GAAW,GACX5C,YAAkB3J,GACfmN,MAAK,SAACC,GACLb,GAAW,GACX,IAAIjM,EAAO8M,EAAO9M,KAAKA,KACvBkM,EAAQlM,GACRmM,EAAcnM,MAEf+M,OAAM,SAAClO,GACNoN,GAAW,GACXe,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,6BAIpB,IAE9B,IAAMkC,EAAe,SAACjC,EAAMK,GACqB,kBAA3CkN,OAAOC,SAASC,SAASC,MAAM,KAAK,GACtC5O,EAAM6O,QAAQ5M,KAAd,WACM6L,EADN,kCACwC7M,EADxC,YAC8C2M,EAD9C,YAC4DC,EAD5D,iBACoFtM,EAAKN,KAGzFjB,EAAM6O,QAAQ5M,KAAd,WAAuB6L,EAAvB,yBAAgD7M,EAAhD,YAAsDM,EAAKN,MAM/D,OACE,kBAAC,IAAMH,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEZ,WAAYoN,EACZ9M,WAAYA,EACZD,aAVW,SAACgB,GACpBkM,EAAQlM,IAUApB,SAAS,EACTG,MAAO,IAENiB,EAAKa,KAAI,SAACxB,EAAMyB,GACf,OACE,kBAAC,IAAD,CAAUE,IAAKF,EAAMT,YACnB,kBAAC,IAAD,KACGhB,EAAKkO,WACFL,OACGxG,OAAO,IAAIC,KAAKtH,EAAKkO,aACrBjJ,OAAO,eACV,IAEN,kBAAC,IAAD,KAAYjF,EAAKmO,MACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACExN,KAAMX,EACNuC,aAAcA,EACdC,IAAKmK,kB,qOC1FrByB,EAAYC,aAAW,SAACtM,GAAD,MAAY,CACvC2I,KAAM,CACJzG,MAAO,QAETqK,QAAS,CACPnM,SAAUJ,EAAMwM,WAAWC,QAAQ,KAErCC,YAAa,CACXtM,SAAUJ,EAAMwM,WAAWC,QAAQ,IACnCE,UAAW,SACX1D,WAAY,GAEd2D,iBAAkB,CAChBxM,SAAUJ,EAAMwM,WAAWC,QAAQ,KAErCI,QAAS,CACPjE,WAAY,SACZM,QAAS,SAEX4D,OAAQ,CACNH,UAAW,cA0jBf,SAASI,EAAT,GAA6C,IACvCrP,EADcO,EAAwB,EAAxBA,KAAMuK,EAAkB,EAAlBA,QAAS9I,EAAS,EAATA,MAyEjC,OAvEAhC,EACE,yBAAKU,UAAU,SACb,yBAAKA,UAAU,OACZH,EAAK+O,UACJ/O,EAAK+O,SAASvN,KAAI,SAACZ,EAAGoO,GAAJ,OAChB,yBAAK7O,UAAU,SAASwB,IAAKqN,EAAIhO,YAC/B,kBAAC8N,EAAD,CACE9O,KAAMY,EACNa,MACEA,GAA0B,kBAAVA,EACZA,EAAQ,IAAMuN,EAAIhO,WAClB,KAENuJ,QAASA,QAKhBvK,EAAKiP,OACJjP,EAAKiP,MAAMzN,KAAI,SAAC0N,EAAGC,GAAJ,eACb,yBAAKhP,UAAU,SAASwB,IAAKwN,EAAInO,YAC/B,yBAAKb,UAAU,cACb,yCAAQ+O,EAAEE,eAAV,aAAQ,EAAWC,MACnB,yBAAKlP,UAAU,oBACW,IAAvB+O,EAAEE,QAAQE,UACY,IAAvBJ,EAAEE,QAAQE,UACa,IAAvBJ,EAAEE,QAAQE,UACa,IAAvBJ,EAAEE,QAAQE,SACR,2BACEjP,GAAE,gBAAWL,EAAKK,GAAhB,YAAsB6O,EAAE7O,IAC1BC,KACyB,IAAvB4O,EAAEE,QAAQE,SACN,OACuB,IAAvBJ,EAAEE,QAAQE,UAAyC,IAAvBJ,EAAEE,QAAQE,SACtC,SACA,OAENnP,UAAS,uBACP+O,EAAEK,UAAyC,IAA7BL,EAAEK,SAASC,OAAO3O,OAC5B,qBACA,IAENO,MAAO8N,EAAEK,UAAY,GACrB9O,SAAU,SAACC,KACX8D,UAAQ,IAGV,8BACEiL,KAAK,IACLpP,GAAE,gBAAWL,EAAKK,GAAhB,YAAsB6O,EAAE7O,IAC1BF,UAAS,uBACP+O,EAAEK,UAAyC,IAA7BL,EAAEK,SAASC,OAAO3O,OAC5B,qBACA,IAENO,MAAO8N,EAAEK,UAAY,GACrB9O,SAAU,SAACC,KACX8D,UAAQ,IAGZ,yBAAKrE,UAAU,sBACb,0BAAMA,UAAU,oBAAhB,UAAoC+O,EAAEE,eAAtC,aAAoC,EAAWM,eAW/D,kBAAC,IAAD,CAAgBC,iBAAiB,EAAOxP,UAAU,0BAChD,kBAAC,IAAD,CAAuByP,WAAY,kBAAC,IAAD,OACjC,0BAAMzP,UAAWoK,EAAQkE,YAAapO,GAAIoB,GACvCzB,EAAK4B,QAGV,kBAAC,IAAD,CAAuBzB,UAAWoK,EAAQqE,SACvCnP,GAEH,kBAAC,IAAD,OAISP,gBAAWC,YAAQ,KAAM,KAAdA,EA7oB1B,SAA6BC,GAC3B,IAAQC,EAASD,EAATC,KACR,EAA8BS,oBAAS,GAAvC,mBAAgB8M,GAAhB,WACA,EAAwB9M,mBAAS,IAAjC,mBAAOa,EAAP,KAAakM,EAAb,KACA,EAAsB/M,mBAAS,IAA/B,mBAAO+P,EAAP,KAAYC,EAAZ,KACA,EAAsBhQ,oBAAS,GAA/B,mBACMiQ,GADN,UACkBC,eAClB,EAA0ClQ,mBAAS,IAAnD,mBAAOmQ,EAAP,KAAsBC,EAAtB,KACM7P,EAAKjB,EAAM2N,MAAM/F,OAAO3G,GACxB4M,EAAkB7N,EAAM2N,MAAM/F,OAAOiG,gBACrCkD,EAAsB/Q,EAAM2N,MAAM/F,OAAOmJ,oBACzCnD,EAAa5N,EAAM2N,MAAM/F,OAAOgG,WAClCE,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,WAAUK,KAChE,EAAwCzN,mBAAS,IAAjD,mBAAOsQ,EAAP,KAAqBC,EAArB,KACA,EAAsCvQ,mBAAS,IAA/C,mBAAOwQ,EAAP,KAAoBC,EAApB,KACMhG,EAAU6D,IAfkB,4CAkFlC,WAAkCoC,GAAlC,iBAAAtB,EAAA,6DACMvO,EAAO6P,EACPC,EAAU,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAA1B,EAAA,sDACftO,EAAI,EADW,YACRA,EAAID,EAAKE,QADD,0CAGDuJ,YAAgBzJ,EAAKC,GAAGP,IAHvB,OAGhBoN,EAHgB,OAIpB9M,EAAKC,GAAGiQ,eAAiBpD,EAAO9M,KAAKA,KAAKkQ,eAC1ClQ,EAAKC,GAAGkQ,IAAMnQ,EAAKC,GAAGkQ,IAAMnQ,EAAKC,GAAGkQ,IAAM,EACtClQ,IAAMD,EAAKE,OAAS,GAAG8P,IANP,kDAQpBhD,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,wBACxCO,IAAMD,EAAKE,OAAS,GAAG8P,IATP,QACS/P,IADT,yEAAZ,yDAFhB,SAeQ6P,EAfR,OAgBEJ,EAAgB1P,GAhBlB,4CAlFkC,sBAiBlCoQ,2BAAgB,WACiC,kBAA3ClD,OAAOC,SAASC,SAASC,MAAM,KAAK,IACtC+B,EAAUiB,eAAe,CACvB,CACEjD,SAAS,oBACTnM,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,oBAElC,CACE0N,SAAS,iCAAD,OAAmC1N,EAAnC,YAAyC2M,EAAzC,YAAuDC,GAC/DrL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,0BAElC,CACE0N,SAAS,iCAAD,OAAmC1N,EAAnC,YAAyC2M,EAAzC,YAAuDC,EAAvD,SACRrL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,+BAElC,CACE0N,SAAS,iCAAD,OAAmC1N,EAAnC,YAAyC2M,EAAzC,YAAuDC,EAAvD,iBAA+EkD,GACvFvO,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,kBAGpC0P,EAAUkB,SAAS5R,EAAKmB,cAAc,CAAEH,GAAI,kBAE5C0P,EAAUiB,eAAe,CACvB,CACEjD,SAAS,IAAD,OAAMb,EAAN,iBACRtL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,wBAElC,CACE0N,SAAS,IAAD,OAAMb,EAAN,yBAA+B7M,GACvCuB,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,mBAElC,CACE0N,SAAS,IAAD,OAAMb,EAAN,yBAA+B7M,EAA/B,YAAqC4M,GAC7CrL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,4BAGpC0P,EAAUkB,SAAS5R,EAAKmB,cAAc,CAAEH,GAAI,6BAE7C,IAyBH4G,qBAvB0B,WACxB2F,GAAW,GACX1C,YAC6C,kBAA3C2D,OAAOC,SAASC,SAASC,MAAM,KAAK,GAChCmC,EACAlD,GAEHO,MAAK,SAACC,GACLb,GAAW,GACX2D,EAAe9C,EAAO9M,KAAKA,KAAKuQ,WAChCrE,EAAQY,EAAO9M,KAAKA,KAAKwQ,KAAK,IAC9BjB,EAAiBzC,EAAO9M,KAAKA,KAAKyQ,QAClCtB,EAAOrC,EAAO9M,KAAKA,KAAK0Q,KAAO5D,EAAO9M,KAAKA,KAAK0Q,KAAO,IArE3B,oCAsE5BC,CACE7D,EAAO9M,KAAKA,KAAK4Q,MAAQ9D,EAAO9M,KAAKA,KAAK4Q,MAAQ,OAGrD7D,OAAM,SAAClO,GACNoN,GAAW,GACXe,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,6BAIrB,IAqB7B,IAAMmR,EAAgB,SAAC7Q,GACrB,IAAI2E,EAAQ,EAIZ,OAHA3E,EAAKa,KAAI,SAACxB,GACRsF,GAAStF,EAAKyR,MAAQzR,EAAK8Q,OAEtBxL,GAGT,OACE,kBAAC,IAAMpF,SAAP,KACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,4DAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAd,oBACoBQ,EAAK+Q,UAEzB,0BAAMvR,UAAU,cACbQ,EAAKuN,WACFL,OACGxG,OAAO,IAAIC,KAAK3G,EAAKuN,aACrBjJ,OAAO,eACV,SAOhB,yBAAK9E,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,yDAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAkBQ,EAAKgR,QACrC,0BAAMxR,UAAU,cAAcQ,EAAKwN,WAM7C,yBAAKhO,UAAU,YACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6CACb,0BAAMA,UAAU,gBACd,uBAAGA,UAAU,sDAGjB,yBAAKA,UAAU,mDACb,wBAAIA,UAAU,kBAAkBQ,EAAKiR,QACrC,0BAAMzR,UAAU,cAAcQ,EAAKwN,YAO/C,yBAAKhO,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,MAAM,mBAClB,kBAAC,IAAD,KACGqO,EAAczO,KAAI,SAACxB,EAAMyB,GAAP,OACjB,kBAACqN,EAAD,CACEnN,IAAKF,EAAMT,WACXS,MAAOA,EAAMT,WACbhB,KAAMA,EACNuK,QAASA,WAkDrB,yBAAKpK,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,MAAM,yBAClB,kBAAC,IAAD,KACE,2BAAOzB,UAAU,SACf,+BACE,4BACE,yCACA,oCACA,qCACA,2CAGHiQ,EAAa5O,KAAI,SAACxB,EAAMyB,GACvB,OACE,2BAAOE,IAAKF,EAAMT,YAChB,4BACE,4BAAKhB,EAAKqP,MACV,4BACE,kBAAC,IAAD,CACEjO,MAAOpB,EAAK8Q,IACZzQ,GAAG,oBACHsH,YAAY,OACZxH,UAAU,eACV2H,sBAAsB,EACtBC,mBAAmB,EACnB8J,eAAe,EACf5J,cAAe,SAACvH,GACd,IAAIC,EAAOmG,OAAOC,OAAO,GAAIqJ,GACzBpB,EAAMrO,EAAKmR,WACb,SAAC1Q,GAAD,OAAWA,EAAMf,KAAOL,EAAKK,MAE/BM,EAAKqO,GAAK8B,IAAMpQ,EAAEqR,WAAarR,EAAEqR,WAAa,EAC9C1B,EAAgB1P,OAItB,4BAAK8D,YAAOzE,EAAKyR,QACjB,4BAAKhN,YAAOzE,EAAKyR,MAAQzR,EAAK8Q,OAsB/B9Q,EAAK6Q,gBACJ7Q,EAAK6Q,eAAerP,KAAI,SAACJ,EAAO4N,GAC9B,OACE,wBACErN,IAAKqN,EAAIhO,WACT2C,MAAO,CAAEqO,gBAAiB,YAE1B,wBAAI7R,UAAU,SAASiB,EAAMiO,MAC7B,4BACE,2BACE/O,KAAK,SACLH,UAAU,eACViB,MAAOA,EAAM0P,IACbrQ,SAAU,aACV+D,UAAQ,KAGZ,4BAAKC,YAAO,IACZ,4BAAKA,YAAO,YAQ1B,+BACE,4BACE,wBAAIwN,QAAQ,MACZ,gDACA,4BACE,kBAAC,IAAD,CACE7Q,MAAOT,EAAKuR,KAAO,EACnB7R,GAAG,oBACHsH,YAAY,OACZxH,UAAU,eACV2H,sBAAsB,EACtBC,mBAAmB,EACnBH,mBAAmB,EACnBiK,eAAe,EACf7J,OAAQ,MACRmK,mBAAmB,EACnBC,aAAc,EACdnK,cAAe,SAACvH,SAItB,4BACE,wBAAIuR,QAAQ,MACZ,4BACE,0BACEtO,MAAO,CAAE0O,cAAe,WAOE,KAAd,OAAX/B,QAAW,IAAXA,OAAA,EAAAA,EAAagC,SACZ,uBAAGnS,UAAU,mEAEb,uBAAGA,UAAU,oEAZnB,iBAiBA,wBAAI8R,QAAQ,KACV,kBAAC,IAAD,CACE5R,GAAG,oBACHe,MAAOkP,EAAYiC,OACnB5K,YAAY,OACZxH,UAAU,eACV2H,sBAAsB,EACtBC,mBAAmB,EACnBH,mBAAmB,EACnBiK,eAAe,EACf7J,OAAQ,MACRC,cAAe,SAACvH,SAItB,4BACE,wBAAIuR,QAAQ,MACZ,qCACA,4BAC2B,IAAxB3B,EAAYgC,QACT7N,YAAO9D,EAAKuR,IAAMV,EAAcpB,IAChC3L,YAAO6L,EAAYiC,UAG3B,4BACE,wBAAIN,QAAQ,MACZ,qCACA,wBAAIA,QAAQ,KACV,kBAAC,IAAD,CACE7Q,MAAOkP,EAAYkC,QACnBnS,GAAG,oBACHsH,YAAY,OACZxH,UAAU,eACV2H,sBAAsB,EACtBC,mBAAmB,EACnB8J,eAAe,EACfjK,mBAAmB,EACnBI,OAAQ,MACRC,cAAe,SAACvH,SAItB,4BACE,wBAAIuR,QAAQ,MACZ,yCACA,wBAAIA,QAAQ,KACgB,KAAd,OAAX3B,QAAW,IAAXA,OAAA,EAAAA,EAAagC,SACV7N,YACE6L,EAAYkC,SACT7R,EAAKuR,IAAMV,EAAcpB,KAE9B3L,YAAO6L,GAAW,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAaiC,iBAStD,yBAAKpS,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,MAAM,QAClB,kBAAC,IAAD,KACE,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,kDACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAK4C,GACZhS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,sEACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAK6C,MACZjS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,qEACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAK8C,IACZlS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAK+C,QACZnS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,4CACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKgD,UACZpS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,4CACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKiD,WACZrS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,iDACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKkD,QACZtS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKmD,QACZvS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,gDACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKoD,cACZxS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,qCACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKqD,GACZzS,SAAU,iBAIhB,yBAAKN,UAAU,YACb,yBAAKA,UAAU,cACb,uDACA,2BACEG,KAAK,OACLH,UAAU,eACVqE,UAAU,EACVpD,MAAK,OAAEyO,QAAF,IAAEA,OAAF,EAAEA,EAAKsD,QACZ1S,SAAU,4B,kKCnkB1BiM,EAAc,CAClB,CACE9K,MAAO,qBACPb,KAAM,cACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,EACRrF,MAAM,GAERP,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,qBACPb,KAAM,OACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,0BACPb,KAAM,aACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,gBACPb,KAAM,OACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,qBACPb,KAAM,UACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,UAGV,CACEsB,MAAO,cACPb,KAAM,QACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,UAGV,CACEsB,MAAO,eACPb,KAAM,KACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,0BACPb,KAAM,UACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,eACPb,KAAM,SACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,SAGV,CACEsB,MAAO,4BACPb,KAAM,SACN2E,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEV5F,OAAQ,CACN6F,QAAQ,EACRtF,KAAM,UAKNqM,EAAW,CACf,CACElK,MAAO,eACP6B,KAAM,wCACNhE,KAAM,SA2GKpB,gBAAWC,YAAQ,KAAM,KAAdA,EAvG1B,SAAyBC,GACvB,IAAQC,EAASD,EAATC,KACR,EAA8BS,oBAAS,GAAvC,mBAAOP,EAAP,KAAgBqN,EAAhB,KACA,EAAwB9M,mBAAS,CAC/Ba,KAAM,GACN2E,MAAO,IAFT,mBAAO3E,EAAP,KAAakM,EAAb,KAIA,EAAsB/M,oBAAS,GAA/B,mBAAON,EAAP,KAAY4T,EAAZ,KACMrD,EAAYC,cACd9C,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,WAAUK,KAEhEwD,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACEjD,SAAS,IAAD,OAAMb,EAAN,iBACRtL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,0BAGpC0P,EAAUkB,SAAS5R,EAAKmB,cAAc,CAAEH,GAAI,0BAC3C,IAEH,IAwBMkC,EAAe,SAACjC,EAAMK,GAC1BvB,EAAM6O,QAAQ5M,KAAd,WAAuB6L,EAAvB,yBAAgDvM,EAAKN,MAEvD,OACE,kBAAC,IAAMH,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEZ,WAAYoN,EACZxH,aAjCS,SAAC8B,GAClB4F,GAAW,GACXC,EAAQ,2BACHlM,GADE,IAEL2E,MAAO,EACP3E,KAAM,MAERyS,GAAO,GACPlK,YAAsBlC,GACnBwG,MAAK,SAACC,GACLb,GAAW,GACXC,EAAQ,2BACHlM,GADE,IAEL2E,MAAOmI,EAAO9M,KAAKA,KAAK2E,OAAS,EACjC3E,KAAM8M,EAAO9M,KAAKA,KAAK8O,WAG1B/B,OAAM,SAAClO,GACN4T,GAAO,GACPxG,GAAW,GACXe,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,4BAcxCd,QAASA,EACTC,IAAKA,EACL2F,UAAWxE,EAAK2E,MAChB5F,MAAO,IAENiB,EAAKA,KAAKa,KAAI,SAACxB,EAAMyB,GACpB,OACE,kBAAC,IAAD,CAAUE,IAAKF,EAAMT,YACnB,kBAAC,IAAD,KAAYhB,EAAKqT,aACjB,kBAAC,IAAD,YAAYrT,QAAZ,IAAYA,OAAZ,EAAYA,EAAMqP,MAClB,kBAAC,IAAD,KACGxB,OACExG,OAAO,IAAIC,KAAJ,OAAStH,QAAT,IAASA,OAAT,EAASA,EAAMkO,aACtBjJ,OAAO,gBAEZ,kBAAC,IAAD,YAAYjF,QAAZ,IAAYA,OAAZ,EAAYA,EAAMsT,MAClB,kBAAC,IAAD,YAAYtT,QAAZ,IAAYA,OAAZ,EAAYA,EAAMuT,SAClB,kBAAC,IAAD,YAAYvT,QAAZ,IAAYA,OAAZ,EAAYA,EAAMwT,OAClB,kBAAC,IAAD,KACgB,OAAT,OAAJxT,QAAI,IAAJA,OAAA,EAAAA,EAAMyT,IAAa,YAAc,aAEpC,kBAAC,IAAD,MAAgB,OAAJzT,QAAI,IAAJA,OAAA,EAAAA,EAAM0T,SAAU,SAAW,UACvC,kBAAC,IAAD,KACE,0BACEvT,UACuB,IAArBH,EAAK2T,YAAoB,eAAiB,eAGtB,IAArB3T,EAAK2T,YAAoB,SAAW,eAGzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEhT,KAAMX,EACNuC,aAAcA,EACdC,IAAKmK,kB,2LCtDvB,EAAiB,cAAiB,SAAwBvN,EAAOkL,GACnE,IAAIC,EAAUnL,EAAMmL,QAChBpK,EAAYf,EAAMe,UAClByT,EAAexU,EAAMmI,MACrBA,OAAyB,IAAjBqM,EAA0B,UAAYA,EAC9CxS,EAAQhC,EAAMgC,MACdyS,EAAczU,EAAMyU,YACpBC,EAAiB1U,EAAMyM,QACvBA,OAA6B,IAAnBiI,EAA4B,gBAAkBA,EACxDtJ,EAAQ,YAAyBpL,EAAO,CAAC,UAAW,YAAa,QAAS,QAAS,cAAe,YAElG2C,EAAQ,OAAAgS,EAAA,KACRC,EAAY,GACZC,EAAe,CACjBC,KAAM,GACNC,KAAM,IAGR,GAAgB,gBAAZtI,GAAyC,WAAZA,EAC/B,QAAcuI,IAAVhT,EAAqB,CACvB4S,EAAU,iBAAmBK,KAAKC,MAAMlT,GACxC,IAAIsG,EAAYtG,EAAQ,IAEA,QAApBW,EAAM2G,YACRhB,GAAaA,GAGfuM,EAAaC,KAAKxM,UAAY,cAAc6M,OAAO7M,EAAW,WACrD,EAKb,GAAgB,WAAZmE,EACF,QAAoBuI,IAAhBP,EAA2B,CAC7B,IAAIW,GAAcX,GAAe,GAAK,IAEd,QAApB9R,EAAM2G,YACR8L,GAAcA,GAGhBP,EAAaE,KAAKzM,UAAY,cAAc6M,OAAOC,EAAY,WACtD,EAKb,OAAoB,gBAAoB,MAAO,YAAS,CACtDrU,UAAW,YAAKoK,EAAQG,KAAMH,EAAQ,QAAQgK,OAAO,OAAAE,EAAA,GAAWlN,KAAUpH,EAAW,CACnF,YAAeoK,EAAQmK,YACvB,cAAiBnK,EAAQoK,cACzB,OAAUpK,EAAQqK,OAClB,MAASrK,EAAQsK,OACjBhJ,IACFiJ,KAAM,eACLd,EAAW,CACZ1J,IAAKA,GACJE,GAAoB,WAAZqB,EAAoC,gBAAoB,MAAO,CACxE1L,UAAW,YAAKoK,EAAQwK,OAAQxK,EAAQ,cAAcgK,OAAO,OAAAE,EAAA,GAAWlN,QACrE,KAAmB,gBAAoB,MAAO,CACjDpH,UAAW,YAAKoK,EAAQyK,IAAKzK,EAAQ,WAAWgK,OAAO,OAAAE,EAAA,GAAWlN,MAAuB,kBAAZsE,GAA2C,UAAZA,IAAwBtB,EAAQ0K,kBAAmB,CAC7J,YAAe1K,EAAQ2K,gBACvB,OAAU3K,EAAQ4K,YAClBtJ,IACFlI,MAAOsQ,EAAaC,OACN,gBAAZrI,EAA4B,KAAoB,gBAAoB,MAAO,CAC7E1L,UAAW,YAAKoK,EAAQyK,KAAkB,kBAAZnJ,GAA2C,UAAZA,IAAwBtB,EAAQ6K,kBAA+B,WAAZvJ,EAAuB,CAACtB,EAAQ,QAAQgK,OAAO,OAAAE,EAAA,GAAWlN,KAAUgD,EAAQ8K,YAAc9K,EAAQ,WAAWgK,OAAO,OAAAE,EAAA,GAAWlN,MAC/O5D,MAAOsQ,EAAaE,WA2CT,SAAArS,EAAA,IA7RK,SAAgBC,GAClC,IAAIuT,EAAW,SAAkB/N,GAC/B,MAA8B,UAAvBxF,EAAM+I,QAAQxK,KAAmB,YAAQiH,EAAO,KAAQ,YAAOA,EAAO,KAG3EgO,EAAoBD,EAASvT,EAAM+I,QAAQvG,QAAQiR,MACnDC,EAAsBH,EAASvT,EAAM+I,QAAQY,UAAU8J,MAC3D,MAAO,CAEL9K,KAAM,CACJwC,SAAU,WACVwI,SAAU,SACVC,OAAQ,EACR,eAAgB,CACdC,YAAa,UAKjBC,aAAc,CACZ7D,gBAAiBuD,GAInBO,eAAgB,CACd9D,gBAAiByD,GAInBf,YAAa,GAGbC,cAAe,GAGfC,OAAQ,CACN5C,gBAAiB,eAInB6C,MAAO,CACLnN,UAAW,kBAIbqN,OAAQ,CACN7H,SAAU,WACV9K,UAAW,EACXuT,OAAQ,OACR1R,MAAO,OACP8R,UAAW,8BAIbC,mBAAoB,CAClBC,gBAAiB,mBAAmB1B,OAAOgB,EAAmB,SAAShB,OAAOgB,EAAmB,0BACjGW,eAAgB,YAChBC,mBAAoB,aAItBC,qBAAsB,CACpBH,gBAAiB,mBAAmB1B,OAAOkB,EAAqB,SAASlB,OAAOkB,EAAqB,0BACrGS,eAAgB,YAChBC,mBAAoB,aAItBnB,IAAK,CACH/Q,MAAO,OACPiJ,SAAU,WACVmJ,KAAM,EACNC,OAAQ,EACRC,IAAK,EACLC,WAAY,wBACZC,gBAAiB,QAInBC,gBAAiB,CACf1E,gBAAiBjQ,EAAM+I,QAAQvG,QAAQiR,MAIzCmB,kBAAmB,CACjB3E,gBAAiBjQ,EAAM+I,QAAQY,UAAU8J,MAI3CP,kBAAmB,CACjBhR,MAAO,OACP8R,UAAW,yEAIbb,gBAAiB,CACfsB,WAAY,cAAcjC,OAlGN,EAkGkC,aAIxDY,WAAY,CACVyB,OAAQ,EACRJ,WAAY,cAAcjC,OAxGN,EAwGkC,aAIxDa,kBAAmB,CACjBnR,MAAO,OACP8R,UAAW,0EAIbV,WAAY,CACVmB,WAAY,cAAcjC,OAnHN,EAmHkC,aAMxD,4BAA6B,CAE3B,KAAM,CACJ8B,KAAM,OACNQ,MAAO,QAGT,MAAO,CACLR,KAAM,OACNQ,MAAO,QAET,OAAQ,CACNR,KAAM,OACNQ,MAAO,SAGX,4BAA6B,CAE3B,KAAM,CACJR,KAAM,QACNQ,MAAO,QAGT,MAAO,CACLR,KAAM,OACNQ,MAAO,OAET,OAAQ,CACNR,KAAM,OACNQ,MAAO,QAGX,oBAAqB,CACnB,KAAM,CACJC,QAAS,EACTX,mBAAoB,aAEtB,MAAO,CACLW,QAAS,EACTX,mBAAoB,aAEtB,OAAQ,CACNW,QAAS,EACTX,mBAAoB,oBA2HM,CAChCpV,KAAM,qBADO,CAEZ,G,qFCtSGgW,EAAkB,CACtB,CAAE1W,GAAI,cAAeoC,MAAO,UAC5B,CAAEpC,GAAI,cAAeoC,MAAO,UAC5B,CAAEpC,GAAI,cAAeoC,MAAO,WAGf,SAASuU,EAAT,GAKX,IAAD,IAJDC,gBAIC,MAJUF,EAIV,MAHDG,wBAGC,MAHkBD,EAAS,GAAG5W,GAG9B,EAFD8W,EAEC,EAFDA,aACG3M,EACF,iBACD,OACE,kBAAC4M,EAAA,EAAD,eACEvL,QAAQ,QACRqL,iBAAkBA,EAClBG,SAAUF,GACN3M,GAEHyM,EAASzV,KAAI,SAACxB,GAAD,OACZ,kBAACoX,EAAA,EAAIE,KAAL,CAAU3V,IAAK3B,EAAKK,IAClB,kBAAC+W,EAAA,EAAIG,KAAL,CAAUC,SAAUxX,EAAKK,GAAIsD,MAAO,CAAE8T,WAAY,MAChD,kBAAC,IAAD,CAAkBpX,GAAIL,EAAKyC,c,4DCFjCwU,EAAW,CACf,CACE5W,GAAI,IACJoC,MAAO,yBAILiV,EAAkB,CACtB,CAAEtW,MAAO,IAAKqB,MAAO,UACrB,CAAErB,MAAO,IAAKqB,MAAO,WACrB,CAAErB,MAAO,IAAKqB,MAAO,eAGjBkV,EAAwB,CAC5B,CAAEvW,MAAO,IAAKqB,MAAO,aACrB,CAAErB,MAAO,IAAKqB,MAAO,cAGjBmV,EAA2B,CAC/B,CAAExW,MAAO,gBAAiBqB,MAAO,iBACjC,CAAErB,MAAO,gBAAiBqB,MAAO,iBACjC,CAAErB,MAAO,2BAA4BqB,MAAO,4BAC5C,CAAErB,MAAO,wBAAyBqB,MAAO,yBACzC,CAAErB,MAAO,UAAWqB,MAAO,WAC3B,CAAErB,MAAO,UAAWqB,MAAO,WAC3B,CAAErB,MAAO,WAAYqB,MAAO,YAC5B,CAAErB,MAAO,SAAUqB,MAAO,WAGtBoV,EAA4B,CAChC,CAAEzW,MAAO,iBAAkBqB,MAAO,kBAClC,CAAErB,MAAO,oBAAqBqB,MAAO,qBACrC,CAAErB,MAAO,mBAAoBqB,MAAO,oBACpC,CAAErB,MAAO,eAAgBqB,MAAO,gBAChC,CAAErB,MAAO,kBAAmBqB,MAAO,mBACnC,CAAErB,MAAO,MAAOqB,MAAO,OACvB,CAAErB,MAAO,YAAaqB,MAAO,aAC7B,CAAErB,MAAO,YAAaqB,MAAO,cAGzB2L,EAAYC,YAAW,CAC3ByJ,UAAW,CACT9L,aAAc,GACd9H,WAAY,GACZ6T,YAAa,GACb9T,MAAO,IACP0R,OAAQ,OA21BGzW,gBAAWC,YAAQ,KAAM,KAAdA,EAv1B1B,SAAqBC,GACnB,IAAQC,EAASD,EAATC,KACF0Q,EAAYC,cACZzF,EAAU6D,IAChB,EAA8BtO,oBAAS,GAAvC,mBAAOP,EAAP,KAAgBqN,EAAhB,KACA,EAA0C9M,oBAAS,GAAnD,mBAAOkY,EAAP,KAAsBC,EAAtB,KACA,EAAoCnY,oBAAS,GAA7C,mBAAOoY,EAAP,KAAmBC,EAAnB,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAAkCvY,mBAASmX,EAAS,GAAG5W,IAAvD,mBAAOiY,EAAP,KAAkBC,EAAlB,KACA,EAAkDzY,mBAAS,IAA3D,mBAAO0Y,EAAP,KAA0BC,EAA1B,KACA,EAA8D3Y,mBAAS,IAAvE,mBAAO4Y,GAAP,KAAgCC,GAAhC,KACA,GAAwB7Y,mBAAS,IAAjC,qBAAOuP,GAAP,MAAauJ,GAAb,MACA,GAAsB9Y,mBAAS,IAA/B,qBAAO+Y,GAAP,MAAYC,GAAZ,MACA,GAAoEhZ,mBAClE,IADF,qBAAOiZ,GAAP,MAAmCC,GAAnC,MAGA,GACElZ,mBAAS,IADX,qBAAOmZ,GAAP,MAAoCC,GAApC,MAEA,GAAkEpZ,mBAChE,IADF,qBAAOqZ,GAAP,MAAkCC,GAAlC,MAGA,GAA8DtZ,mBAAS,IAAvE,qBAAOuZ,GAAP,MAAgCC,GAAhC,MACA,GAA0DxZ,mBAAS,IAAnE,qBAAOyZ,GAAP,MAA8BC,GAA9B,MACA,GAAsD1Z,mBAAS,IAA/D,qBAAO2Z,GAAP,MAA4BC,GAA5B,MACA,GAAoE5Z,mBAClE,IADF,qBAAO6Z,GAAP,MAAmCC,GAAnC,MAGA,GAAgE9Z,mBAAS,IAAzE,qBAAO+Z,GAAP,MAAiCC,GAAjC,MACA,GAA0Dha,mBAAS,IAAnE,qBAAOia,GAAP,MAA8BC,GAA9B,MACA,GAAsDla,mBAAS,IAA/D,qBAAOma,GAAP,MAA4BC,GAA5B,MACA,GAAoCpa,mBAAS,CAC3C6J,MAAM,EACN2J,MAAM,EACN6G,KAAK,EACLC,KAAK,IAJP,qBAAOC,GAAP,MAAmBC,GAAnB,MAOIpN,IADUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKjN,KAAIkN,KAC1CJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKJ,WAAUK,MAC1DlN,GAAKjB,EAAM2N,MAAM/F,OAAO3G,GAE9B0Q,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACEjD,SAAS,IAAD,OAAMb,GAAN,iBACRtL,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,wBAElC,CACE0N,SAAS,IAAD,OAAMb,GAAN,yBAA+B7M,IACvCuB,MAAOvC,EAAKmB,cAAc,CAAEH,GAAI,qBAGpC0P,EAAUkB,SAAS5R,EAAKmB,cAAc,CAAEH,GAAI,qBAC3C,IAEH,IAAMka,GAAqB,WACzB3N,GAAW,GACXvD,YAAehJ,IACZmN,MAAK,SAACC,GAAY,IAAD,IAChBb,GAAW,GACXyL,EAAY5K,EAAO9M,KAAKA,MACxBiY,GAAQnL,EAAO9M,KAAKA,KAAK0O,MACzByJ,GAAOrL,EAAO9M,KAAKA,KAAK6Z,OACxB,IAAIC,EAAc/C,EAAgB5F,WAChC,SAAC9R,GAAD,OAAUA,EAAKoB,QAAUqM,EAAO9M,KAAKA,KAAK+Z,gBAE5CjC,EAAqBf,EAAgB+C,IACrC,IAAIE,EAAchD,EAAsB7F,WACtC,SAAC9R,GAAD,OAAUA,EAAKoB,QAAUqM,EAAO9M,KAAKA,KAAK8S,MAI5C,GAFAkF,GAA2BhB,EAAsBgD,IAEjD,UAAIlN,EAAO9M,KAAKA,YAAhB,aAAI,EAAkBia,WAAY,CAC5BH,EAAc7C,EAAyB9F,WACzC,SAAC9R,GAAD,aAAUA,EAAKoB,SAAL,UAAeqM,EAAO9M,KAAKA,YAA3B,aAAe,EAAkBia,eAE7C5B,GAA8BpB,EAAyB6C,IAEzD,aAAIhN,EAAO9M,KAAKA,YAAhB,aAAI,EAAkBka,UAAW,CAC3BJ,EAAc5C,EAA0B/F,WAC1C,SAAC9R,GAAD,aAAUA,EAAKoB,SAAL,UAAeqM,EAAO9M,KAAKA,YAA3B,aAAe,EAAkBka,cAE7C3B,GACErB,EAA0B4C,QAI/B/M,OAAM,SAAClO,GACNoN,GAAW,GACXe,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,4BA0JlD,OAtJA4G,oBAAUsT,GAAoB,IAiJ9BtT,qBAlH4B,WAC1B,GAAuC,IAAnCoS,GAAwBxY,OAC1B4I,cACG+D,MAAK,SAACC,GACL,IAAI9M,EAAO8M,EAAO9M,KAAKA,KACvBA,EAAKma,SAAQ,SAAC9a,GACZA,EAAKoB,MAAQpB,EAAKK,GAClBL,EAAKyC,MAAQzC,EAAKqP,QAEpBiK,GAA2B3Y,MAE5B+M,OAAM,SAAClO,GACNmO,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,gCAGhD,UAAI+X,QAAJ,IAAIA,OAAJ,EAAIA,EAAUzO,KAAM,CAClB,IAAI8Q,EAAcpB,GAAwBvH,WACxC,SAAC9R,GAAD,OAAUA,EAAKoB,QAAUgG,OAAM,OAACgR,QAAD,IAACA,OAAD,EAACA,EAAUzO,UAEvB,IAAjB8Q,GACFrB,GAA6BC,GAAwBoB,OA8F9B,CAACrC,IAChCnR,qBA1FwB,YACtB,OAAIkS,SAAJ,IAAIA,QAAJ,EAAIA,GAA2B/X,QAC7BoY,GAAyB,IACzB9P,YAASyP,GAA0B/X,OAChCoM,MAAK,SAACC,GACL,IAAI9M,EAAO8M,EAAO9M,KAAKA,KAMvB,GALAA,EAAKma,SAAQ,SAAC9a,GACZA,EAAKoB,MAAQpB,EAAK+a,QAClB/a,EAAKyC,MAAQzC,EAAKqP,QAEpBqK,GAAuB/Y,GACvB,OAAI0Z,SAAJ,IAAIA,QAAJ,EAAIA,GAAY/G,KAAM,CACpB,IAAImH,EAAc9Z,EAAKmR,WACrB,SAAC9R,GAAD,OAAUA,EAAKoB,SAAL,OAAegX,QAAf,IAAeA,OAAf,EAAeA,EAAU9E,UAEhB,IAAjBmH,GAAoBjB,GAAyB7Y,EAAK8Z,QAGzD/M,OAAM,SAAClO,GACNmO,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,6BAGhDmZ,GAAyB,IACzBE,GAAuB,OAmEA,CAACP,KAC5BlS,qBAhE6B,YAC3B,OAAIsS,SAAJ,IAAIA,QAAJ,EAAIA,GAAuBnY,QACzBwY,GAA8B,IAC9BhQ,YACEuP,GAA0B/X,MAC1BmY,GAAsBnY,OAErBoM,MAAK,SAACC,GACL,IAAI9M,EAAO8M,EAAO9M,KAAKA,KAMvB,GALAA,EAAKma,SAAQ,SAAC9a,GACZA,EAAKoB,MAAQpB,EAAKgb,OAClBhb,EAAKyC,MAAQzC,EAAKqP,QAEpByK,GAA4BnZ,GAC5B,OAAI0Z,SAAJ,IAAIA,QAAJ,EAAIA,GAAYF,IAAK,CACnB,IAAIM,EAAc9Z,EAAKmR,WACrB,SAAC9R,GAAD,OAAUA,EAAKoB,SAAL,OAAegX,QAAf,IAAeA,OAAf,EAAeA,EAAU+B,SAEhB,IAAjBM,GACFb,GAA8BjZ,EAAK8Z,QAGxC/M,OAAM,SAAClO,GACNmO,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,6BAGhDuZ,GAA8B,IAC9BE,GAA4B,OAqCA,CAACP,KACjCtS,qBAlCwB,YACtB,OAAI0S,SAAJ,IAAIA,QAAJ,EAAIA,GAA4BvY,QAC9B4Y,GAAyB,IACzBlQ,YACEqP,GAA0B/X,MAC1BmY,GAAsBnY,MACtBuY,GAA2BvY,OAE1BoM,MAAK,SAACC,GACL,IAAI9M,EAAO8M,EAAO9M,KAAKA,KAMvB,GALAA,EAAKma,SAAQ,SAAC9a,GACZA,EAAKoB,MAAQpB,EAAKib,OAClBjb,EAAKyC,MAAQzC,EAAKqP,QAEpB6K,GAAuBvZ,GACvB,OAAI0Z,SAAJ,IAAIA,QAAJ,EAAIA,GAAYD,IAAK,CACnB,IAAIK,EAAc9Z,EAAKmR,WACrB,SAAC9R,GAAD,OAAUA,EAAKoB,SAAL,OAAegX,QAAf,IAAeA,OAAf,EAAeA,EAAUgC,SAEhB,IAAjBK,GAAoBT,GAAyBrZ,EAAK8Z,QAGzD/M,OAAM,SAAClO,GACNmO,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,6BAGhD2Z,GAAyB,IACzBE,GAAuB,OAOA,CAACP,KAG1B,kBAAC,IAAMzZ,SAAP,KACGX,GAAW,kBAAC,EAAD,MACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKY,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,UACb,kBAAC+a,EAAA,EAAD,CACEC,IAAI,OACJC,KACU,OAARhD,QAAQ,IAARA,OAAA,EAAAA,EAAUiD,cAAV,UACOC,cADP,4CAEMlD,QAFN,IAEMA,OAFN,EAEMA,EAAUiD,cAEZE,YAAc,oCAEpBpb,UAAWoK,EAAQuN,YAErB,yBAAK3X,UAAU,QACb,4BAAKkP,IACL,4BAAKwJ,OAIX,yBAAK1Y,UAAU,0BACb,uBACEA,UAAU,iBACVqb,KAAI,UAAKF,cAAL,8BAAqCjb,IACzCc,OAAO,WAEP,uBAAGhB,UAAU,sBALf,iBAUJ,0BAAMsb,aAAa,MAAMpb,GAAG,WAAWqb,SAxL9B,SAAChb,GAChBA,EAAEib,iBACF1D,GAAiB,GACjB,IAAI2D,EAAY,IAAIC,SAChBlb,EAAOmG,OAAOC,OAAO,GAAIqR,GAC7BzX,EAAKia,WAAa7B,GAA2B3X,MAC7CT,EAAKka,UAAY5B,GAA4B7X,MAC7CT,EAAK6S,MAA8B,KAAtB7S,EAAK6S,MAAMhE,OAAgB,KAAO7O,EAAK6S,MACpD1M,OAAOgV,KAAKnb,GAAMma,SAAQ,SAACiB,GACT,iBAAZA,GACFH,EAAUI,OAAOD,EAAS3D,EAAS2D,OAEvCzS,YAAkBjJ,GAAIub,GACnBpO,MAAK,SAACC,GACLwK,GAAiB,GACjBE,GAAeD,GACfU,GAAQR,EAAS/I,MACjByJ,GAAOV,EAASoC,OAChB7M,IAAMC,aACJvO,EAAKmB,cAAc,CAAEH,GAAI,8BACzB,cAGHqN,OAAM,SAAClO,GACNyY,GAAiB,GACjBtK,IAAMC,aAAavO,EAAKmB,cAAc,CAAEH,GAAI,6BAgKxC,yBAAKF,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACb,4CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,qBAGjB,kBAAC,IAAD,CACEE,GACE6X,GAAcF,EACV,oBACA,qBAEN5W,MAAK,OAAEgX,QAAF,IAAEA,OAAF,EAAEA,EAAUoC,MACjB7S,YACEuQ,GAAcF,EAAgB,OAAS,QAEzC7X,UAAU,eACV8E,OAAO,mBACPiD,KAAK,IACLJ,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACvH,GACd2X,EAAY,2BACPD,GADM,IAEToC,MAAO9Z,EAAEqR,mBAMnB,yBAAK5R,UAAU,wBACb,+CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,yBAGjB,2BACEG,KAAK,OACLH,UAAU,eACVI,YAAY,eACZa,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAU6D,eAAgB,GACjCzX,SAAU0T,GAAcF,EACxBvX,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAET6D,aAAcvb,EAAES,OAAOC,cAMjC,yBAAKjB,UAAU,wBACb,gDACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,wBAGjB,kBAAC,IAAD,CACEiB,MAAOsX,GACP7T,QAAS8S,EACTuE,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAEhB1b,SAAU,SAACW,GACTuX,GAA2BvX,GAC3BiX,EAAY,2BACPD,GADM,IAET3E,GAAIrS,EAAMA,cAMpB,yBAAKjB,UAAU,wBACb,8CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,wBAGjB,kBAAC,IAAD,CACEE,GACE6X,GAAcF,EACV,oBACA,qBAEN5W,MAAK,OAAEgX,QAAF,IAAEA,OAAF,EAAEA,EAAU7E,QACjB5L,YACEuQ,GAAcF,EAAgB,OAAS,QAEzC7X,UAAU,eACV8E,OAAO,uBACPiD,KAAK,IACLJ,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACvH,GACd2X,EAAY,2BACPD,GADM,IAET7E,QAAS7S,EAAEqR,mBAMrB,yBAAK5R,UAAU,wBACb,oDACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,qBAGjB,kBAAC,IAAD,CACEE,GACE6X,GAAcF,EACV,oBACA,qBAEN5W,MAAK,OAAEgX,QAAF,IAAEA,OAAF,EAAEA,EAAUgE,MACjBzU,YACEuQ,GAAcF,EAAgB,OAAS,QAEzC7X,UAAU,eACV8E,OAAO,mBACPiD,KAAK,IACLJ,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACvH,GACd2X,EAAY,2BACPD,GADM,IAETgE,MAAO1b,EAAEqR,mBAMnB,yBAAK5R,UAAU,wBACb,sDACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,oBAGjB,kBAAC,IAAD,CACEiB,MAAO2X,GACPlU,QAAS+S,EACTsE,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAChB1b,SAAU,SAACW,GACT4X,GAA8B5X,GAC9BiX,EAAY,2BACPD,GADM,IAETwC,WAAYxZ,EAAMA,cAM5B,yBAAKjB,UAAU,wBACb,4CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,uBAGjB,kBAAC,IAAD,CACEiB,MAAO6X,GACPpU,QAASgT,EACTqE,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAChB1b,SAAU,SAACW,GACT8X,GAA+B9X,GAC/BiX,EAAY,2BACPD,GADM,IAETyC,UAAWzZ,EAAMA,eAO7B,yBAAKjB,UAAU,YACb,yBAAKA,UAAU,wBACb,+CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,kBAGjB,2BACEG,KAAK,OACLH,UAAU,eACVI,YAAY,eACZiE,SAAU0T,GAAcF,EACxB5W,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAU/I,OAAQ,GACzB5O,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAET/I,KAAM3O,EAAES,OAAOC,cAMzB,yBAAKjB,UAAU,wBACb,gDACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,kBAGjB,2BACEG,KAAK,OACLH,UAAU,eACVqE,SAAU0T,GAAcF,EACxB5W,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAUiE,YAAa,GAC9B5b,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAETiE,UAAW3b,EAAES,OAAOC,cAM9B,yBAAKjB,UAAU,wBACb,yCACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,wBAGjB,kBAAC,IAAD,CACEiB,MAAOoX,EACP3T,QAAS6S,EACTwE,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAEhB1b,SAAU,SAACW,GACTqX,EAAqBrX,GACrBiX,EAAY,2BACPD,GADM,IAETsC,aAActZ,EAAMA,cAM9B,yBAAKjB,UAAU,wBACb,wCACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,gBAGjB,2BACEG,KAAK,QACLH,UAAU,eACVI,YAAY,QACZiE,SAAU0T,GAAcF,EACxB5W,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAU5E,QAAS,GAC1B/S,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAET5E,MAAO9S,EAAES,OAAOC,cAM1B,yBAAKjB,UAAU,wBACb,2CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,4BAGjB,kBAAC,IAAD,CACEiB,MAAO+X,GACPtU,QAASwU,GACT6C,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAChB1b,SAAU,SAACW,GACTgY,GAA6BhY,GAC7BoY,GAAyB,IACzBI,GAA8B,IAC9BI,GAAyB,IACzBM,GAAc,2BAAKD,IAAN,IAAkB1Q,MAAM,KACrC0O,EAAY,2BACPD,GADM,IAETzO,KAAMvI,EAAMA,MACZkS,KAAM,KACN6G,IAAK,KACLC,IAAK,aAMf,yBAAKja,UAAU,wBACb,iDACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,4BAGjB,kBAAC,IAAD,CACEiB,MAAOmY,GACP1U,QAAS4U,GACTyC,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAChB1b,SAAU,SAACW,GACToY,GAAyBpY,GACzBwY,GAA8B,IAC9BI,GAAyB,IACzBM,GAAc,2BAAKD,IAAN,IAAkB/G,MAAM,KACrC+E,EAAY,2BACPD,GADM,IAET9E,KAAMlS,EAAMA,MACZ+Y,IAAK,KACLC,IAAK,aAMf,yBAAKja,UAAU,wBACb,4CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,wBAGjB,kBAAC,IAAD,CACEiB,MAAOuY,GACP9U,QAASgV,GACTqC,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAChB1b,SAAU,SAACW,GACTwY,GAA8BxY,GAC9B4Y,GAAyB,IACzBM,GAAc,2BAAKD,IAAN,IAAkBF,KAAK,KACpC9B,EAAY,2BACPD,GADM,IAET+B,IAAK/Y,EAAMA,MACXgZ,IAAK,aAMf,yBAAKja,UAAU,wBACb,iDACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,wBAGjB,kBAAC,IAAD,CACEiB,MAAO2Y,GACPlV,QAASoV,GACTiC,WAAYhE,GAAcF,EAC1B7X,UAAU,kCACVgc,gBAAgB,eAChB1b,SAAU,SAACW,GACT4Y,GAAyB5Y,GACzBkZ,GAAc,2BAAKD,IAAN,IAAkBD,KAAK,KACpC/B,EAAY,2BACPD,GADM,IAETgC,IAAKhZ,EAAMA,cAMrB,yBAAKjB,UAAU,wBACb,yCACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,4BAGjB,8BACEsP,KAAK,IACLtP,UAAU,eACVqE,SAAU0T,GAAcF,EACxB5W,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAUkE,SAAU,GAC3B7b,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAETkE,OAAQ5b,EAAES,OAAOC,gBAQ/B,6BACA,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,YACb,8CACA,yBAAKA,UAAU,wBACb,+CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,yBAGjB,2BACEG,KAAK,OACLH,UAAU,eACVI,YAAY,eACZiE,SAAU0T,GAAcF,EACxB5W,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAUmE,UAAW,GAC5B9b,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAETmE,QAAS7b,EAAES,OAAOC,cAM5B,yBAAKjB,UAAU,wBACb,2CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,yBAGjB,2BACEG,KAAK,OACLH,UAAU,eACVI,YAAY,WACZiE,SAAU0T,GAAcF,EACxB5W,OAAe,OAARgX,QAAQ,IAARA,OAAA,EAAAA,EAAUoE,iBAAkB,GACnC/b,SAAU,SAACC,GACT2X,EAAY,2BACPD,GADM,IAEToE,eAAgB9b,EAAES,OAAOC,cAMnC,yBAAKjB,UAAU,wBACb,8CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,mBAAmBwD,MAAO,CAAEM,MAAO,KACjD,uBAAG9D,UAAU,yBAGjB,kBAAC,IAAD,CACEE,GACE6X,GAAcF,EACV,oBACA,qBAEN5W,MAAK,OAAEgX,QAAF,IAAEA,OAAF,EAAEA,EAAUqE,YACjB9U,YACEuQ,GAAcF,EAAgB,OAAS,QAEzC7X,UAAU,eACV8E,OAAO,uBACPiD,KAAK,IACLJ,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACvH,GACd2X,EAAY,2BACPD,GADM,IAETqE,YAAa/b,EAAEqR,qBAQ7B,yBAAK5R,UAAU,OACb,yBAAKA,UAAU,qBACb,4BACEG,KAAK,SACLH,UAAS,gCACN+X,GAA4B,aAAbhL,IAA2B,UAE7CxJ,QAAS,WACPyU,GAAeD,KAGjB,uBAAG/X,UAAU,gBACb,uCAEF,4BACEG,KAAK,SACLH,UAAS,+BAA0B+X,GAAc,UACjD1T,SAAUwT,GAETA,EACC,uBAAG7X,UAAU,iCAEb,uBAAGA,UAAU,gBAGd6X,EACC,kBAAC,IAAD,CAAkB3X,GAAG,kBAErB,yCAGJ,4BACEC,KAAK,SACLH,UAAS,8BAAyB+X,GAAc,UAChDxU,QAAS,WACPyU,GAAeD,GACfqC,MAEF/V,SAAUwT,GAEV,uBAAG7X,UAAU,wBACb,6CAOZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC6W,EAAD,CACEC,SAAUA,EACVC,iBAAkBoB,EAClBnB,aAAc,SAACuF,GAAD,OAAiBnE,EAAamE,MAG/B,MAAdpE,GACC,yBAAKnY,UAAU,mBACb,kBAACwc,EAAA,EAAkBvd,Y,4FCl5BlB,SAAAwd,EAAA,GAA4B,gBAAoB,OAAQ,CACrEnQ,EAAG,kHACD,UCoGJ,IAAI,EAAS,cAAiB,SAAgBrN,EAAOkL,GACnD,IAAI6Q,EAAM/b,EAAM+b,IACZ0B,EAAezd,EAAMK,SACrB8K,EAAUnL,EAAMmL,QAChBpK,EAAYf,EAAMe,UAClB2c,EAAmB1d,EAAMkC,UACzB6K,OAAiC,IAArB2Q,EAA8B,MAAQA,EAClDC,EAAW3d,EAAM2d,SACjBC,EAAQ5d,EAAM4d,MACd5B,EAAMhc,EAAMgc,IACZ6B,EAAS7d,EAAM6d,OACfnJ,EAAiB1U,EAAMyM,QACvBA,OAA6B,IAAnBiI,EAA4B,SAAWA,EACjDtJ,EAAQ,YAAyBpL,EAAO,CAAC,MAAO,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,MAAO,SAAU,YAEvIK,EAAW,KAEXyd,EA3DN,SAAmBC,GACjB,IAAI/B,EAAM+B,EAAK/B,IACX6B,EAASE,EAAKF,OAEdG,EAAkB,YAAe,GACjCF,EAASE,EAAgB,GACzBC,EAAYD,EAAgB,GAiChC,OA/BA,aAAgB,WACd,GAAKhC,GAAQ6B,EAAb,CAIAI,GAAU,GACV,IAAIzX,GAAS,EACT0X,EAAQ,IAAIC,MAoBhB,OAnBAD,EAAMlC,IAAMA,EACZkC,EAAML,OAASA,EAEfK,EAAME,OAAS,WACR5X,GAILyX,EAAU,WAGZC,EAAMG,QAAU,WACT7X,GAILyX,EAAU,UAGL,WACLzX,GAAS,MAEV,CAACwV,EAAK6B,IACFC,EAoBMQ,CAAU,CACrBtC,IAAKA,EACL6B,OAAQA,IAENU,EAASvC,GAAO6B,EAChBW,EAAmBD,GAAqB,UAAXT,EAoBjC,OAjBEzd,EADEme,EACsB,gBAAoB,MAAO,YAAS,CAC1DzC,IAAKA,EACLC,IAAKA,EACL6B,OAAQA,EACRD,MAAOA,EACP7c,UAAWoK,EAAQsT,KAClBd,IACsB,MAAhBF,EACEA,EACFc,GAAUxC,EACRA,EAAI,GAES,gBAAoB2C,EAAQ,CAClD3d,UAAWoK,EAAQwT,WAIH,gBAAoB5R,EAAW,YAAS,CAC1DhM,UAAW,YAAKoK,EAAQG,KAAMH,EAAQyT,OAAQzT,EAAQsB,GAAU1L,GAAYyd,GAAoBrT,EAAQ0T,cACxG3T,IAAKA,GACJE,GAAQ/K,MA2DE,WAAAqC,EAAA,IA7MK,SAAgBC,GAClC,MAAO,CAEL2I,KAAM,CACJwC,SAAU,WACVjC,QAAS,OACTN,WAAY,SACZuT,eAAgB,SAChBlT,WAAY,EACZ/G,MAAO,GACP0R,OAAQ,GACRwI,WAAYpc,EAAMwM,WAAW4P,WAC7Bhc,SAAUJ,EAAMwM,WAAWC,QAAQ,IACnC4P,WAAY,EACZC,aAAc,MACd3I,SAAU,SACV4I,WAAY,QAIdL,aAAc,CACZ1W,MAAOxF,EAAM+I,QAAQyT,WAAWC,QAChCxM,gBAAwC,UAAvBjQ,EAAM+I,QAAQxK,KAAmByB,EAAM+I,QAAQ2T,KAAK,KAAO1c,EAAM+I,QAAQ2T,KAAK,MAIjGC,OAAQ,GAGRC,QAAS,CACPN,aAActc,EAAM6c,MAAMP,cAI5BQ,OAAQ,CACNR,aAAc,GAIhBR,IAAK,CACH5Z,MAAO,OACP0R,OAAQ,OACRmJ,UAAW,SAEXC,UAAW,QAEXxX,MAAO,cAEPyX,WAAY,KAIdjB,SAAU,CACR9Z,MAAO,MACP0R,OAAQ,UAuJoB,CAChC5U,KAAM,aADO,CAEZ,I,kCCtNH,mFAmDe7B,sBAAWC,YAAQ,KAAM,KAAdA,EA3C1B,SAA6BC,GAC3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU6f,OAAK,EAACC,KAAK,kBAAkB9a,GAAG,sBAC1C,kBAAC,IAAD,CACE6H,KAAK,4CACL3K,UAAW,SAAClC,GAAD,OAAW,kBAAC,IAAwBA,IAC/C6f,OAAK,IAEP,kBAAC,IAAD,CACEhT,KAAK,2BACL3K,UAAW,SAAClC,GAAD,OAAW,kBAAC,IAAgBA,IACvC6f,OAAK,IAEP,kBAAC,IAAD,CACEhT,KAAK,uBACL3K,UAAW,SAAClC,GAAD,OAAW,kBAAC,IAAoBA,IAC3C6f,OAAK","file":"static/js/12.27c3bdf1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className={`bg-primary text-uppercase ${\r\n                        item?.td ? item?.td : \"\"\r\n                      }`}\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  heading_new: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"96.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n    display: \"block\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n}));\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n  const [specialCase, setSpecialCase] = useState({});\r\n  const classes = useStyles();\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setSpecialCase(result.data.data.transaksi);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              {dataScreening.map((item, index) => (\r\n                <ListItem\r\n                  key={index.toString()}\r\n                  index={index.toString()}\r\n                  item={item}\r\n                  classes={classes}\r\n                />\r\n              ))}\r\n              {/* <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div> */}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>\r\n                      <span\r\n                        style={{ verticalAlign: \"middle\" }}\r\n                        // onClick={() => {\r\n                        //   var item = cloneDeep(specialCase);\r\n                        //   item.special = specialCase.special === 0 ? 1 : 0;\r\n                        //   setSpecialCase(item);\r\n                        // }}\r\n                      >\r\n                        {specialCase?.special !== 0 ? (\r\n                          <i className=\"fas fa-toggle-on text-primary font-size-h1 px-1 cursor-pointer\"></i>\r\n                        ) : (\r\n                          <i className=\"fas fa-toggle-off text-danger font-size-h1 px-1 cursor-pointer\"></i>\r\n                        )}\r\n                      </span>\r\n                      Spesial Kasus\r\n                    </th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        id=\"NumberFormat-text\"\r\n                        value={specialCase.payamt}\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {specialCase.special === 0\r\n                        ? rupiah(data.fee + countSubTotal(dataMedicine))\r\n                        : rupiah(specialCase.payamt)}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Bayar</th>\r\n                    <th colSpan=\"2\">\r\n                      <NumberFormat\r\n                        value={specialCase.pay_amt}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={false}\r\n                        allowNegative={false}\r\n                        thousandSeparator={true}\r\n                        prefix={\"Rp \"}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Kembalian</th>\r\n                    <th colSpan=\"2\">\r\n                      {specialCase?.special === 0\r\n                        ? rupiah(\r\n                            specialCase.pay_amt -\r\n                              (data.fee + countSubTotal(dataMedicine))\r\n                          )\r\n                        : rupiah(specialCase - specialCase?.payamt)}\r\n                    </th>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Lab\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction ListItem({ item, classes, index }) {\r\n  let children = null;\r\n  children = (\r\n    <div className=\"w-100\">\r\n      <div className=\"row\">\r\n        {item.subtitle &&\r\n          item.subtitle.map((i, idx) => (\r\n            <div className=\"col-12\" key={idx.toString()}>\r\n              <ListItem\r\n                item={i}\r\n                index={\r\n                  index && typeof index === \"string\"\r\n                    ? index + \",\" + idx.toString()\r\n                    : null\r\n                }\r\n                classes={classes}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n        {item.input &&\r\n          item.input.map((a, adx) => (\r\n            <div className=\"col-12\" key={adx.toString()}>\r\n              <div className=\"form-group\">\r\n                <label>{a.medkind?.nama}</label>\r\n                <div className=\"input-group mb-3\">\r\n                  {a.medkind.datatype === 1 ||\r\n                  a.medkind.datatype === 2 ||\r\n                  a.medkind.datatype === 3 ||\r\n                  a.medkind.datatype === 4 ? (\r\n                    <input\r\n                      id={`input-${item.id}-${a.id}`}\r\n                      type={\r\n                        a.medkind.datatype === 1\r\n                          ? \"text\"\r\n                          : a.medkind.datatype === 2 || a.medkind.datatype === 3\r\n                          ? \"number\"\r\n                          : \"date\"\r\n                      }\r\n                      className={`form-control ${\r\n                        a.val_desc && a.val_desc.trim().length !== 0\r\n                          ? \"border-valid-input\"\r\n                          : \"\"\r\n                      }`}\r\n                      value={a.val_desc || \"\"}\r\n                      onChange={(e) => {}}\r\n                      disabled\r\n                    />\r\n                  ) : (\r\n                    <textarea\r\n                      rows=\"3\"\r\n                      id={`input-${item.id}-${a.id}`}\r\n                      className={`form-control ${\r\n                        a.val_desc && a.val_desc.trim().length !== 0\r\n                          ? \"border-valid-input\"\r\n                          : \"\"\r\n                      }`}\r\n                      value={a.val_desc || \"\"}\r\n                      onChange={(e) => {}}\r\n                      disabled\r\n                    ></textarea>\r\n                  )}\r\n                  <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text\">{a.medkind?.unit}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ExpansionPanel defaultExpanded={false} className=\"my-5 rounded-top w-100\">\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span className={classes.heading_new} id={index}>\r\n          {item.title}\r\n        </span>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className={classes.details}>\r\n        {children}\r\n      </ExpansionPanelDetails>\r\n      <Divider />\r\n    </ExpansionPanel>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"phone\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"email\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_TYPE\",\r\n    name: \"user_id\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"status\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={15}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>{item?.user_id ? \"Online\" : \"Offine\"}</TableCell>\r\n                  <TableCell>\r\n                    <span\r\n                      className={\r\n                        item.active_user === 1 ? \"text-primary\" : \"text-danger\"\r\n                      }\r\n                    >\r\n                      {item.active_user === 1 ? \"Active\" : \"Non Active\"}\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatientByDoctor(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/doctor/patient\" to=\"/doctor/dashboard\" />\r\n      <Route\r\n        path=\"/doctor/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/doctor/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatientByDoctor));\r\n"],"sourceRoot":""}