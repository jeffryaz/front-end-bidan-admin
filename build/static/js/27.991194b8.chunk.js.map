{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/modules/Administrator/Staff/ListStaffPage.js","app/modules/Administrator/Staff/RootAdministratorStaff.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","rupiah","number","countryCode","currency","options","style","currencyDisplay","Intl","NumberFormat","format","injectIntl","connect","props","intl","dataHeader","handleParams","loading","children","countData","hecto","React","useState","numberColum","page","count","rowsPerPage","paginations","setPaginations","name","filter","order","status","active","length","replace","type","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","anchorEl","setAnchorEl","requestFilterSort","useCallback","updateFilterTable","updateSortTable","data","pagination","cloneDeep","filterSorts","ret","p","generateFilterUrl","Object","assign","params","useEffect","handleClose","Fragment","id","className","map","item","index","toString","onClick","title","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","keepMounted","open","onClose","PaperProps","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","e","mask","min","defaultValue","placeholder","formatMessage","width","property","filterTables","updateValueFilter","resetValueFilter","reset","component","Paper","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","activePoli","put","inactivePoli","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","editMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","createTakaran","editTakaran","deleteTakaran","getTakaran","getFormformat","createFolder","deleteFolders","createInput","deleteInput","headerTable","initialValues","optionParameter","label","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","useHistory","dialog","setDialog","paramTable","setParamTable","statusDialog","setStatusDialog","selectedParameter","setSelectedParameter","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","nama","required","email","role","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","result","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","minHeight","isDisabled","classNamePrefix","onChange","setFieldValue","onBlur","setFieldTouched","errors","disabled","getFieldProps","DialogActions","isValid","TableRow","TableCell","role_id","stop_mk","exact","from","to","path"],"mappings":"mIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,0OC8BaC,G,QAAS,SAACC,GAAD,OAVP,SAACC,EAAaC,EAAUF,GACrC,IAAMG,EAAU,CACdD,WACAE,MAAO,WACPC,gBAAiB,UAGnB,OAAO,IAAIC,KAAKC,aAAaN,EAAaE,GAASK,OAAOR,GAG1BQ,CAAO,QAAS,MAAOR,KA4b1CS,gBAAWC,YAAQ,KAAM,KAAdA,EA1bX,SAACC,GACd,IACEC,EAQED,EARFC,KADF,EASID,EAPFE,kBAFF,MAEe,GAFf,EAGEC,EAMEH,EANFG,aAHF,EASIH,EALFI,eAJF,WASIJ,EAJFd,WALF,SAMEmB,EAGEL,EAHFK,SANF,EASIL,EAFFM,iBAPF,MAOc,EAPd,IASIN,EADFO,aARF,MAQU,EARV,EAUA,EAAsCC,IAAMC,SAAS,CACnDC,YAAa,EACbC,KAAM,EACNC,MAAON,EACPO,YAAa,KAJf,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,EAAgCP,IAAMC,SAAS,CAC7CO,KACEd,EAAWe,QACT,SAAC3C,GAAD,OAAkC,IAAvBA,EAAM4C,MAAMC,SAA0C,IAAvB7C,EAAM4C,MAAME,UACtDC,OAAS,EACPnB,EACGe,QACC,SAAC3C,GAAD,OACyB,IAAvBA,EAAM4C,MAAMC,SAA0C,IAAvB7C,EAAM4C,MAAME,UAC7C,GACDJ,KAAKM,QAAQ,MAAO,IACvB,GACNJ,QACEhB,EAAWe,QACT,SAAC3C,GAAD,OAAkC,IAAvBA,EAAM4C,MAAMC,SAA0C,IAAvB7C,EAAM4C,MAAME,UACtDC,OAAS,IACPnB,EAAWe,QACT,SAAC3C,GAAD,OACyB,IAAvBA,EAAM4C,MAAMC,SAA0C,IAAvB7C,EAAM4C,MAAME,UAC7C,GAAGF,MAAMC,OAEjBI,KACErB,EAAWe,QACT,SAAC3C,GAAD,OACyB,IAAvBA,EAAM4C,MAAMC,SACW,IAAvB7C,EAAM4C,MAAME,QACS,OAArB9C,EAAM4C,MAAMK,QACdF,OAAS,EACPnB,EAAWe,QACT,SAAC3C,GAAD,OACyB,IAAvBA,EAAM4C,MAAMC,SACW,IAAvB7C,EAAM4C,MAAME,QACS,OAArB9C,EAAM4C,MAAMK,QACd,GAAGL,MAAMK,KACX,OAlCR,mBAAOC,EAAP,KAAiBC,EAAjB,KAoCA,EAAsCjB,IAAMC,SAAS,IAArD,mBAAOiB,EAAP,KAAoBC,EAApB,KACA,EAAoCnB,IAAMC,SAAS,CAAEQ,OAAQ,GAAIW,KAAM,KAAvE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCtB,IAAMC,SAAS,MAA/C,mBAAOsB,EAAP,KAAiBC,EAAjB,KAqBMC,EAAoBzB,IAAM0B,aAC9B,SAACC,EAAmBC,GAClB,IAdqBC,EAcjBC,EAAaC,oBAAUzB,GACvB0B,EAAcX,EAClBW,EAAYvB,OAvBU,SAACoB,GACzB,IAAII,EAAM,GACV,IAAK,IAAIC,KAAKL,EACRA,EAAKK,KAAID,GAAO,UAAYC,EAAI,KAAOL,EAAKK,GAAK,KAEvD,OAAOD,EAkBgBE,CACnBR,GAAwCT,GAE1Cc,EAAYZ,KAlBP,WADgBS,EAoBnBD,GAAoCZ,GAnBtBR,KAAX,YACS,OAAdqB,EAAKd,KACDc,EAAKd,KACH,MACA,OACFc,EAAKnB,MACL,MACA,QAcJoB,EAAW3B,KAAO2B,EAAW3B,KAAO,EACpC6B,EAAcI,OAAOC,OAAO,GAAIL,EAAaF,GAC7CR,EAAc,eAAKU,IACnB,IAAIM,EACFN,EAAYvB,OACZ,QACAuB,EAAY7B,KACZ,gBACA6B,EAAY3B,YACZ,SACA2B,EAAYZ,KACc,oBAAjBzB,GAA6BA,EAAa2C,KAEvD,CAACpB,EAAaF,EAAUK,EAAY5B,EAAMa,IA2E5CN,IAAMuC,UAAUd,EAAmB,IACnCzB,IAAMuC,WAAU,WACdhC,EAAe,2BAAKD,GAAN,IAAmBF,MAAON,GAAa,OACpD,CAACA,IAEJ,IAIM0C,EAAc,WAClBhB,EAAY,OAGd,OACE,kBAAC,IAAMiB,SAAP,KACE,6BACE,0BAAMC,GAAG,kBAAkBC,UAAU,2BACnC,0BAAMA,UAAU,wBACd,kBAAC,IAAD,CAAkBD,GAAG,wBAEvB,yBAAKC,UAAU,WACb,yBAAKA,UAAU,IACZjD,EACEe,QAAO,SAAC3C,GAAD,OAAmC,IAAxBA,EAAM2C,OAAOG,UAC/BgC,KAAI,SAACC,EAAMC,GACV,OACE,yBACEnF,IAAKmF,EAAMC,WACXJ,UAAU,+BACVhC,OAAO,SACP+B,GAAII,GAEJ,yBACEH,UAAU,aACVD,GAAI,cAAgBI,EACpBE,QAAS,WA7B7BxB,EA8BkCsB,KAGd,8BACE,kBAAC,IAAD,CAAkBJ,GAAIG,EAAKI,QAD7B,KAGA,4BAAQhE,MAAO,CAAEiE,aAAc,EAAGC,YAAa,IAC7C,0BACER,UAAU,eACVD,GAAI,eAAiBI,GAEC,aAArBD,EAAKpC,OAAOM,MACbG,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,KACjClC,EACEwE,OACElC,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,OAGpB,UAArB+B,EAAKpC,OAAOM,MACZG,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,KADrC,cAGEI,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,MAElB,SAArB+B,EAAKpC,OAAOM,MACZG,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,KADrC,UAEGuC,IACD,IAAIC,KACFpC,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,OAEvCzB,OAAO,gBACT6B,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,OAG5CI,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,KAAO,KAC3C,0BAAM7B,MAAO,CAAEsE,MAAO,YACpB,kBAAC,IAAD,CAAkBb,GAAG,gBAI3B,kBAAC,IAAD,CACEnB,SAAUiC,SAASC,eAAT,qBACMlC,GAAsB,IAEtCmC,aAAa,EACbC,KAAMb,IAAUvB,EAChBqC,QAASpB,EACTqB,WAAY,CACV5E,MAAO,CACL6E,UAAW,sCAIf,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,cACS,aAArBE,EAAKpC,OAAOM,KACX,kBAAC,IAAD,CACEjD,MACEoD,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,MACrC,GAEFiD,YAAY,QACZpB,UAAU,eACVnC,KAAMqC,EAAKrC,KAAKM,QAAQ,MAAO,IAC/B4B,GAAIG,EAAKrC,KAAKM,QAAQ,MAAO,IAC7BkD,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAsB,EACtBC,mBAAmB,EACnBC,OAAQ,MACRC,cAAe,SAACC,OAEK,UAArBzB,EAAKpC,OAAOM,KACd,kBAAC,IAAD,CACEjD,MACEoD,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,MACrC,GAEFiD,YAAY,QACZpB,UAAU,eACVnC,KAAMqC,EAAKrC,KAAKM,QAAQ,MAAO,IAC/B4B,GAAIG,EAAKrC,KAAKM,QAAQ,MAAO,IAC7BzB,OAAO,oBACPkF,KAAK,IACLL,sBAAsB,EACtBC,mBAAmB,EACnBE,cAAe,SAACC,OAGlB,2BACEvD,KAAM8B,EAAKpC,OAAOM,KAClB4B,UAAU,eACV6B,IAAI,IACJhE,KAAMqC,EAAKrC,KAAKM,QAAQ,MAAO,IAC/B4B,GAAIG,EAAKrC,KAAKM,QAAQ,MAAO,IAC7B2D,aACEvD,EAAY2B,EAAKrC,KAAKM,QAAQ,MAAO,MACrC,GAEF4D,YAAajF,EAAKkF,cAAc,CAC9BjC,GAAI,cAENzD,MAAO,CAAE2F,MAAO,QAItB,yBAAKjC,UAAU,UACb,4BACE5B,KAAK,SACL4B,UAAU,yCACVK,QAAS,YAhLX,SAAC6B,EAAU9D,GACnC,IAAI+D,EAAe5D,EACnB4D,EAAaD,GAAYrB,SAASC,eAAeoB,GAAU/G,MAC9C,aAATiD,EACF+D,EAAaD,GAAYC,EAAaD,GACnC/D,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,KACD,UAATC,IACT+D,EAAaD,GAAYC,EAAaD,GAAU/D,QAAQ,YAAa,KAEvE,IAAIgB,EAAaxB,EACjBwB,EAAW3B,KAAO,EAClBI,EAAeuB,GACfX,EAAe,eAAK2D,IACpBrD,IAmK4BsD,CACElC,EAAKrC,KAAKM,QAAQ,MAAO,IACzB+B,EAAKpC,OAAOM,MAEdyB,MAGF,kBAAC,IAAD,CAAkBE,GAAG,kBAEvB,4BACE3B,KAAK,SACL4B,UAAU,+CACVK,QAAS,YA5KZ,SAAC6B,GACxB,IAAIC,EAAe5D,EACnB4D,EAAaD,GAAY,GACzBrB,SAASC,eAAeoB,GAAU/G,MAAQ,GAC1CqD,EAAe,eAAK2D,IACpBrD,IAwK4BuD,CAAiBnC,EAAKrC,KAAKM,QAAQ,MAAO,KAC1C0B,MAGF,uBAAGG,UAAU,mCACb,0BAAMA,UAAU,QACd,kBAAC,IAAD,CAAkBD,GAAG,sCASvC,4BACE3B,KAAK,SACL4B,UAAU,uDACVK,QAAS,WAtLrB7B,EAAe,IACfqC,SAASC,eAAe,mBAAmBwB,QAC3CxD,EAAkB,MAwLN,kBAAC,IAAD,CAAkBiB,GAAG,iCAK7B,6BACE,kBAAC,IAAD,CAAgBwC,UAAWC,KACzB,kBAAC,IAAD,CAAOxC,UAAW,SAAW5C,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGL,EAAWkD,KAAI,SAACC,EAAMC,GACrB,OACE,kBAAC,IAAD,CACEH,UAAS,qCACH,OAAJE,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,IAAN,OAAWvC,QAAX,IAAWA,OAAX,EAAWA,EAAMuC,GAAK,IAExBzH,IAAKmF,EAAMC,YAEVF,EAAKnC,MAAME,OACV,kBAAC,IAAD,CACEA,OACEI,EAASR,OAASqC,EAAKrC,KAAKM,QAAQ,MAAO,IAE7CuE,UACoB,OAAlBrE,EAASD,KACLC,EAASD,KACP,MACA,OACFC,EAASN,MACT,MACA,OAENsC,QAAS,YArQT,SAACH,GACzB,IAAIyC,EAAYtE,EACZ6B,EAAKrC,KAAKM,QAAQ,MAAO,MAAQwE,EAAU9E,KAC1B,OAAnB8E,EAAUvE,KACLuE,EAAUvE,MAAQuE,EAAUvE,KAC5BuE,EAAU5E,OAAS4E,EAAU5E,OAElC4E,EAAU9E,KAAOqC,EAAKrC,KAAKM,QAAQ,MAAO,IAC1CwE,EAAU5E,OAAQ,EAClB4E,EAAUvE,KAAO,MAEnBE,EAAY,eACPqE,IAEL7D,IAwP0B8D,CAAkB1C,KAGpB,8BACE,kBAAC,IAAD,CAAkBH,GAAIG,EAAKI,UAI/B,8BACE,kBAAC,IAAD,CAAkBP,GAAIG,EAAKI,eAQzC,kBAAC,IAAD,KAAYpD,IAGd,yBAAK8C,UAAU,sBACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,+BACZ/C,GACC,8BACE,uBAAG+C,UAAU,2CACb,kBAAC,IAAD,CAAkBD,GAAG,8BAGxBhE,GACC,0BAAMiE,UAAU,eACd,uBAAGA,UAAU,kCACb,kBAAC,IAAD,CAAkBD,GAAG,6BAOjC,kBAAC,IAAD,CACE8C,mBAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KACpDN,UAAU,MACV9E,MAAOE,EAAYF,MACnBC,YAAaC,EAAYD,YACzBF,KAAMG,EAAYH,KAClBsF,aA3Ue,SAACC,EAAOC,GAC/B,IAAI7D,EAAaxB,EACjBwB,EAAW5B,YACTyF,EAAU7D,EAAW3B,KACjB2B,EAAW5B,YAAc4B,EAAWzB,YACpCyB,EAAW5B,YAAc4B,EAAWzB,YAC1CyB,EAAW3B,KAAOwF,EAClBpF,EAAe,eACVuB,IAELL,KAkUQmE,oBA/TsB,SAACF,GAC/B,IAAI5D,EAAaxB,EACjBwB,EAAW3B,KAAO,EAClB2B,EAAWzB,YAAcwF,SAASH,EAAMI,OAAOhI,MAAO,IACtDgE,EAAW5B,YAAc,EACzBK,EAAe,eACVuB,IAELL,e,kCC3JJ,upDAEO,SAASsE,EAAqBzD,GACnC,OAAO0D,IAAMC,IAAN,wBAA2B3D,EAAS,IAAMA,EAAS,KAErD,SAAS4D,EAAaxD,GAC3B,OAAOsD,IAAMG,OAAN,yBAA+BzD,IAEjC,SAAS0D,EAAmB9D,GACjC,OAAO0D,IAAMC,IAAN,yBAA4B3D,EAAS,IAAMA,EAAS,KAEtD,SAAS+D,EAAW3D,GACzB,OAAOsD,IAAMM,IAAN,8BAAiC5D,IAEnC,SAAS6D,EAAa7D,GAC3B,OAAOsD,IAAMM,IAAN,+BAAkC5D,IAEpC,SAAS8D,IACd,OAAOR,IAAMC,IAAN,gBAEF,SAASQ,EAAa5E,GAC3B,OAAOmE,IAAMU,KAAN,iBAA6B7E,GAE/B,SAAS8E,EAAW9E,GACzB,OAAOmE,IAAMU,KAAN,eAA2B7E,GAE7B,SAAS+E,EAAclE,GAC5B,OAAOsD,IAAMC,IAAN,yBAA4BvD,IAE9B,SAASmE,EAAYnE,GAC1B,OAAOsD,IAAMC,IAAN,uBAA0BvD,IAE5B,SAASoE,EAAepE,EAAIb,GACjC,OAAOmE,IAAMU,KAAN,yBAA6BhE,GAAMb,GAErC,SAASkF,EAAarE,EAAIb,GAC/B,OAAOmE,IAAMM,IAAN,uBAA0B5D,GAAMb,GAElC,SAASmF,EAAsB1E,GACpC,OAAO0D,IAAMC,IAAN,yBAA4B3D,EAAS,IAAMA,EAAS,KAEtD,SAAS2E,EAAcpF,GAC5B,OAAOmE,IAAMU,KAAN,kBAA8B7E,GAEhC,SAASqF,EAAYxE,EAAIb,GAC9B,OAAOmE,IAAMU,KAAN,0BAA8BhE,GAAMb,GAEtC,SAASsF,EAAezE,GAC7B,OAAOsD,IAAMC,IAAN,0BAA6BvD,IAE/B,SAAS0E,EAAkB1E,GAChC,OAAOsD,IAAMG,OAAN,0BAAgCzD,IAElC,SAAS2E,EAAY/E,GAC1B,OAAO0D,IAAMC,IAAN,yBAA4B3D,EAAS,IAAMA,EAAS,KAEtD,SAASgF,EAAe5E,GAC7B,OAAOsD,IAAMC,IAAN,0BAA6BvD,IAE/B,SAAS6E,EAAc1F,GAC5B,OAAOmE,IAAMU,KAAN,kBAA8B7E,GAEhC,SAAS2F,EAAY9E,EAAIb,GAC9B,OAAOmE,IAAMM,IAAN,0BAA6B5D,GAAMb,GAErC,SAAS4F,EAAgBnF,GAC9B,OAAO0D,IAAMC,IAAN,oCAAuC3D,EAAS,IAAMA,EAAS,KAEjE,SAASoF,IACd,OAAO1B,IAAMC,IAAN,oBAEF,SAAS0B,EAAgBjF,GAC9B,OAAOsD,IAAMM,IAAN,2BAA8B5D,IAEhC,SAASkF,EAAelF,GAC7B,OAAOsD,IAAMC,IAAN,2BAA8BvD,IAEhC,SAASmF,IACd,OAAO7B,IAAMC,IAAN,uBAEF,SAAS6B,EAAkBpF,GAChC,OAAOsD,IAAMG,OAAN,8BAAoCzD,IAEtC,SAASqF,EAAkBlG,GAChC,OAAOmE,IAAMU,KAAN,sBAAkC7E,GAEpC,SAASmG,EAAgBtF,EAAIb,GAClC,OAAOmE,IAAMM,IAAN,8BAAiC5D,GAAMb,GAEzC,SAASoG,EAA+B3F,GAC7C,OAAO0D,IAAMC,IAAN,0BAA6B3D,EAAS,IAAMA,EAAS,KAEvD,SAAS4F,EAAuBrG,GACrC,OAAOmE,IAAMU,KAAN,mBAA+B7E,GAEjC,SAASsG,EAAqBzF,EAAIb,GACvC,OAAOmE,IAAMM,IAAN,2BAA8B5D,GAAMb,GAEtC,SAASuG,EAAwB1F,GACtC,OAAOsD,IAAMC,IAAN,6BAAgCvD,IAElC,SAAS2F,EAAkBxG,GAChC,OAAOmE,IAAMU,KAAN,sBAAkC7E,GAEpC,SAASyG,EAAmB5F,GACjC,OAAOsD,IAAMC,IAAN,8BAAiCvD,IAEnC,SAAS6F,EAAsB7F,GACpC,OAAOsD,IAAMG,OAAN,8BAAoCzD,IAKtC,SAAS8F,EAAoBlG,GAClC,OAAO0D,IAAMC,IAAN,uBAA0B3D,EAAS,IAAMA,EAAS,KAEpD,SAASmG,EAAY/F,EAAIb,GAC9B,OAAOmE,IAAMU,KAAN,wBAA4BhE,GAAMb,GAEpC,SAAS6G,EAAYhG,GAC1B,OAAOsD,IAAMM,IAAN,4BAA+B5D,IAEjC,SAASiG,EAAcjG,GAC5B,OAAOsD,IAAMM,IAAN,4BAA+B5D,IAEjC,SAASkG,EAAc/G,GAC5B,OAAOmE,IAAMU,KAAN,kBAA8B7E,GAEhC,SAASgH,EAAYnG,EAAIb,GAC9B,OAAOmE,IAAMM,IAAN,0BAA6B5D,GAAMb,GAErC,SAASiH,EAAcpG,GAC5B,OAAOsD,IAAMG,OAAN,0BAAgCzD,IAElC,SAASqG,IACd,OAAO/C,IAAMC,IAAN,mBAEF,SAAS+C,EAActG,GAC5B,OAAOsD,IAAMC,IAAN,iCAAoCvD,IAEtC,SAASuG,EAAapH,GAC3B,OAAOmE,IAAMU,KAAN,4BAAwC7E,GAE1C,SAASqH,EAAcxG,GAC5B,OAAOsD,IAAMG,OAAN,oCAA0CzD,IAE5C,SAASyG,EAAYtH,GAC1B,OAAOmE,IAAMU,KAAN,2BAAuC7E,GAEzC,SAASuH,EAAY1G,GAC1B,OAAOsD,IAAMG,OAAN,mCAAyCzD,M,uRCtH5C2G,EAAc,CAClB,CACEpG,MAAO,aACPzC,KAAM,OACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,EACRI,MAAM,GAERN,OAAQ,CACNG,QAAQ,EACRG,KAAM,SAGV,CACEkC,MAAO,cACPzC,KAAM,QACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEVF,OAAQ,CACNG,QAAQ,EACRG,KAAM,SAGV,CACEkC,MAAO,iBACPzC,KAAM,UACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEVF,OAAQ,CACNG,QAAQ,EACRG,KAAM,SAGV,CACEkC,MAAO,eACPzC,KAAM,SACNE,MAAO,CACLE,QAAQ,EACRD,QAAQ,GAEVF,OAAQ,CACNG,QAAQ,EACRG,KAAM,UAaNuI,EAAgB,GAEhBC,EAAkB,CACtB,CAAEzL,MAAO,EAAG0L,MAAO,eACnB,CAAE1L,MAAO,EAAG0L,MAAO,SACnB,CAAE1L,MAAO,EAAG0L,MAAO,YACnB,CAAE1L,MAAO,EAAG0L,MAAO,kBA+UNlK,kBAAWC,YAAQ,KAAMkK,IAAdlK,EA5U1B,SAAuBC,GACrB,IAAQC,EAASD,EAATC,KACFiK,EAAYC,cAClB,EAA8B1J,oBAAS,GAAvC,mBAAOL,EAAP,KAAgBgK,EAAhB,KACA,EAAwB3J,mBAAS,CAC/B4B,KAAM,GACNzB,MAAO,IAFT,mBAAOyB,EAAP,KAAagI,EAAb,KAIA,EAAsB5J,oBAAS,GAA/B,mBAAOvB,EAAP,KAAYoL,EAAZ,KACA,EAAsC7J,oBAAS,GAA/C,mBAAO8J,EAAP,KAAoBC,EAApB,KAEA,GADgBC,cACYhK,oBAAS,IAArC,mBAAOiK,EAAP,KAAeC,EAAf,KACA,EAAoClK,mBAAS,IAA7C,mBAAOmK,EAAP,KAAmBC,EAAnB,KACA,EAAwCpK,mBAAS,MAAjD,mBAAOqK,GAAP,KAAqBC,GAArB,KACA,GAAkDtK,mBAAS,IAA3D,qBAAOuK,GAAP,MAA0BC,GAA1B,MAEAC,2BAAgB,WACdhB,EAAUiB,eAAe,CACvB,CACEC,SAAS,2BACT3H,MAAOxD,EAAKkF,cAAc,CAAEjC,GAAI,oBAElC,CACEkI,SAAS,iCACT3H,MAAOxD,EAAKkF,cAAc,CAAEjC,GAAI,wBAGpCgH,EAAUmB,SAASpL,EAAKkF,cAAc,CAAEjC,GAAI,wBAC3C,IAEH,IAAMoI,GAASC,MAAaC,MAAM,CAChCC,KAAMF,MAAaG,SACjBzL,EAAKkF,cAAc,CACjBjC,GAAI,qCAGRyI,MAAOJ,MAAaG,SAClBzL,EAAKkF,cAAc,CACjBjC,GAAI,qCAGR0I,KAAML,MAAaG,SACjBzL,EAAKkF,cAAc,CACjBjC,GAAI,uCAKJ2I,GAASC,YAAU,CACvBhC,gBACAiC,iBAAkBT,GAClBU,SAAS,WAAD,4BAAE,WAAOC,EAAP,YAAAC,EAAA,wDAAiBC,UAAjB,EAA4BC,cACpC5B,GAAe,GACVM,GAmBHxD,YAAewD,GAAcmB,GAC1BvN,MAAK,SAAC2N,GACLC,GAAW1B,GACXiB,GAAOU,YACPC,IAAMC,aACJxM,EAAKkF,cAAc,CAAEjC,GAAI,8BACzB,UACA,KAEFyH,GAAU,GACVH,GAAe,MAEhBkC,OAAM,SAACxN,GAAS,IAAD,EACdyN,QAAQC,IAAI1N,GACZsL,GAAe,GACfgC,IAAMC,aAAN,UAAmBvN,EAAI2N,gBAAvB,aAAmB,EAAcxK,KAAKyK,aAjC1C7D,YAAY+B,GAAkB1M,MAAO2N,GAClCvN,MAAK,SAAC2N,GACLC,GAAW1B,GACXiB,GAAOU,YACPC,IAAMC,aACJxM,EAAKkF,cAAc,CAAEjC,GAAI,8BACzB,UACA,KAEFyH,GAAU,GACVH,GAAe,GACfS,GAAqB,OAEtByB,OAAM,SAACxN,GAAS,IAAD,EACdsL,GAAe,GACfgC,IAAMC,aAAN,UAAmBvN,EAAI2N,gBAAvB,aAAmB,EAAcxK,KAAKyK,aAlBpC,2CAAF,qDAAC,KA0CLR,GAAa,SAACxJ,GAClBsH,GAAW,GACXC,EAAQ,2BACHhI,GADE,IAELzB,MAAO,EACPyB,KAAM,MAERiI,GAAO,GACPO,EAAc/H,GACdkG,YAAoBlG,GACjBpE,MAAK,SAAC2N,GACLjC,GAAW,GACXC,EAAQ,2BACHhI,GADE,IAELzB,MAAO,EACPyB,KAAMgK,EAAOhK,KAAKA,WAGrBqK,OAAM,SAACxN,GACNoL,GAAO,GACPF,GAAW,GACXoC,IAAMC,aAAaxM,EAAKkF,cAAc,CAAEjC,GAAI,4BAwBlD,OACE,kBAAC,IAAMD,SAAP,KACE,kBAAC8J,EAAA,EAAD,CACE5I,KAAMuG,EACNsC,SAAS,KACTC,WAAW,EACXC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,KACGtC,GACC,kBAAC,IAAD,CAAkB5H,GAAG,eAErB,kBAAC,IAAD,CAAkBA,GAAG,eAGzB,0BACEC,UAAU,OACVkK,aAAa,MACbrB,SAAUH,GAAOyB,cAEjB,kBAACC,EAAA,EAAD,KACE,yBAAK9N,MAAO,CAAE+N,UAAW,UACvB,yBAAKrK,UAAU,kBACb,2BAAOA,UAAU,2BACf,kBAAC,IAAD,CAAkBD,GAAG,mBACrB,0BAAMC,UAAU,eAAhB,MAEF,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACE7E,MAAO0M,GACPxL,QAASuK,EACT0D,WAAYlD,EACZpH,UAAU,4CACVuK,gBAAgB,eAEhBC,SAAU,SAACrP,GACT2M,GAAqB3M,GACrBuN,GAAO+B,cAAc,OAAQtP,EAAMA,QAErCuP,OAAQ,WACNhC,GAAOiC,gBAAP,2BAA4BjC,IAA5B,IAAoCD,MAAM,QAG7CC,GAAOkC,OAAOnC,MACb,0BAAMzI,UAAU,yBACb0I,GAAOkC,OAAOnC,QAKvB,yBAAKzI,UAAU,kBACb,2BAAOA,UAAU,2BACf,kBAAC,IAAD,CAAkBD,GAAG,eACrB,0BAAMC,UAAU,eAAhB,MAEF,yBAAKA,UAAU,YACb,yCACE5B,KAAK,OACL4B,UAAU,eACV6K,SAAUzD,GACNsB,GAAOoC,cAAc,UAE1BpC,GAAOkC,OAAOtC,MACb,0BAAMtI,UAAU,yBACb0I,GAAOkC,OAAOtC,QAKvB,yBAAKtI,UAAU,kBACb,2BAAOA,UAAU,2BACf,kBAAC,IAAD,CAAkBD,GAAG,gBACrB,0BAAMC,UAAU,eAAhB,MAEF,yBAAKA,UAAU,YACb,yCACE5B,KAAK,QACL4B,UAAU,eACV6K,SAAUzD,GACNsB,GAAOoC,cAAc,WAE1BpC,GAAOkC,OAAOpC,OACb,0BAAMxI,UAAU,yBACb0I,GAAOkC,OAAOpC,WAO3B,kBAACuC,EAAA,EAAD,KACE,4BACE3M,KAAK,SACL4B,UAAU,kBACV6K,UAAWnC,GAAOsC,SAAW5D,GAE5BA,EACC,uBAAGpH,UAAU,iCAEb,uBAAGA,UAAU,qBAEdoH,EACC,kBAAC,IAAD,CAAkBrH,GAAG,kBAErB,kBAAC,IAAD,CAAkBA,GAAG,gBAGzB,4BACE3B,KAAK,SACL4B,UAAU,iBACVK,QAAS,WACPmH,GAAU,GACVkB,GAAOU,YACPtB,GAAqB,KAEvB+C,SAAUzD,GAEV,uBAAGpH,UAAU,sBACb,kBAAC,IAAD,CAAkBD,GAAG,qBAK7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYO,MAAM,IAChB,kBAAC,IAAD,KACE,4BACElC,KAAK,SACL4B,UAAU,kBACVK,QAAS,WACPuH,GAAgB,MAChBJ,GAAU,KAGZ,uBAAGxH,UAAU,qBACb,kBAAC,IAAD,CAAkBD,GAAG,iBAI3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEhD,WAAY2J,EACZ1J,aAAcmM,GACdlM,QAASA,EACTlB,IAAKA,EACLoB,UAAW+B,EAAKzB,MAChBL,MAAO,IAEN8B,EAAKA,KAAKe,KAAI,SAACC,EAAMC,GACpB,OACE,kBAAC8K,EAAA,EAAD,CAAUjQ,IAAKmF,EAAMC,YACnB,kBAAC8K,EAAA,EAAD,YAAYhL,QAAZ,IAAYA,OAAZ,EAAYA,EAAMoI,MAClB,kBAAC4C,EAAA,EAAD,YAAYhL,QAAZ,IAAYA,OAAZ,EAAYA,EAAMsI,OAClB,kBAAC0C,EAAA,EAAD,KACqB,KAAd,OAAJhL,QAAI,IAAJA,OAAA,EAAAA,EAAMiL,SACL,kBAAC,IAAD,CAAkBpL,GAAG,mBACD,KAAd,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMiL,SACR,kBAAC,IAAD,CAAkBpL,GAAG,iBACD,KAAd,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMiL,SACR,kBAAC,IAAD,CAAkBpL,GAAG,kBACD,KAAd,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMiL,SACR,kBAAC,IAAD,CAAkBpL,GAAG,sBAErB,kBAAC,IAAD,CAAkBA,GAAG,yBAGzB,kBAACmL,EAAA,EAAD,KACoB,MAAjBhL,EAAKkL,QACJ,uBACEpL,UAAU,4DACVK,QAAS,WArLP,IAACN,IAsLeG,EAAKH,GArL3CiG,YAAcjG,GACXxE,MAAK,SAAC2N,GACLC,GAAW1B,MAEZ8B,OAAM,SAACxN,GACNsN,IAAMC,aAAaxM,EAAKkF,cAAc,CAAEjC,GAAI,8BAoL9B,uBACEC,UAAU,4DACVK,QAAS,WAtMT,IAACN,IAuMeG,EAAKH,GAtMzCgG,YAAYhG,GACTxE,MAAK,SAAC2N,GACLC,GAAW1B,MAEZ8B,OAAM,SAACxN,GACNsN,IAAMC,aAAaxM,EAAKkF,cAAc,CAAEjC,GAAI,2CC3MrCpD,sBAAWC,YAAQ,KAAM,KAAdA,EAhB1B,SAAgCC,GAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEwO,OAAK,EACLC,KAAK,4BACLC,GAAG,6BAEL,kBAAC,IAAD,CACEC,KAAK,iCACLjJ,UAAW,SAAC1F,GAAD,OAAW,kBAAC,EAAkBA,IACzCwO,OAAK","file":"static/js/27.991194b8.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = cloneDeep(paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    setPaginations(pagination);\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poliall${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function activePoli(id) {\r\n  return axios.put(`/api/v1/poli/enable/${id}`);\r\n}\r\nexport function inactivePoli(id) {\r\n  return axios.put(`/api/v1/poli/disable/${id}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function editMedicalKind(id, data) {\r\n  return axios.put(`/api/v1/medicalkind/${id}`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\nexport function createTakaran(data) {\r\n  return axios.post(`/api/v1/takaran`, data);\r\n}\r\nexport function editTakaran(id, data) {\r\n  return axios.put(`/api/v1/takaran/${id}`, data);\r\n}\r\nexport function deleteTakaran(id) {\r\n  return axios.delete(`/api/v1/takaran/${id}`);\r\n}\r\nexport function getTakaran() {\r\n  return axios.get(`/api/v1/takaran`);\r\n}\r\nexport function getFormformat(id) {\r\n  return axios.get(`/api/v1/formformat/get/${id}`);\r\n}\r\nexport function createFolder(data) {\r\n  return axios.post(`/api/v1/formformat/folder`, data);\r\n}\r\nexport function deleteFolders(id) {\r\n  return axios.delete(`/api/v1/formformat/folder/${id}`);\r\n}\r\nexport function createInput(data) {\r\n  return axios.post(`/api/v1/formformat/input`, data);\r\n}\r\nexport function deleteInput(id) {\r\n  return axios.delete(`/api/v1/formformat/input/${id}`);\r\n}\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  ListStaffPagination,\r\n  createStaff,\r\n  editDoctorById,\r\n  activeStaff,\r\n  inActiveStaff,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.POSITION\",\r\n    name: \"role_id\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.STATUS\",\r\n    name: \"status\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nconst optionParameter = [\r\n  { value: 1, label: \"Pendaftaran\" },\r\n  { value: 3, label: \"Kasir\" },\r\n  { value: 4, label: \"Apoteker\" },\r\n  { value: 5, label: \"Administrator\" },\r\n];\r\n\r\nfunction ListStaffPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/staff-page/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.STAFF_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.STAFF_LIST\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    role: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        createStaff(selectedParameter.value, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n            setSelectedParameter({});\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editDoctorById(statusDialog, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    ListStaffPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiActive = (id) => {\r\n    activeStaff(id)\r\n      .then((result) => {\r\n        requestApi(paramTable);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiInActive = (id) => {\r\n    inActiveStaff(id)\r\n      .then((result) => {\r\n        requestApi(paramTable);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"md\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div style={{ minHeight: \"20rem\" }}>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.POSITION\" />\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"col-sm-9\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={loadingSave}\r\n                    className=\"form-control border-0 p-0 h-100 rounded-0\"\r\n                    classNamePrefix=\"react-select\"\r\n                    // menuPlacement=\"top\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                      formik.setFieldValue(\"role\", value.value);\r\n                    }}\r\n                    onBlur={() => {\r\n                      formik.setFieldTouched({ ...formik, role: true });\r\n                    }}\r\n                  />\r\n                  {formik.errors.role && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.role}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.NAME\" />\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"col-sm-9\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    disabled={loadingSave}\r\n                    {...formik.getFieldProps(\"nama\")}\r\n                  />\r\n                  {formik.errors.nama && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.nama}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-3 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.EMAIL\" />\r\n                  <span className=\"text-danger\">*</span>\r\n                </label>\r\n                <div className=\"col-sm-9\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    disabled={loadingSave}\r\n                    {...formik.getFieldProps(\"email\")}\r\n                  />\r\n                  {formik.errors.email && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.email}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={!formik.isValid || loadingSave}\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n                setSelectedParameter({});\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-user-plus\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={10}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.role_id === 1 ? (\r\n                      <FormattedMessage id=\"LABEL.REGISTRY\" />\r\n                    ) : item?.role_id === 2 ? (\r\n                      <FormattedMessage id=\"LABEL.DOCTOR\" />\r\n                    ) : item?.role_id === 3 ? (\r\n                      <FormattedMessage id=\"LABEL.CASHIER\" />\r\n                    ) : item?.role_id === 4 ? (\r\n                      <FormattedMessage id=\"LABEL.PHARMACISTS\" />\r\n                    ) : (\r\n                      <FormattedMessage id=\"LABEL.ADMINISTRATOR\" />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {item.stop_mk === \"N\" ? (\r\n                      <i\r\n                        className=\"fas fa-toggle-on font-size-h2 text-primary cursor-pointer\"\r\n                        onClick={() => {\r\n                          callApiInActive(item.id);\r\n                        }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i\r\n                        className=\"fas fa-toggle-off font-size-h2 text-danger cursor-pointer\"\r\n                        onClick={() => {\r\n                          callApiActive(item.id);\r\n                        }}\r\n                      ></i>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListStaffPage));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListStaffPage from \"./ListStaffPage\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorStaff(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/staff-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/staff-page/list\"\r\n        component={(props) => <ListStaffPage {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorStaff));\r\n"],"sourceRoot":""}