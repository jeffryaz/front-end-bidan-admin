{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Administrator/_redux/CrudAdministrator.js","app/components/textEditor/TextEditor.js","app/modules/Administrator/MasterData/ListPoliPage.js","app/modules/Administrator/MasterData/ListServicePage.js","app/modules/Administrator/MasterData/DetailServicePage.js","app/modules/Administrator/MasterData/ListMedKind.js","app/modules/Administrator/MasterData/RootAdministratorMasterData.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listDoctorPagination","axios","get","deleteDoctor","delete","listPoliPagination","listAllPoli","craeteDoctor","post","craetePoli","getDoctorById","getPoliById","editDoctorById","editPoliById","put","listArticlePagination","craeteArticle","editArticle","getArticleById","deleteArticleById","listService","getServiceById","createService","editService","listDailyInCome","listHandOver","processHandOver","detailHandOver","ListMedKindPagination","deleteMedKindById","craeteMedicalKind","ListScreeningSettingPagination","craeteScreeningSetting","editScreeningSetting","getScreeningSettingById","createMedicalForm","getMedicalFormById","deleteMedicalFormById","ListStaffPagination","createStaff","activeStaff","inActiveStaff","toolbar","initialData","getData","onBlur","content","setContent","lang","height","dialogsInBody","onImageUpload","files","node","createElement","fr","FileReader","onload","setAttribute","result","ReactSummernote","insertNode","readAsDataURL","headerTable","data_ops","initialValues","auth","suhbeader","useSubheader","setLoading","setData","setErr","loadingSave","setLoadingSave","useHistory","dialog","setDialog","paramTable","setParamTable","statusDialog","setStatusDialog","useLayoutEffect","setBreadcrumbs","pathname","setTitle","Schema","Yup","shape","poli","required","ruangan","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","then","requestApi","resetForm","MODAL","showSnackbar","catch","console","log","response","messages","setValues","setFieldTouched","Dialog","maxWidth","fullWidth","aria-labelledby","aria-describedby","DialogTitle","autoComplete","handleSubmit","DialogContent","getFieldProps","touched","errors","DialogActions","isValid","keys","constructor","TableRow","TableCell","window","updated_at","history","service_name","dangerouslySetInnerHTML","__html","service_desc","state","match","TextEditor","setFieldValue","optionParameter","selectedParameter","setSelectedParameter","datas","setDatas","dataSeconds","setDataSeconds","nama","unit","datatype","callApiListMedKindPagination","message","minHeight","isDisabled","classNamePrefix","exact","from","path"],"mappings":"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","file":"static/js/16.8c29cde3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={document.getElementById(\r\n                          `sub-filter-${anchorEl ? anchorEl : 0}`\r\n                        )}\r\n                        keepMounted={false}\r\n                        open={index === anchorEl}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listDoctorPagination(params) {\r\n  return axios.get(`/api/v1/dokter${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function deleteDoctor(id) {\r\n  return axios.delete(`/api/v1/dokter/${id}`);\r\n}\r\nexport function listPoliPagination(params) {\r\n  return axios.get(`/api/v1/poli${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listAllPoli() {\r\n  return axios.get(`/api/v1/poli`);\r\n}\r\nexport function craeteDoctor(data) {\r\n  return axios.post(`/api/v1/dokter`, data);\r\n}\r\nexport function craetePoli(data) {\r\n  return axios.post(`/api/v1/poli`, data);\r\n}\r\nexport function getDoctorById(id) {\r\n  return axios.get(`/api/v1/dokter/${id}`);\r\n}\r\nexport function getPoliById(id) {\r\n  return axios.get(`/api/v1/poli/${id}`);\r\n}\r\nexport function editDoctorById(id, data) {\r\n  return axios.post(`/api/v1/dokter/${id}`, data);\r\n}\r\nexport function editPoliById(id, data) {\r\n  return axios.put(`/api/v1/poli/${id}`, data);\r\n}\r\nexport function listArticlePagination(params) {\r\n  return axios.get(`/api/v1/article${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteArticle(data) {\r\n  return axios.post(`/api/v1/article`, data);\r\n}\r\nexport function editArticle(id, data) {\r\n  return axios.post(`/api/v1/article/${id}`, data);\r\n}\r\nexport function getArticleById(id) {\r\n  return axios.get(`/api/v1/article/${id}`);\r\n}\r\nexport function deleteArticleById(id) {\r\n  return axios.delete(`/api/v1/article/${id}`);\r\n}\r\nexport function listService(params) {\r\n  return axios.get(`/api/v1/layanan${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getServiceById(id) {\r\n  return axios.get(`/api/v1/layanan/${id}`);\r\n}\r\nexport function createService(data) {\r\n  return axios.post(`/api/v1/layanan`, data);\r\n}\r\nexport function editService(id, data) {\r\n  return axios.put(`/api/v1/layanan/${id}`, data);\r\n}\r\nexport function listDailyInCome(params) {\r\n  return axios.get(`/api/v1/report/dailyincome${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function listHandOver() {\r\n  return axios.get(`/api/v1/handover`);\r\n}\r\nexport function processHandOver(id) {\r\n  return axios.put(`/api/v1/handover/${id}`);\r\n}\r\nexport function detailHandOver(id) {\r\n  return axios.get(`/api/v1/handover/${id}`);\r\n}\r\nexport function ListMedKindPagination() {\r\n  return axios.get(`/api/v1/medicalkind`);\r\n}\r\nexport function deleteMedKindById(id) {\r\n  return axios.delete(`/api/v1/medicalkind/${id}`);\r\n}\r\nexport function craeteMedicalKind(data) {\r\n  return axios.post(`/api/v1/medicalkind`, data);\r\n}\r\nexport function ListScreeningSettingPagination(params) {\r\n  return axios.get(`/api/v1/formkind${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function craeteScreeningSetting(data) {\r\n  return axios.post(`/api/v1/formkind`, data);\r\n}\r\nexport function editScreeningSetting(id, data) {\r\n  return axios.put(`/api/v1/formkind/${id}`, data);\r\n}\r\nexport function getScreeningSettingById(id) {\r\n  return axios.get(`/api/v1/formkindid/${id}`);\r\n}\r\nexport function createMedicalForm(data) {\r\n  return axios.post(`/api/v1/medicalform`, data);\r\n}\r\nexport function getMedicalFormById(id) {\r\n  return axios.get(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function deleteMedicalFormById(id) {\r\n  return axios.delete(`/api/v1/medicalform/${id}`);\r\n}\r\nexport function getMedicalFormUnSelectById(id) {\r\n  return axios.get(`/api/v1/formkind/unselect/${id}`);\r\n}\r\nexport function ListStaffPagination(params) {\r\n  return axios.get(`/api/v1/staff${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function createStaff(id, data) {\r\n  return axios.post(`/api/v1/staff/${id}`, data);\r\n}\r\nexport function activeStaff(id) {\r\n  return axios.put(`/api/v1/staff/ena/${id}`);\r\n}\r\nexport function inActiveStaff(id) {\r\n  return axios.put(`/api/v1/staff/dis/${id}`);\r\n}\r\n","import React from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactSummernote from \"react-summernote\";\r\nimport \"react-summernote/dist/react-summernote.css\";\r\nimport \"react-summernote/lang/summernote-id-ID\";\r\nimport \"bootstrap/js/dist/modal\";\r\nimport \"bootstrap/js/dist/dropdown\";\r\nimport \"bootstrap/js/dist/tooltip\";\r\nimport \"./styles.scss\";\r\n\r\nconst toolbar = {\r\n  toolbar: [\r\n    [\"style\", [\"style\"]],\r\n    [\"font\", [\"bold\", \"underline\", \"clear\"]],\r\n    [\"fontname\", [\"fontname\"]],\r\n    [\"color\", [\"color\"]],\r\n    [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n    [\"table\", [\"table\"]],\r\n    [\"insert\", [\"link\", \"picture\", \"video\"]],\r\n  ],\r\n};\r\n\r\nconst TextEditor = (props) => {\r\n  const { initialData = \"\", getData, onBlur, options = toolbar } = props;\r\n  const [content, setContent] = React.useState(initialData);\r\n\r\n  const initial = () => {\r\n    setContent(initialData);\r\n    getData(initialData);\r\n  };\r\n\r\n  React.useEffect(initial, [initialData]);\r\n  return (\r\n    <React.Fragment>\r\n      <ReactSummernote\r\n        value={content}\r\n        options={Object.assign(\r\n          {\r\n            lang: \"id-ID\",\r\n            height: 450,\r\n            dialogsInBody: true,\r\n          },\r\n          options\r\n        )}\r\n        onChange={(e) => {\r\n          setContent(e);\r\n          getData(e);\r\n        }}\r\n        onImageUpload={(files) => {\r\n          let node = document.createElement(\"img\");\r\n          let fr = new FileReader();\r\n          fr.onload = () => {\r\n            node.setAttribute(\"src\", fr.result);\r\n            ReactSummernote.insertNode(node);\r\n          };\r\n          fr.readAsDataURL(files[0]);\r\n        }}\r\n        onBlur={onBlur}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TextEditor));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  listPoliPagination,\r\n  craetePoli,\r\n  getPoliById,\r\n  editPoliById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ROOM\",\r\n    name: \"ruangan\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PUBLISH\",\r\n    name: \"publish\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nfunction ListPoliPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(false);\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/poli`,\r\n        title: intl.formatMessage({ id: \"LABEL.POLI\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.POLI\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    poli: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    ruangan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        craetePoli(values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editPoliById(statusDialog, values)\r\n          .then((result) => {\r\n            requestApi(paramTable);\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listPoliPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    setStatusDialog(data.id);\r\n    getPoliById(data.id)\r\n      .then((result) => {\r\n        formik.setValues(result.data.data);\r\n        formik.setFieldTouched({ ...formik, poli: true });\r\n        setDialog(true);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiUnPublish = (id) => {\r\n    // unPublishTestimonial(id)\r\n    //   .then((result) => {\r\n    //     MODAL.showSnackbar(\r\n    //       intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n    //       \"success\"\r\n    //     );\r\n    //     requestApi(paramTable);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setErr(true);\r\n    //     setLoading(false);\r\n    //     MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n    //   });\r\n  };\r\n\r\n  const callApiPublish = (id) => {\r\n    // publishTestimonial(id)\r\n    //   .then((result) => {\r\n    //     MODAL.showSnackbar(\r\n    //       intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n    //       \"success\"\r\n    //     );\r\n    //     requestApi(paramTable);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setErr(true);\r\n    //     setLoading(false);\r\n    //     MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.POLI\" />\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"poli\")}\r\n                />\r\n                {formik.touched.poli && formik.errors.poli && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.poli}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.ROOM\" />\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"ruangan\")}\r\n                />\r\n                {formik.touched.ruangan && formik.errors.ruangan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ruangan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loadingSave\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={5}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.poli}</TableCell>\r\n                  <TableCell>{item?.ruangan}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {true ? (\r\n                      <i\r\n                        className=\"fas fa-toggle-on font-size-h2 text-primary cursor-pointer\"\r\n                        onClick={() => {\r\n                          callApiUnPublish(item.id);\r\n                        }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i\r\n                        className=\"fas fa-toggle-off font-size-h2 text-danger cursor-pointer\"\r\n                        onClick={() => {\r\n                          callApiPublish(item.id);\r\n                        }}\r\n                      ></i>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListPoliPage));\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { listService } from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport Tables from \"../../../components/tableCustomV1/table\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.SERVICE\",\r\n    name: \"service_name\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n    td: \"td-30\",\r\n  },\r\n  {\r\n    title: \"LABEL.DESC\",\r\n    name: \"service_desc\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n    td: \"td-30\",\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n    td: \"td-35\",\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"true\",\r\n    },\r\n    td: \"td-5\",\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListServicePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const history = useHistory();\r\n  const [paramTable, setParamTable] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/service`,\r\n        title: intl.formatMessage({ id: \"LABEL.LIST_SERVICE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.LIST_SERVICE\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    setParamTable(params);\r\n    listService(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: 0,\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    history.push(`/administrator/master-data-page/sevice/${data.id}`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                history.push(`/administrator/master-data-page/sevice/new`);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={5}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.service_name}</TableCell>\r\n                  <TableCell>\r\n                    <p\r\n                      className=\"m-0\"\r\n                      style={{ maxWidth: 700 }}\r\n                      dangerouslySetInnerHTML={{ __html: item?.service_desc }}\r\n                    ></p>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListServicePage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  createService,\r\n  editService,\r\n  getServiceById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n  CardHeaderTitle,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport TextEditor from \"../../../components/textEditor/TextEditor\";\r\n\r\nconst initialValues = {};\r\nconst toolbar = {\r\n  toolbar: [\r\n    [\"style\", [\"style\"]],\r\n    [\"font\", [\"bold\", \"underline\", \"clear\"]],\r\n    [\"fontname\", [\"fontname\"]],\r\n    [\"color\", [\"color\"]],\r\n    [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n    [\"insert\", [\"link\"]],\r\n  ],\r\n};\r\n\r\nfunction DetailServicePage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const state = props.match.params.state;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/service`,\r\n        title: intl.formatMessage({ id: \"LABEL.LIST_SERVICE\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/service/${state}`,\r\n        title: intl.formatMessage({ id: \"LABEL.SERVICE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.SERVICE\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    service_name: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    service_desc: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (state === \"new\") {\r\n        createService(values)\r\n          .then((result) => {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        editService(state, values)\r\n          .then((result) => {\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      }\r\n    },\r\n  });\r\n\r\n  const callApiGetById = () => {\r\n    if (state !== \"new\") {\r\n      getServiceById(state)\r\n        .then((result) => {\r\n          formik.setValues({\r\n            service_name: result.data.data.service_name,\r\n            service_desc: result.data.data.service_desc,\r\n          });\r\n          formik.setFieldTouched({ ...formik, service_desc: true });\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    }\r\n  };\r\n  useEffect(callApiGetById, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"card-title\">\r\n            <CardHeaderTitle>\r\n              {state !== \"new\" ? (\r\n                <FormattedMessage id=\"LABEL.EDIT\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.ADD\" />\r\n              )}\r\n            </CardHeaderTitle>\r\n          </div>\r\n          <CardHeaderToolbar></CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form\r\n            className=\"form\"\r\n            autoComplete=\"off\"\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SERVICE\" />\r\n              </label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  disabled={loadingSave}\r\n                  required\r\n                  {...formik.getFieldProps(\"service_name\")}\r\n                />\r\n                {formik.touched.service_name && formik.errors.service_name && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.service_name}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <FormattedMessage id=\"LABEL.DESC\" />\r\n              </label>\r\n              <TextEditor\r\n                initialData={formik.values.service_desc}\r\n                getData={(e) => {\r\n                  formik.setFieldValue(\"service_desc\", e);\r\n                }}\r\n                onBlur={() => {\r\n                  formik.setFieldTouched({ ...formik, service_desc: true });\r\n                }}\r\n                options={toolbar}\r\n              />\r\n              {formik.touched.service_desc && formik.errors.service_desc && (\r\n                <span className=\"text-left text-danger\">\r\n                  {formik.errors.service_desc}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"toolbar-custom scrolltop\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-sm my-2\"\r\n                disabled={\r\n                  !formik.isValid ||\r\n                  (Object.keys(formik.touched).length === 0 &&\r\n                    formik.touched.constructor === Object) ||\r\n                  loadingSave\r\n                }\r\n                style={{ width: 70 }}\r\n              >\r\n                {loadingSave ? (\r\n                  <i className=\"fas fa-spinner fa-pulse d-block p-0\"></i>\r\n                ) : (\r\n                  <i className=\"fas fa-save d-block p-0\"></i>\r\n                )}\r\n                {loadingSave ? (\r\n                  <FormattedMessage id=\"LABEL.WAITING\" />\r\n                ) : (\r\n                  <FormattedMessage id=\"LABEL.SAVE\" />\r\n                )}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm my-2\"\r\n                onClick={() => {\r\n                  formik.resetForm();\r\n                  history.push(`/administrator/master-data-page/sevice`);\r\n                }}\r\n                disabled={loadingSave}\r\n                style={{ width: 70 }}\r\n              >\r\n                <i className=\"fas fa-times d-block p-0\"></i>\r\n                <FormattedMessage id=\"LABEL.CANCEL\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(DetailServicePage));\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport {\r\n  ListMedKindPagination,\r\n  craeteMedicalKind,\r\n  deleteMedKindById,\r\n  // editPoliById,\r\n} from \"../_redux/CrudAdministrator\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardHeaderToolbar,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as auth from \"../../Auth/_redux/ActionAuth\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { hostBase } from \"../../../../redux/setupAxios\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL\",\r\n    name: \"nama\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.UNIT\",\r\n    name: \"unit\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.INPUT_TYPE\",\r\n    name: \"datatype\",\r\n    filter: false,\r\n  },\r\n  {\r\n    title: \"LABEL.DATE_UPDATED\",\r\n    name: \"updated_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DELETE\",\r\n    icon: \"far fa-trash-alt text-danger\",\r\n    type: \"delete\",\r\n  },\r\n];\r\n\r\nconst initialValues = {};\r\n\r\nconst optionParameter = [\r\n  { value: 1, label: \"TEXT\" },\r\n  { value: 2, label: \"ANGKA\" },\r\n  { value: 3, label: \"FLOAT\" },\r\n  { value: 4, label: \"TANGGAL\" },\r\n  { value: 5, label: \"TEXT AREA\" },\r\n];\r\n\r\nfunction ListMedKind(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const [loading, setLoading] = useState(true);\r\n  const [err, setErr] = useState(false);\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(false);\r\n  const [statusDialog, setStatusDialog] = useState(null);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [datas, setDatas] = useState([]);\r\n  const [dataSeconds, setDataSeconds] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/administrator/dashboard`,\r\n        title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n      },\r\n      {\r\n        pathname: `/administrator/master-data-page/medical-type`,\r\n        title: intl.formatMessage({ id: \"LABEL.MEDICAL_TYPE\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_TYPE\" }));\r\n  }, []);\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    unit: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    datatype: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      setLoadingSave(true);\r\n      if (!statusDialog) {\r\n        craeteMedicalKind(values)\r\n          .then((result) => {\r\n            callApiListMedKindPagination();\r\n            formik.resetForm();\r\n            MODAL.showSnackbar(\r\n              intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n              \"success\",\r\n              3000\r\n            );\r\n            setDialog(false);\r\n            setLoadingSave(false);\r\n          })\r\n          .catch((err) => {\r\n            setLoadingSave(false);\r\n            MODAL.showSnackbar(err.response?.data.messages);\r\n          });\r\n      } else {\r\n        // editPoliById(statusDialog, values)\r\n        //   .then((result) => {\r\n        //     callApiListMedKindPagination();\r\n        //     formik.resetForm();\r\n        //     MODAL.showSnackbar(\r\n        //       intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n        //       \"success\",\r\n        //       3000\r\n        //     );\r\n        //     setDialog(false);\r\n        //     setLoadingSave(false);\r\n        //   })\r\n        //   .catch((err) => {\r\n        //     console.log(err);\r\n        //     setLoadingSave(false);\r\n        //     MODAL.showSnackbar(err.response?.data.messages);\r\n        //   });\r\n      }\r\n    },\r\n  });\r\n\r\n  const callApiListMedKindPagination = () => {\r\n    setLoading(true);\r\n    ListMedKindPagination()\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDatas(result.data.data);\r\n        setDataSeconds(result.data.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(\r\n          err.response?.data.messages || err.response?.data.message\r\n        );\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedKindPagination, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    deleteMedKindById(data.id)\r\n      .then((result) => {\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n        callApiListMedKindPagination();\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n  const handleFilters = (data) => {\r\n    setDatas(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          {statusDialog ? (\r\n            <FormattedMessage id=\"LABEL.EDIT\" />\r\n          ) : (\r\n            <FormattedMessage id=\"LABEL.ADD\" />\r\n          )}\r\n        </DialogTitle>\r\n        <form\r\n          className=\"form\"\r\n          autoComplete=\"off\"\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <DialogContent>\r\n            <div style={{ minHeight: \"27rem\" }}>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-4 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.INPUT_TYPE\" />\r\n                </label>\r\n                <div className=\"col-sm-8\">\r\n                  <Select\r\n                    value={selectedParameter}\r\n                    options={optionParameter}\r\n                    isDisabled={loadingSave}\r\n                    className=\"form-control border-0 p-0 h-100\"\r\n                    classNamePrefix=\"react-select\"\r\n                    onChange={(value) => {\r\n                      setSelectedParameter(value);\r\n                      formik.setFieldValue(\"datatype\", value.value);\r\n                    }}\r\n                  />\r\n                  {formik.touched.datatype && formik.errors.datatype && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.datatype}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-4 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL\" />\r\n                </label>\r\n                <div className=\"col-sm-8\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    disabled={loadingSave}\r\n                    required\r\n                    {...formik.getFieldProps(\"nama\")}\r\n                  />\r\n                  {formik.touched.nama && formik.errors.nama && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.nama}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group row\">\r\n                <label className=\"col-sm-4 col-form-label\">\r\n                  <FormattedMessage id=\"LABEL.UNIT\" />\r\n                </label>\r\n                <div className=\"col-sm-8\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    disabled={loadingSave}\r\n                    required\r\n                    {...formik.getFieldProps(\"unit\")}\r\n                  />\r\n                  {formik.touched.unit && formik.errors.unit && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.unit}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loadingSave\r\n              }\r\n            >\r\n              {loadingSave ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n              {loadingSave ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                setDialog(false);\r\n                formik.resetForm();\r\n              }}\r\n              disabled={loadingSave}\r\n            >\r\n              <i className=\"fas fa-times px-1\"></i>\r\n              <FormattedMessage id=\"LABEL.CANCEL\" />\r\n            </button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      <Card>\r\n        <CardHeader title=\"\">\r\n          <CardHeaderToolbar>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                setStatusDialog(null);\r\n                setDialog(true);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-plus-circle\"></i>\r\n              <FormattedMessage id=\"LABEL.ADD\" />\r\n            </button>\r\n          </CardHeaderToolbar>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSeconds}\r\n            handleFilter={handleFilters}\r\n            loading={false}\r\n            hecto={5}\r\n          >\r\n            {datas.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>{item?.unit}</TableCell>\r\n                  <TableCell>\r\n                    {item?.datatype === 1\r\n                      ? \"TEXT\"\r\n                      : item?.datatype === 2\r\n                      ? \"ANGKA\"\r\n                      : item?.datatype === 3\r\n                      ? \"FLOAT\"\r\n                      : item?.datatype === 4\r\n                      ? \"TANGGAL\"\r\n                      : \"TEXT AREA\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.updated_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, auth.actions)(ListMedKind));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPoliPage from \"./ListPoliPage\";\r\nimport ListServicePage from \"./ListServicePage\";\r\nimport DetailServicePage from \"./DetailServicePage\";\r\nimport ListMedKind from \"./ListMedKind\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootAdministratorMasterData(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/administrator/master-data-page\"\r\n        to=\"/administrator/dashboard\"\r\n      />\r\n      <Route\r\n        path=\"/administrator/master-data-page/poli\"\r\n        component={(props) => <ListPoliPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/administrator/master-data-page/sevice/:state\"\r\n        component={(props) => <DetailServicePage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/administrator/master-data-page/sevice\"\r\n        component={(props) => <ListServicePage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/administrator/master-data-page/medical-type\"\r\n        component={(props) => <ListMedKind {...props} />}\r\n        exact\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootAdministratorMasterData));\r\n"],"sourceRoot":""}