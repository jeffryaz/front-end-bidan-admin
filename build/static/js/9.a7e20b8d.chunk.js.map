{"version":3,"sources":["app/components/tableCustomV1/tableOnly.js","app/components/buttonAction/ButtonAction.js","app/components/tableCustomV1/table.js","app/modules/Patient/_redux/CrudPatient.js","app/modules/Patient/patientPages/MedicalRecord.js","app/modules/Patient/patientPages/DetailMedicalRecord.js","app/modules/Patient/ListPatientPage.js","../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","app/components/navs/index.js","app/modules/Patient/PatientPage.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/StepConnector/StepConnector.js","../node_modules/@material-ui/core/esm/Stepper/Stepper.js","../node_modules/@material-ui/core/esm/Step/Step.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js","../node_modules/@material-ui/core/esm/StepIcon/StepIcon.js","../node_modules/@material-ui/core/esm/StepLabel/StepLabel.js","app/components/steppersCustom/Steppers.js","app/modules/Patient/registrationPages/Information.js","app/modules/Patient/registrationPages/Address.js","app/modules/Patient/registrationPages/EmergencyContact.js","app/modules/Patient/RegistrationPatient.js","app/modules/Patient/RootPatient.js"],"names":["injectIntl","connect","props","intl","dataHeader","loading","err","children","hecto","handleFilter","dataSecond","React","useState","filter","item","dataFilter","Fragment","className","htmlFor","id","type","placeholder","formatMessage","onChange","e","data","i","length","j","name","toString","toLowerCase","includes","target","value","push","component","Paper","map","index","key","title","CustomTooltip","withStyles","theme","tooltip","boxShadow","shadows","fontSize","marginTop","Tooltip","ButtonAction","handleAction","ops","label","exclude","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleChange","useCallback","listUsed","placement","aria-label","aria-controls","aria-haspopup","onClick","style","margin","padding","keepMounted","onClose","PaperProps","width","marginLeft","el","to","url","icon","primary","disabled","rupiah","number","countryCode","currency","options","currencyDisplay","Intl","NumberFormat","format","handleParams","countData","numberColum","page","count","rowsPerPage","paginations","setPaginations","order","status","active","replace","sortData","setSortData","filterTable","setFilterTable","sort","filterSort","setFilterSort","requestFilterSort","updateFilterTable","updateSortTable","pagination","Object","assign","filterSorts","ret","p","generateFilterUrl","params","useEffect","data-toggle","aria-expanded","paddingRight","paddingLeft","Number","moment","Date","color","document","getElementById","transform","displayType","thousandSeparator","decimalSeparator","allowEmptyFormatting","allowLeadingZeros","prefix","onValueChange","mask","min","defaultValue","property","filterTables","updateValueFilter","resetValueFilter","reset","td","direction","sortDatas","createSortHandler","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","listPatientPagination","axios","get","getDataPatient","updateDataPatient","post","RegisDataPatientOffline","listProvince","listCity","prov","listDistricts","city","listWard","districts","listMedicalRecord","patient_id","getMedicalRecord","medical_id","getMedicineById","headerTable","data_ops","setLoading","setData","setDataSecond","match","antrian_id","medicalRecordId","position","useSelector","state","auth","user","shallowEqual","then","result","catch","MODAL","showSnackbar","window","location","pathname","split","history","created_at","poli","Lab","setLab","suhbeader","useSubheader","dataScreening","setDataScreening","medicalRecordIdPass","dataMedicine","setDataMedicine","dataMedicinePatient","a","waiting","Promise","resolve","reject","composite_item","qty","useLayoutEffect","setBreadcrumbs","setTitle","form","screen","labs","callApiGetMedicine","resep","code_reg","pasien","dokter","label_kind","datatype","join","val_desc","rows","nama","allowNegative","idx","findIndex","floatValue","harga","backgroundColor","colSpan","fee","fixedDecimalScale","decimalScale","countSubTotal","hb","hbsag","hiv","sifilis","asam_urat","kolesterol","gol_dar","pp_test","protein_urine","ph","glukosa","setErr","kode_pasien","kota","no_telp","email","jk","ref","classes","_props$color","valueBuffer","_props$variant","variant","other","useTheme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","concat","_transform","root","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","getColor","palette","backgroundPrimary","main","backgroundSecondary","secondary","overflow","height","colorAdjust","colorPrimary","colorSecondary","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","initialNavLists","Navs","navLists","defaultActiveKey","handleSelect","Nav","onSelect","Item","Link","eventKey","fontWeight","optionParameter","optionParameterGender","optionParameterEducation","optionParameterProfession","useStyles","makeStyles","bigAvatar","marginBottom","marginRight","loadingUpdate","setLoadingUpdate","statusForm","setStatusForm","dataForm","setDataForm","navActive","setNavActive","selectedParameter","setSelectedParameter","selectedParameterGender","setSelectedParameterGender","setNama","ktp","setKtp","selectedParameterEducation","setSelectedParameterEducation","selectedParameterProfession","setSelectedParameterProfession","selectedParameterProvince","setSelectedParameterProvince","optionParameterProvince","setOptionParameterProvince","selectedParameterCity","setSelectedParameterCity","optionParameterCity","setOptionParameterCity","selectedParameterDistricts","setSelectedParameterDistricts","optionParameterDistricts","setOptionParameterDistricts","selectedParameterWard","setSelectedParameterWard","optionParameterWard","setOptionParameterWard","kec","kel","statusData","setStatusData","callApiDataPatient","ktpno","statusIndex","status_nikah","genderIndex","pendidikan","pekerjaan","forEach","id_kota","id_kec","id_kel","Avatar","alt","src","photo_pasien","hostBase","toAbsoluteUrl","href","autoComplete","onSubmit","preventDefault","newParams","FormData","trim","keys","element","append","tempat_lahir","isDisabled","classNamePrefix","no_kk","tgl_lahir","alamat","partner","partner_status","partner_tel","selectedKey","MedicalRecord","createSvgIcon","d","childrenProp","_props$component","Component","imgProps","sizes","srcSet","loaded","_ref","_React$useState","setLoaded","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","display","alignItems","justifyContent","flexShrink","fontFamily","typography","pxToRem","lineHeight","borderRadius","userSelect","background","default","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","String","boxSizing","spacing","breakpoints","up","values","reduce","acc","breakpoint","maxWidthXs","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","_props$alternativeLab","alternativeLabel","completed","_props$orientation","orientation","line","lineHorizontal","lineVertical","flex","horizontal","vertical","borderColor","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","minHeight","defaultConnector","_props$activeStep","activeStep","_props$connector","connector","connectorProp","_props$nonLinear","nonLinear","childrenArray","toArray","steps","step","controlProps","last","elevation","flexDirection","_props$active","_props$completed","_props$disabled","_props$expanded","expanded","child","cx","cy","r","_props$error","error","Warning","CheckCircle","SvgIcon","text","x","y","textAnchor","fill","contrastText","caption","optional","StepIconComponentProp","StepIconComponent","StepIconProps","iconContainer","labelContainer","Typography","muiName","cursor","optionParameterStatus","handleProgress","dataInformation","handleData","handleStatus","selectedParameterStatus","setSelectedParameterStatus","Schema","Yup","required","formik","useFormik","initialValues","validationSchema","setStatus","setSubmitting","touched","constructor","isValid","setFieldTouched","handleSubmit","getFieldProps","errors","setFieldValue","setErrors","onBlur","dataAddress","statusAddress","dataEmergencyContact","dataProgress","setDataProgress","setDataInformation","setStatusInformation","setDataAddress","setStatusAddress","setEmergencyContact","setStatusEmergencyContact","dialog","setDialog","idPatient","setIdPatient","Dialog","fullWidth","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","getData","dataSecondAddress","dataReq","reg_rule","add_user","response","messages","handleSaveRegis","exact","from","path","DetailMedicalRecord","PatientPage","ListPatientPage"],"mappings":"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","file":"static/js/9.a7e20b8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nconst TableOnly = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    hecto = 1,\r\n    handleFilter,\r\n    dataSecond = [],\r\n  } = props;\r\n  const [dataFilter] = React.useState(\r\n    dataHeader.filter((item) => item.filter === true)\r\n  );\r\n\r\n  const handleFilters = (e) => {\r\n    var data = [];\r\n    for (let i = 0; i < dataSecond.length; i++) {\r\n      for (let j = 0; j < dataFilter.length; j++) {\r\n        var item = dataSecond[i][dataFilter[j].name].toString().toLowerCase();\r\n        if (item.includes(e.target.value.toLowerCase())) {\r\n          data.push(dataSecond[i]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (typeof handleFilter === \"function\") handleFilter(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"LABEL.SEARCH\" className=\"col-sm-3 col-form-label\">\r\n                <FormattedMessage id=\"LABEL.SEARCH\" />:\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"LABEL.SEARCH\"\r\n                  placeholder={intl.formatMessage({\r\n                    id: \"LABEL.SEARCH\",\r\n                  })}\r\n                  onChange={handleFilters}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper}>\r\n          <Table className={\"hecto-\" + hecto}>\r\n            <TableHead>\r\n              <TableRow>\r\n                {dataHeader.map((item, index) => {\r\n                  return (\r\n                    <TableCell\r\n                      className=\"bg-primary text-uppercase\"\r\n                      key={index.toString()}\r\n                    >\r\n                      <span>\r\n                        <FormattedMessage id={item.title} />\r\n                      </span>\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>{children}</TableBody>\r\n          </Table>\r\n\r\n          <div className=\"table-loading-data\">\r\n            <div className=\"text-center font-weight-bold py-5\">\r\n              <div className=\"table-loading-data-potition\">\r\n                {loading && (\r\n                  <span>\r\n                    <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                  </span>\r\n                )}\r\n                {err && (\r\n                  <span className=\"text-danger\">\r\n                    <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                    <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TableContainer>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(TableOnly));\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Tooltip,\r\n  withStyles,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: \"0.875rem\",\r\n    marginTop: \"0.25rem\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function ButtonAction({\r\n  data,\r\n  handleAction,\r\n  ops,\r\n  label = null,\r\n  exclude = [],\r\n}) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  function handleClick(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n  const handleChange = React.useCallback(\r\n    (type, data) => {\r\n      if (typeof handleAction === \"function\") handleAction(type, data);\r\n      handleClose();\r\n    },\r\n    [handleAction, handleClose]\r\n  );\r\n\r\n  let listUsed = ops;\r\n\r\n  return (\r\n    <div>\r\n      {label ? (\r\n        <CustomTooltip\r\n          title={<FormattedMessage id={label} />}\r\n          placement=\"bottom\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"More\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVert />\r\n          </IconButton>\r\n        </CustomTooltip>\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"More\"\r\n          aria-controls=\"long-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          style={{\r\n            margin: \"-6px 0px\",\r\n            padding: 8,\r\n          }}\r\n        >\r\n          <MoreVert />\r\n        </IconButton>\r\n      )}\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            width: 300,\r\n            marginLeft: -50,\r\n          },\r\n        }}\r\n      >\r\n        {listUsed\r\n          .filter((el) => !exclude.includes(el.type))\r\n          .map((el, id) => {\r\n            if (el.to) {\r\n              return (\r\n                <Link key={id} to={el.to?.url} style={el.to?.style}>\r\n                  <MenuItem>\r\n                    <ListItemIcon>\r\n                      <i className={el.icon}></i>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={<FormattedMessage id={el.label} />}\r\n                    />\r\n                  </MenuItem>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <MenuItem\r\n                  key={id}\r\n                  onClick={() => handleChange(el.type, data)}\r\n                  disabled={el.disabled}\r\n                >\r\n                  <ListItemIcon>\r\n                    <i className={el.icon}></i>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={<FormattedMessage id={el.label} />} />\r\n                </MenuItem>\r\n              );\r\n            }\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    // </LightTooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  Paper,\r\n  Menu,\r\n} from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport \"./styles.scss\";\r\n\r\nconst format = (countryCode, currency, number) => {\r\n  const options = {\r\n    currency,\r\n    style: \"currency\",\r\n    currencyDisplay: \"symbol\",\r\n  };\r\n\r\n  return new Intl.NumberFormat(countryCode, options).format(number);\r\n};\r\n\r\nexport const rupiah = (number) => format(\"id-ID\", \"IDR\", number);\r\n\r\nconst Tables = (props) => {\r\n  const {\r\n    intl,\r\n    dataHeader = [],\r\n    handleParams,\r\n    loading = false,\r\n    err = false,\r\n    children,\r\n    countData = 0,\r\n    hecto = 1,\r\n  } = props;\r\n  const [paginations, setPaginations] = React.useState({\r\n    numberColum: 0,\r\n    page: 0,\r\n    count: countData,\r\n    rowsPerPage: 10,\r\n  });\r\n  const [sortData, setSortData] = React.useState({\r\n    name:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader\r\n            .filter(\r\n              (value) =>\r\n                value.order.status === true && value.order.active === true\r\n            )[0]\r\n            .name.replace(/\\s/g, \"\")\r\n        : \"\",\r\n    order:\r\n      dataHeader.filter(\r\n        (value) => value.order.status === true && value.order.active === true\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true && value.order.active === true\r\n          )[0].order.status\r\n        : true,\r\n    type:\r\n      dataHeader.filter(\r\n        (value) =>\r\n          value.order.status === true &&\r\n          value.order.active === true &&\r\n          value.order.type !== null\r\n      ).length > 0\r\n        ? dataHeader.filter(\r\n            (value) =>\r\n              value.order.status === true &&\r\n              value.order.active === true &&\r\n              value.order.type !== null\r\n          )[0].order.type\r\n        : null,\r\n  });\r\n  const [filterTable, setFilterTable] = React.useState({});\r\n  const [filterSort, setFilterSort] = React.useState({ filter: {}, sort: {} });\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const generateFilterUrl = (data) => {\r\n    var ret = \"\";\r\n    for (var p in data) {\r\n      if (data[p]) ret += \"filter[\" + p + \"]=\" + data[p] + \"&\";\r\n    }\r\n    return ret;\r\n  };\r\n  const generateSortUrl = (data) => {\r\n    var ret = `${data.name},${\r\n      data.type !== null\r\n        ? data.type\r\n          ? \"asc\"\r\n          : \"desc\"\r\n        : data.order\r\n        ? \"asc\"\r\n        : \"desc\"\r\n    }`;\r\n    return ret;\r\n  };\r\n  const requestFilterSort = React.useCallback(\r\n    (updateFilterTable, updateSortTable) => {\r\n      let pagination = Object.assign({}, paginations);\r\n      let filterSorts = filterSort;\r\n      filterSorts.filter = generateFilterUrl(\r\n        updateFilterTable ? updateFilterTable : filterTable\r\n      );\r\n      filterSorts.sort = generateSortUrl(\r\n        updateSortTable ? updateSortTable : sortData\r\n      );\r\n      pagination.page = pagination.page + 1;\r\n      filterSorts = Object.assign({}, filterSorts, pagination);\r\n      setFilterSort({ ...filterSorts });\r\n      let params =\r\n        filterSorts.filter +\r\n        \"page=\" +\r\n        filterSorts.page +\r\n        \"&rowsPerPage=\" +\r\n        filterSorts.rowsPerPage +\r\n        \"&sort=\" +\r\n        filterSorts.sort;\r\n      if (typeof handleParams === \"function\") handleParams(params);\r\n    },\r\n    [filterTable, sortData, filterSort, intl, paginations]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    let pagination = paginations;\r\n    pagination.numberColum =\r\n      newPage > pagination.page\r\n        ? pagination.numberColum + pagination.rowsPerPage\r\n        : pagination.numberColum - pagination.rowsPerPage;\r\n    pagination.page = newPage;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    let pagination = paginations;\r\n    pagination.page = 0;\r\n    pagination.rowsPerPage = parseInt(event.target.value, 10);\r\n    pagination.numberColum = 0;\r\n    setPaginations({\r\n      ...pagination,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const createSortHandler = (item) => {\r\n    let sortDatas = sortData;\r\n    if (item.name.replace(/\\s/g, \"\") === sortDatas.name) {\r\n      sortDatas.type !== null\r\n        ? (sortDatas.type = !sortDatas.type)\r\n        : (sortDatas.order = !sortDatas.order);\r\n    } else {\r\n      sortDatas.name = item.name.replace(/\\s/g, \"\");\r\n      sortDatas.order = true;\r\n      sortDatas.type = null;\r\n    }\r\n    setSortData({\r\n      ...sortDatas,\r\n    });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const updateValueFilter = (property, type) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = document.getElementById(property).value;\r\n    if (type === \"currency\") {\r\n      filterTables[property] = filterTables[property]\r\n        .replace(/[Rp .]/g, \"\")\r\n        .replace(/[,]/g, \".\");\r\n    } else if (type === \"phone\") {\r\n      filterTables[property] = filterTables[property].replace(/[(+62)_]/g, \"\");\r\n    }\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetValueFilter = (property) => {\r\n    let filterTables = filterTable;\r\n    filterTables[property] = \"\";\r\n    document.getElementById(property).value = \"\";\r\n    setFilterTable({ ...filterTables });\r\n    requestFilterSort();\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setFilterTable({});\r\n    document.getElementById(\"filter-form-all\").reset();\r\n    requestFilterSort({});\r\n  };\r\n\r\n  React.useEffect(requestFilterSort, []);\r\n  React.useEffect(() => {\r\n    setPaginations({ ...paginations, count: countData || 0 });\r\n  }, [countData]);\r\n\r\n  const handleClick = (id) => {\r\n    setAnchorEl(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <form id=\"filter-form-all\" className=\"panel-filter-table mb-1\">\r\n          <span className=\"mr-2 mt-2 float-left\">\r\n            <FormattedMessage id=\"LABEL.FILTER.TABLE\" />\r\n          </span>\r\n          <div className=\"d-block\">\r\n            <div className=\"\">\r\n              {dataHeader\r\n                .filter((value) => value.filter.active === true)\r\n                .map((item, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index.toString()}\r\n                      className=\"btn-group hover-filter-table\"\r\n                      status=\"closed\"\r\n                      id={index}\r\n                    >\r\n                      <div\r\n                        className=\"btn btn-sm dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        id={\"sub-filter-\" + index}\r\n                        onClick={() => {\r\n                          handleClick(index);\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          <FormattedMessage id={item.title} />:\r\n                        </span>\r\n                        <strong style={{ paddingRight: 1, paddingLeft: 1 }}>\r\n                          <span\r\n                            className=\"filter-label\"\r\n                            id={\"filter-span-\" + index}\r\n                          >\r\n                            {item.filter.type === \"currency\" &&\r\n                            filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? rupiah(\r\n                                  Number(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                )\r\n                              : item.filter.type === \"phone\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `(62)${\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                }`\r\n                              : item.filter.type === \"date\" &&\r\n                                filterTable[item.name.replace(/\\s/g, \"\")]\r\n                              ? `${moment(\r\n                                  new Date(\r\n                                    filterTable[item.name.replace(/\\s/g, \"\")]\r\n                                  )\r\n                                ).format(\"DD MMM YYYY\")}`\r\n                              : filterTable[item.name.replace(/\\s/g, \"\")]}\r\n                          </span>\r\n                        </strong>\r\n                        {filterTable[item.name.replace(/\\s/g, \"\")] ? null : (\r\n                          <span style={{ color: \"#777777\" }}>\r\n                            <FormattedMessage id=\"LABEL.ALL\" />\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <Menu\r\n                        anchorEl={\r\n                          document.getElementById(`sub-filter-${anchorEl}`)\r\n                            ? document.getElementById(`sub-filter-${anchorEl}`)\r\n                            : null\r\n                        }\r\n                        keepMounted={false}\r\n                        open={\r\n                          `sub-filter-${index}` === `sub-filter-${anchorEl}`\r\n                        }\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                          style: {\r\n                            transform: \"translateX(0px) translateY(40px)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <div className=\"px-2\">\r\n                          <div className=\"float-left\">\r\n                            {item.filter.type === \"currency\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                thousandSeparator={\".\"}\r\n                                decimalSeparator={\",\"}\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                prefix={\"Rp \"}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : item.filter.type === \"phone\" ? (\r\n                              <NumberFormat\r\n                                value={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                displayType=\"input\"\r\n                                className=\"form-control\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                format=\"(+62)############\"\r\n                                mask=\"_\"\r\n                                allowEmptyFormatting={true}\r\n                                allowLeadingZeros={true}\r\n                                onValueChange={(e) => {}}\r\n                              />\r\n                            ) : (\r\n                              <input\r\n                                type={item.filter.type}\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                name={item.name.replace(/\\s/g, \"\")}\r\n                                id={item.name.replace(/\\s/g, \"\")}\r\n                                defaultValue={\r\n                                  filterTable[item.name.replace(/\\s/g, \"\")] ||\r\n                                  \"\"\r\n                                }\r\n                                placeholder={intl.formatMessage({\r\n                                  id: \"LABEL.ALL\",\r\n                                })}\r\n                                style={{ width: 200 }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-left btn btn-sm btn-primary\"\r\n                              onClick={() => {\r\n                                updateValueFilter(\r\n                                  item.name.replace(/\\s/g, \"\"),\r\n                                  item.filter.type\r\n                                );\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <FormattedMessage id=\"LABEL.UPDATE\" />\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mx-1 float-right btn btn-sm btn-light d-flex\"\r\n                              onClick={() => {\r\n                                resetValueFilter(item.name.replace(/\\s/g, \"\"));\r\n                                handleClose();\r\n                              }}\r\n                            >\r\n                              <i className=\"fas fa-redo fa-right py-1 mx-1\"></i>\r\n                              <span className=\"pt-1\">\r\n                                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </Menu>\r\n                    </div>\r\n                  );\r\n                })}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-danger ml-2 mt-2 button-filter-submit\"\r\n                onClick={() => {\r\n                  resetFilter();\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"LABEL.FILTER.RESET.TABLE\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div>\r\n          <TableContainer component={Paper}>\r\n            <Table className={\"hecto-\" + hecto}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {dataHeader.map((item, index) => {\r\n                    return (\r\n                      <TableCell\r\n                        className={`bg-primary text-uppercase ${\r\n                          item?.td ? item?.td : \"\"\r\n                        }`}\r\n                        key={index.toString()}\r\n                      >\r\n                        {item.order.active ? (\r\n                          <TableSortLabel\r\n                            active={\r\n                              sortData.name === item.name.replace(/\\s/g, \"\")\r\n                            }\r\n                            direction={\r\n                              sortData.type !== null\r\n                                ? sortData.type\r\n                                  ? \"asc\"\r\n                                  : \"desc\"\r\n                                : sortData.order\r\n                                ? \"asc\"\r\n                                : \"desc\"\r\n                            }\r\n                            onClick={() => {\r\n                              createSortHandler(item);\r\n                            }}\r\n                          >\r\n                            <span>\r\n                              <FormattedMessage id={item.title} />\r\n                            </span>\r\n                          </TableSortLabel>\r\n                        ) : (\r\n                          <span>\r\n                            <FormattedMessage id={item.title} />\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{children}</TableBody>\r\n            </Table>\r\n\r\n            <div className=\"table-loading-data\">\r\n              <div className=\"text-center font-weight-bold py-5\">\r\n                <div className=\"table-loading-data-potition\">\r\n                  {loading && (\r\n                    <span>\r\n                      <i className=\"fas fa-spinner fa-pulse text-dark mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.TABLE.WAITING_DATA\" />\r\n                    </span>\r\n                  )}\r\n                  {err && (\r\n                    <span className=\"text-danger\">\r\n                      <i className=\"far fa-frown text-danger mr-1\"></i>\r\n                      <FormattedMessage id=\"LABEL.ERROR_REQUEST\" />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50, 75, 100, 250, 500, 1000]}\r\n            component=\"div\"\r\n            count={paginations.count}\r\n            rowsPerPage={paginations.rowsPerPage}\r\n            page={paginations.page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Tables));\r\n","import axios from \"axios\";\r\n\r\nexport function listPatientPagination(params) {\r\n  return axios.get(`/api/v1/pasien${params ? \"?\" + params : \"\"}`);\r\n}\r\nexport function getDataPatient(id) {\r\n  return axios.get(`/api/v1/pasien/${id}`);\r\n}\r\nexport function updateDataPatient(id, data) {\r\n  return axios.post(`/api/v1/registrasi/${id}`, data);\r\n}\r\nexport function RegisDataPatientOffline(data) {\r\n  return axios.post(`/api/v1/registrasi`, data);\r\n}\r\nexport function listProvince() {\r\n  return axios.get(`/tools/provinsi`);\r\n}\r\nexport function listCity(prov) {\r\n  return axios.get(`/tools/city/${prov}`);\r\n}\r\nexport function listDistricts(prov, city) {\r\n  return axios.get(`/tools/kec/${prov}/${city}`);\r\n}\r\nexport function listWard(prov, city, districts) {\r\n  return axios.get(`/tools/desa/${prov}/${city}/${districts}`);\r\n}\r\nexport function getCetakKartu(id) {\r\n  return axios.get(`/api/v1/cetakkartu/${id}`);\r\n}\r\nexport function listMedicalRecord(patient_id) {\r\n  return axios.get(`/api/v1/pasien/medhist/${patient_id}`);\r\n}\r\nexport function getMedicalRecord(medical_id) {\r\n  return axios.get(`/api/v1/medical/${medical_id}`);\r\n}\r\nexport function getMedicineById(id) {\r\n  return axios.get(`/api/v1/obat/${id}`);\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  // useEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport TableOnly from \"../../../components/tableCustomV1/tableOnly\";\r\nimport { Card, CardBody } from \"../../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { listMedicalRecord } from \"../_redux/CrudPatient\";\r\nimport ButtonAction from \"../../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.DATE_OF_VISIT\",\r\n    name: \"created_at\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.POLI\",\r\n    name: \"poli\",\r\n    filter: true,\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    filter: false,\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction MedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [dataSecond, setDataSecond] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const id = props.match.params.id;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  const callApiListMedical = () => {\r\n    setLoading(true);\r\n    listMedicalRecord(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        var data = result.data.data;\r\n        setData(data);\r\n        setDataSecond(data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiListMedical, []);\r\n\r\n  const handleAction = (type, data) => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      props.history.push(\r\n        `/${position}/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${data.id}`\r\n      );\r\n    } else {\r\n      props.history.push(`/${position}/patient/list/${id}/${data.id}`);\r\n    }\r\n  };\r\n  const handleFilter = (data) => {\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <TableOnly\r\n            dataHeader={headerTable}\r\n            dataSecond={dataSecond}\r\n            handleFilter={handleFilter}\r\n            loading={false}\r\n            hecto={10}\r\n          >\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>\r\n                    {item.created_at\r\n                      ? window\r\n                          .moment(new Date(item.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </TableCell>\r\n                  <TableCell>{item.poli}</TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableOnly>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(MedicalRecord));\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"../../../../_metronic/_partials/controls\";\r\nimport { getMedicalRecord, getMedicineById } from \"../_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\nimport { useSubheader } from \"../../../../_metronic/layout\";\r\nimport { rupiah } from \"../../../components/currency\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction DetailMedicalRecord(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const [Lab, setLab] = useState({});\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  const [dataScreening, setDataScreening] = useState([]);\r\n  const id = props.match.params.id;\r\n  const medicalRecordId = props.match.params.medicalRecordId;\r\n  const medicalRecordIdPass = props.match.params.medicalRecordIdPass;\r\n  const antrian_id = props.match.params.antrian_id;\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const [dataMedicine, setDataMedicine] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (window.location.pathname.split(\"/\")[2] === \"handling-page\") {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/doctor/dashboard`,\r\n          title: intl.formatMessage({ id: \"MENU.DASHBOARD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/doctor/handling-page/process/${id}/${antrian_id}/${medicalRecordId}/list/${medicalRecordIdPass}`,\r\n          title: intl.formatMessage({ id: \"LABEL.DATA\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.DATA\" }));\r\n    } else {\r\n      suhbeader.setBreadcrumbs([\r\n        {\r\n          pathname: `/${position}/patient/list`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}`,\r\n          title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n        },\r\n        {\r\n          pathname: `/${position}/patient/list/${id}/${medicalRecordId}`,\r\n          title: intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }),\r\n        },\r\n      ]);\r\n      suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.MEDICAL_RECORD\" }));\r\n    }\r\n  }, []);\r\n\r\n  const callApiGetMedical = () => {\r\n    setLoading(true);\r\n    getMedicalRecord(\r\n      window.location.pathname.split(\"/\")[2] === \"handling-page\"\r\n        ? medicalRecordIdPass\r\n        : medicalRecordId\r\n    )\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData(result.data.data.form[0]);\r\n        setDataScreening(result.data.data.screen);\r\n        setLab(result.data.data.labs ? result.data.data.labs : {});\r\n        callApiGetMedicine(\r\n          result.data.data.resep ? result.data.data.resep : []\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiGetMedical, []);\r\n\r\n  async function callApiGetMedicine(dataMedicinePatient) {\r\n    var data = dataMedicinePatient;\r\n    var waiting = new Promise(async (resolve, reject) => {\r\n      for (let i = 0; i < data.length; i++) {\r\n        try {\r\n          var result = await getMedicineById(data[i].id);\r\n          data[i].composite_item = result.data.data.composite_item;\r\n          data[i].qty = data[i].qty ? data[i].qty : 1;\r\n          if (i === data.length - 1) resolve();\r\n        } catch (error) {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n          if (i === data.length - 1) resolve();\r\n        }\r\n      }\r\n    });\r\n    await waiting;\r\n    setDataMedicine(data);\r\n  }\r\n\r\n  const countSubTotal = (data) => {\r\n    var count = 0;\r\n    data.map((item) => {\r\n      count += item.harga * item.qty;\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-hospital-user h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">\r\n                    Nomor Kunjungan: {data.code_reg}\r\n                  </h3>\r\n                  <span className=\"text-muted\">\r\n                    {data.created_at\r\n                      ? window\r\n                          .moment(new Date(data.created_at))\r\n                          .format(\"DD MMM YYYY\")\r\n                      : \"\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-nurse h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.pasien}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card card-custom wave wave-animate-fast wave-primary gutter-b\">\r\n            <div className=\"card-body\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"symbol symbol-40 symbol-light-danger mr-5\">\r\n                  <span className=\"symbol-label\">\r\n                    <i className=\"fas fa-user-md h-75 align-self-end font-size-h1\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"d-flex flex-column flex-grow-1 font-weight-bold\">\r\n                  <h3 className=\"text-dark mb-1\">{data.dokter}</h3>\r\n                  <span className=\"text-muted\">{data.poli}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Screening Data\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                {dataScreening.map((item, index) => {\r\n                  return (\r\n                    <div key={index.toString()} className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label>{item.label_kind}</label>\r\n                        {item.datatype === 1 ||\r\n                        item.datatype === 2 ||\r\n                        item.datatype === 3 ||\r\n                        item.datatype === 4 ? (\r\n                          <input\r\n                            type={\r\n                              item.datatype === 1\r\n                                ? \"text\"\r\n                                : item.datatype === 2 || item.datatype === 3\r\n                                ? \"number\"\r\n                                : \"date\"\r\n                            }\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          />\r\n                        ) : (\r\n                          <textarea\r\n                            rows=\"3\"\r\n                            className=\"form-control\"\r\n                            id={(item.label_kind + item.id)\r\n                              .match(/[a-zA-Z0-9]+/g)\r\n                              .join(\"\")}\r\n                            value={item.val_desc}\r\n                            onChange={() => {}}\r\n                            disabled={true}\r\n                          ></textarea>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Resep Yang Diberikan\"></CardHeader>\r\n            <CardBody>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Nama Obat</th>\r\n                    <th>Unit</th>\r\n                    <th>Harga</th>\r\n                    <th>Sub Total</th>\r\n                  </tr>\r\n                </thead>\r\n                {dataMedicine.map((item, index) => {\r\n                  return (\r\n                    <tbody key={index.toString()}>\r\n                      <tr>\r\n                        <td>{item.nama}</td>\r\n                        <td>\r\n                          <NumberFormat\r\n                            value={item.qty}\r\n                            id=\"NumberFormat-text\"\r\n                            displayType=\"text\"\r\n                            className=\"form-control\"\r\n                            allowEmptyFormatting={true}\r\n                            allowLeadingZeros={false}\r\n                            allowNegative={false}\r\n                            onValueChange={(e) => {\r\n                              var data = Object.assign([], dataMedicine);\r\n                              var idx = data.findIndex(\r\n                                (value) => value.id === item.id\r\n                              );\r\n                              data[idx].qty = e.floatValue ? e.floatValue : 0;\r\n                              setDataMedicine(data);\r\n                            }}\r\n                          />\r\n                        </td>\r\n                        <td>{rupiah(item.harga)}</td>\r\n                        <td>{rupiah(item.harga * item.qty)}</td>\r\n                        {/* <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            style={{ width: 25, height: 25 }}\r\n                            onChange={(e) => {\r\n                              var data = Object.assign([], preOrder);\r\n                              if (e.target.checked) {\r\n                                data.push(item);\r\n                              } else {\r\n                                var idx = data.findIndex(\r\n                                  (value) => value.id === item.id\r\n                                );\r\n                                data.splice(idx, 1);\r\n                              }\r\n                              setPreOrder(data);\r\n                            }}\r\n                            disabled={loadingSubmit}\r\n                          />\r\n                        </td> */}\r\n                      </tr>\r\n                      {item.composite_item &&\r\n                        item.composite_item.map((value, idx) => {\r\n                          return (\r\n                            <tr\r\n                              key={idx.toString()}\r\n                              style={{ backgroundColor: \"#F3F6F9\" }}\r\n                            >\r\n                              <td className=\"pl-10\">{value.nama}</td>\r\n                              <td>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  className=\"form-control\"\r\n                                  value={value.qty}\r\n                                  onChange={() => {}}\r\n                                  disabled\r\n                                />\r\n                              </td>\r\n                              <td>{rupiah(0)}</td>\r\n                              <td>{rupiah(0)}</td>\r\n                              {/* <td></td> */}\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                    </tbody>\r\n                  );\r\n                })}\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Biaya Penanganan</th>\r\n                    <th>\r\n                      <NumberFormat\r\n                        value={data.fee || 0}\r\n                        id=\"NumberFormat-text\"\r\n                        displayType=\"text\"\r\n                        className=\"form-control\"\r\n                        allowEmptyFormatting={true}\r\n                        allowLeadingZeros={true}\r\n                        thousandSeparator={true}\r\n                        allowNegative={false}\r\n                        prefix={\"Rp \"}\r\n                        fixedDecimalScale={true}\r\n                        decimalScale={2}\r\n                        onValueChange={(e) => {}}\r\n                      />\r\n                    </th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th colSpan=\"2\"></th>\r\n                    <th>Total</th>\r\n                    <td>\r\n                      {rupiah((data.fee || 0) + countSubTotal(dataMedicine))}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <Card>\r\n            <CardHeader title=\"Labs\"></CardHeader>\r\n            <CardBody>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hemoglobin (HB)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hb}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Hepatitis B Surface Antigen (HBsAg)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hbsag}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Human Immunodeficiency Virus (HIV)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.hiv}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Raja Singa (Sifilis)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.sifilis}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Asam Urat</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.asam_urat}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Kolestrol</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.kolesterol}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gelongan Darah</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.gol_dar}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Plano Test (PP Test)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.pp_test}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Protein Urine</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.protein_urine}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>PH</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.ph}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label>Gula Darah (Glucose)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      disabled={true}\r\n                      value={Lab?.glukosa}\r\n                      onChange={() => {}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(DetailMedicalRecord));\r\n","import React, {\r\n  useState,\r\n  useLayoutEffect,\r\n  // useCallback\r\n} from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Tables from \"../../components/tableCustomV1/table\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { TableRow, TableCell } from \"@material-ui/core\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { listPatientPagination } from \"./_redux/CrudPatient\";\r\nimport ButtonAction from \"../../components/buttonAction/ButtonAction\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\n\r\nconst headerTable = [\r\n  {\r\n    title: \"LABEL.PATIENT_CODE\",\r\n    name: \"kode_pasien\",\r\n    order: {\r\n      active: true,\r\n      status: true,\r\n      type: true,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PATIENT_NAME\",\r\n    name: \"nama\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.REGISTRATION_DATE\",\r\n    name: \"created_at\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"date\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.ADDRESS\",\r\n    name: \"kota\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.PHONE_NUMBER\",\r\n    name: \"no_telp\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"phone\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.EMAIL\",\r\n    name: \"email\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: true,\r\n      type: \"email\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.GENDER\",\r\n    name: \"jk\",\r\n    order: {\r\n      active: true,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n  {\r\n    title: \"LABEL.TABLE_HEADER.ACTION\",\r\n    name: \"action\",\r\n    order: {\r\n      active: false,\r\n      status: false,\r\n    },\r\n    filter: {\r\n      active: false,\r\n      type: \"text\",\r\n    },\r\n  },\r\n];\r\n\r\nconst data_ops = [\r\n  {\r\n    label: \"LABEL.DETAIL\",\r\n    icon: \"fas fa-external-link-alt text-primary\",\r\n    type: \"open\",\r\n  },\r\n];\r\n\r\nfunction ListPatientPage(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    count: 0,\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const suhbeader = useSubheader();\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }));\r\n  }, []);\r\n\r\n  const requestApi = (params) => {\r\n    setLoading(true);\r\n    setData({\r\n      ...data,\r\n      count: 0,\r\n      data: [],\r\n    });\r\n    setErr(false);\r\n    listPatientPagination(params)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setData({\r\n          ...data,\r\n          count: result.data.data.count || 0,\r\n          data: result.data.data.rows,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setErr(true);\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const handleAction = (type, data) => {\r\n    props.history.push(`/${position}/patient/list/${data.id}`);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Tables\r\n            dataHeader={headerTable}\r\n            handleParams={requestApi}\r\n            loading={loading}\r\n            err={err}\r\n            countData={data.count}\r\n            hecto={13}\r\n          >\r\n            {data.data.map((item, index) => {\r\n              return (\r\n                <TableRow key={index.toString()}>\r\n                  <TableCell>{item.kode_pasien}</TableCell>\r\n                  <TableCell>{item?.nama}</TableCell>\r\n                  <TableCell>\r\n                    {window\r\n                      .moment(new Date(item?.created_at))\r\n                      .format(\"DD MMM YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>{item?.kota}</TableCell>\r\n                  <TableCell>{item?.no_telp}</TableCell>\r\n                  <TableCell>{item?.email}</TableCell>\r\n                  <TableCell>\r\n                    {item?.jk === \"L\" ? \"Laki-Laki\" : \"Perempuan\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <ButtonAction\r\n                      data={item}\r\n                      handleAction={handleAction}\r\n                      ops={data_ops}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </Tables>\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(ListPatientPage));\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0px -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0px -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0px -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst initialNavLists = [\r\n  { id: \"link-item-1\", label: \"Item 1\" },\r\n  { id: \"link-item-2\", label: \"Item 2\" },\r\n  { id: \"link-item-3\", label: \"Item 3\" },\r\n];\r\n\r\nexport default function Navs({\r\n  navLists = initialNavLists,\r\n  defaultActiveKey = navLists[0].id,\r\n  handleSelect,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Nav\r\n      variant=\"pills\"\r\n      defaultActiveKey={defaultActiveKey}\r\n      onSelect={handleSelect}\r\n      {...other}\r\n    >\r\n      {navLists.map((item) => (\r\n        <Nav.Item key={item.id}>\r\n          <Nav.Link eventKey={item.id} style={{ fontWeight: 500 }}>\r\n            <FormattedMessage id={item.label} />\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      ))}\r\n    </Nav>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  getDataPatient,\r\n  updateDataPatient,\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"./_redux/CrudPatient\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport Navs from \"../../components/navs\";\r\nimport MedicalRecord from \"./patientPages/MedicalRecord\";\r\nimport Select from \"react-select\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\r\n\r\nconst navLists = [\r\n  {\r\n    id: \"1\",\r\n    label: \"LABEL.MEDICAL_RECORD\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    label: \"LABEL.LAB_HISTORY\",\r\n  },\r\n];\r\n\r\nconst optionParameter = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterGender = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  bigAvatar: {\r\n    marginBottom: 30,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n});\r\n\r\nfunction PatientPage(props) {\r\n  const { intl } = props;\r\n  const suhbeader = useSubheader();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\r\n  const [statusForm, setStatusForm] = useState(true);\r\n  const [dataForm, setDataForm] = useState({});\r\n  const [navActive, setNavActive] = useState(navLists[0].id);\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterGender, setSelectedParameterGender] = useState({});\r\n  const [nama, setNama] = useState(\"\");\r\n  const [ktp, setKtp] = useState(\"\");\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [statusData, setStatusData] = useState({\r\n    prov: true,\r\n    kota: true,\r\n    kec: true,\r\n    kel: true,\r\n  });\r\n  let id_user = useSelector((state) => state.auth.user.id, shallowEqual);\r\n  let position = useSelector((state) => state.auth.user.position, shallowEqual);\r\n  const id = props.match.params.id;\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/${position}/patient/list`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT_LIST\" }),\r\n      },\r\n      {\r\n        pathname: `/${position}/patient/list/${id}`,\r\n        title: intl.formatMessage({ id: \"LABEL.PATIENT\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.PATIENT\" }));\r\n  }, []);\r\n\r\n  const callApiDataPatient = () => {\r\n    setLoading(true);\r\n    getDataPatient(id)\r\n      .then((result) => {\r\n        setLoading(false);\r\n        setDataForm(result.data.data);\r\n        setNama(result.data.data.nama);\r\n        setKtp(result.data.data.ktpno);\r\n        var statusIndex = optionParameter.findIndex(\r\n          (item) => item.value === result.data.data.status_nikah\r\n        );\r\n        setSelectedParameter(optionParameter[statusIndex]);\r\n        var genderIndex = optionParameterGender.findIndex(\r\n          (item) => item.value === result.data.data.jk\r\n        );\r\n        setSelectedParameterGender(optionParameterGender[genderIndex]);\r\n\r\n        if (result.data.data?.pendidikan) {\r\n          var statusIndex = optionParameterEducation.findIndex(\r\n            (item) => item.value === result.data.data?.pendidikan\r\n          );\r\n          setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n        }\r\n        if (result.data.data?.pekerjaan) {\r\n          var statusIndex = optionParameterProfession.findIndex(\r\n            (item) => item.value === result.data.data?.pekerjaan\r\n          );\r\n          setSelectedParameterProfession(\r\n            optionParameterProfession[statusIndex]\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  useEffect(callApiDataPatient, []);\r\n\r\n  const saveData = (e) => {\r\n    e.preventDefault();\r\n    setLoadingUpdate(true);\r\n    let newParams = new FormData();\r\n    var data = Object.assign({}, dataForm);\r\n    data.pendidikan = selectedParameterEducation.value;\r\n    data.pekerjaan = selectedParameterProfession.value;\r\n    data.email = data.email.trim() === \"\" ? null : data.email;\r\n    Object.keys(data).forEach((element) => {\r\n      if (element !== \"photo_pasien\")\r\n        newParams.append(element, dataForm[element]);\r\n    });\r\n    updateDataPatient(id, newParams)\r\n      .then((result) => {\r\n        setLoadingUpdate(false);\r\n        setStatusForm(!statusForm);\r\n        setNama(dataForm.nama);\r\n        setKtp(dataForm.ktpno);\r\n        MODAL.showSnackbar(\r\n          intl.formatMessage({ id: \"LABEL.UPDATE_DATA_SUCCESS\" }),\r\n          \"success\"\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setLoadingUpdate(false);\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListProvince = () => {\r\n    if (optionParameterProvince.length === 0) {\r\n      listProvince()\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterProvince(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      if (dataForm?.prov) {\r\n        var statusIndex = optionParameterProvince.findIndex(\r\n          (item) => item.value === Number(dataForm?.prov)\r\n        );\r\n        if (statusIndex !== -1)\r\n          setSelectedParameterProvince(optionParameterProvince[statusIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince?.value) {\r\n      setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n          if (statusData?.kota) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kota\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterCity(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity?.value) {\r\n      setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n          if (statusData?.kec) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kec\r\n            );\r\n            if (statusIndex !== -1)\r\n              setSelectedParameterDistricts(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts?.value) {\r\n      setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n          if (statusData?.kel) {\r\n            var statusIndex = data.findIndex(\r\n              (item) => item.value === dataForm?.kel\r\n            );\r\n            if (statusIndex !== -1) setSelectedParameterWard(data[statusIndex]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [dataForm]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LinearProgress />}\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"d-flex\">\r\n                <Avatar\r\n                  alt=\"Foto\"\r\n                  src={\r\n                    dataForm?.photo_pasien\r\n                      ? `${hostBase()}/storage/app/photo_pasien/${\r\n                          dataForm?.photo_pasien\r\n                        }`\r\n                      : toAbsoluteUrl(\"/media/svg/avatars/004-boy-1.svg\")\r\n                  }\r\n                  className={classes.bigAvatar}\r\n                />\r\n                <div className=\"py-5\">\r\n                  <h1>{nama}</h1>\r\n                  <h6>{ktp}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 text-md-right\">\r\n              <a\r\n                className=\"btn btn-danger\"\r\n                href={`${hostBase()}/api/v1/cetakkartu/${id}`}\r\n                target=\"_blankk\"\r\n              >\r\n                <i className=\"fas fa-print px-1\"></i>\r\n                Cetak Kartu\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <form autoComplete=\"off\" id=\"formData\" onSubmit={saveData}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor KTP</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.ktpno}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          ktpno: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tempar Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-street-view\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Tempar Lahir\"\r\n                      value={dataForm?.tempat_lahir || \"\"}\r\n                      disabled={statusForm || loadingUpdate}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tempat_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Jenis Kelamin</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-venus-mars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterGender}\r\n                      options={optionParameterGender}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameterGender(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          jk: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-mobile-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_telp}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_telp: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>No Kartu Keluarga</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-id-card\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.no_kk}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"################\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          no_kk: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pendidikan Terakhir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-school\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterEducation}\r\n                      options={optionParameterEducation}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterEducation(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pendidikan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Pekerjaan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-briefcase\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProfession}\r\n                      options={optionParameterProfession}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProfession(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          pekerjaan: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.nama || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          nama: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Tanggal Lahir</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-baby\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.tgl_lahir || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          tgl_lahir: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Status</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-house-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameter}\r\n                      options={optionParameter}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      // styles={customStyles}\r\n                      onChange={(value) => {\r\n                        setSelectedParameter(value);\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          status_nikah: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Email</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-at\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.email || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          email: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Provinsi</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterProvince}\r\n                      options={optionParameterProvince}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterProvince(value);\r\n                        setSelectedParameterCity({});\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, prov: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          prov: value.value,\r\n                          kota: null,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kota/Kabupaten</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterCity}\r\n                      options={optionParameterCity}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterCity(value);\r\n                        setSelectedParameterDistricts({});\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kota: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kota: value.value,\r\n                          kec: null,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kecamatan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterDistricts}\r\n                      options={optionParameterDistricts}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterDistricts(value);\r\n                        setSelectedParameterWard({});\r\n                        setStatusData({ ...statusData, kec: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kec: value.value,\r\n                          kel: null,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Kelurahan/Desa</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marker\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      value={selectedParameterWard}\r\n                      options={optionParameterWard}\r\n                      isDisabled={statusForm || loadingUpdate}\r\n                      className=\"form-control border-0 p-0 h-100\"\r\n                      classNamePrefix=\"react-select\"\r\n                      onChange={(value) => {\r\n                        setSelectedParameterWard(value);\r\n                        setStatusData({ ...statusData, kel: false });\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          kel: value.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Alamat</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-map-marked-alt\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <textarea\r\n                      rows=\"5\"\r\n                      className=\"form-control\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.alamat || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          alamat: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h3>Kontak Darurat</h3>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nama Lengkap</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nama Lengkap\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Hubungan</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Hubungan\"\r\n                      disabled={statusForm || loadingUpdate}\r\n                      value={dataForm?.partner_status || \"\"}\r\n                      onChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_status: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mx-5 mb-5\">\r\n                  <label>Nomor Phone</label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\" style={{ width: 45 }}>\r\n                        <i className=\"fas fa-user-shield\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <NumberFormat\r\n                      id={\r\n                        statusForm || loadingUpdate\r\n                          ? \"NumberFormat-text\"\r\n                          : \"NumberFormat-input\"\r\n                      }\r\n                      value={dataForm?.partner_tel}\r\n                      displayType={\r\n                        statusForm || loadingUpdate ? \"text\" : \"input\"\r\n                      }\r\n                      className=\"form-control\"\r\n                      format=\"+62 ###-###-###-####\"\r\n                      mask=\"_\"\r\n                      allowEmptyFormatting={true}\r\n                      allowLeadingZeros={true}\r\n                      onValueChange={(e) => {\r\n                        setDataForm({\r\n                          ...dataForm,\r\n                          partner_tel: e.floatValue,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-primary mx-1 ${\r\n                    !statusForm || (position !== \"registry\" && \"d-none\")\r\n                  }`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-edit\"></i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className={`btn btn-success mx-1 ${statusForm && \"d-none\"}`}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  {loadingUpdate ? (\r\n                    <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-save\"></i>\r\n                  )}\r\n\r\n                  {loadingUpdate ? (\r\n                    <FormattedMessage id=\"LABEL.WAITING\" />\r\n                  ) : (\r\n                    <span>Simpan</span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`btn btn-danger mx-1 ${statusForm && \"d-none\"}`}\r\n                  onClick={() => {\r\n                    setStatusForm(!statusForm);\r\n                    callApiDataPatient();\r\n                  }}\r\n                  disabled={loadingUpdate}\r\n                >\r\n                  <i className=\"far fa-times-circle\"></i>\r\n                  <span>Batal</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      <Card>\r\n        <CardBody>\r\n          <Navs\r\n            navLists={navLists}\r\n            defaultActiveKey={navActive}\r\n            handleSelect={(selectedKey) => setNavActive(selectedKey)}\r\n          />\r\n\r\n          {navActive === \"1\" && (\r\n            <div className=\"my-5 py-5 h-100\">\r\n              <MedicalRecord {...props} />\r\n            </div>\r\n          )}\r\n          {navActive === \"2\" && <div className=\"my-5 py-5 h-100\">riwayat</div>}\r\n        </CardBody>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(PatientPage));\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto'\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      marginLeft: 12,\n      // half icon\n      padding: '0 0 8px'\n    },\n\n    /* Styles applied to the root element if `alternativeLabel={true}`. */\n    alternativeLabel: {\n      position: 'absolute',\n      top: 8 + 4,\n      left: 'calc(-50% + 20px)',\n      right: 'calc(50% + 20px)'\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the line element. */\n    line: {\n      display: 'block',\n      borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    lineHorizontal: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    lineVertical: {\n      borderLeftStyle: 'solid',\n      borderLeftWidth: 1,\n      minHeight: 24\n    }\n  };\n};\nvar StepConnector = React.forwardRef(function StepConnector(props, ref) {\n  var active = props.active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      classes = props.classes,\n      className = props.className,\n      completed = props.completed,\n      disabled = props.disabled,\n      index = props.index,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"classes\", \"className\", \"completed\", \"disabled\", \"index\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.line, {\n      'horizontal': classes.lineHorizontal,\n      'vertical': classes.lineVertical\n    }[orientation])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepConnector'\n})(StepConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\nvar Stepper = React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var connector = React.isValidElement(connectorProp) ? React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && React.cloneElement(connector, _extends({\n      key: index\n    }, state)), React.cloneElement(step, _extends(_extends(_extends({}, controlProps), state), step.props))];\n  });\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * An element to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nvar Step = React.forwardRef(function Step(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      connector = props.connector,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$expanded = props.expanded,\n      expanded = _props$expanded === void 0 ? false : _props$expanded,\n      index = props.index,\n      last = props.last,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"connector\", \"disabled\", \"expanded\", \"index\", \"last\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 && React.cloneElement(connector, {\n    orientation: orientation,\n    alternativeLabel: alternativeLabel,\n    index: index,\n    active: active,\n    completed: completed,\n    disabled: disabled\n  }), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Step component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.cloneElement(child, _extends({\n      active: active,\n      alternativeLabel: alternativeLabel,\n      completed: completed,\n      disabled: disabled,\n      expanded: expanded,\n      last: last,\n      icon: index + 1,\n      orientation: orientation\n    }, child.props));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   */\n  expanded: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport withStyles from '../styles/withStyles';\nimport SvgIcon from '../SvgIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      color: theme.palette.text.disabled,\n      '&$completed': {\n        color: theme.palette.primary.main\n      },\n      '&$active': {\n        color: theme.palette.primary.main\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the SVG text element. */\n    text: {\n      fill: theme.palette.primary.contrastText,\n      fontSize: theme.typography.caption.fontSize,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {}\n  };\n};\n\nvar _ref = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nvar StepIcon = React.forwardRef(function StepIcon(props, ref) {\n  var _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      icon = props.icon,\n      _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      classes = props.classes;\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    var className = clsx(classes.root, active && classes.active, error && classes.error, completed && classes.completed);\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    if (completed) {\n      return /*#__PURE__*/React.createElement(CheckCircle, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SvgIcon, {\n      className: className,\n      ref: ref\n    }, _ref, /*#__PURE__*/React.createElement(\"text\", {\n      className: classes.text,\n      x: \"12\",\n      y: \"16\",\n      textAnchor: \"middle\"\n    }, icon));\n  }\n\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepIcon'\n})(StepIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport StepIcon from '../StepIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      '&$alternativeLabel': {\n        flexDirection: 'column'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {},\n\n    /* Styles applied to the `Typography` component which wraps `children`. */\n    label: {\n      color: theme.palette.text.secondary,\n      '&$active': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$completed': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$alternativeLabel': {\n        textAlign: 'center',\n        marginTop: 16\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Pseudo-class applied to the `Typography` component if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the `Typography` component if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the `icon` container element. */\n    iconContainer: {\n      flexShrink: 0,\n      // Fix IE 11 issue\n      display: 'flex',\n      paddingRight: 8,\n      '&$alternativeLabel': {\n        paddingRight: 0\n      }\n    },\n\n    /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */\n    alternativeLabel: {},\n\n    /* Styles applied to the container element which wraps `Typography` and `optional`. */\n    labelContainer: {\n      width: '100%'\n    }\n  };\n};\nvar StepLabel = React.forwardRef(function StepLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      expanded = props.expanded,\n      icon = props.icon,\n      last = props.last,\n      optional = props.optional,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      StepIconComponentProp = props.StepIconComponent,\n      StepIconProps = props.StepIconProps,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"error\", \"expanded\", \"icon\", \"last\", \"optional\", \"orientation\", \"StepIconComponent\", \"StepIconProps\"]);\n\n  var StepIconComponent = StepIconComponentProp;\n\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),\n    ref: ref\n  }, other), icon || StepIconComponent ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.iconContainer, alternativeLabel && classes.alternativeLabel)\n  }, /*#__PURE__*/React.createElement(StepIconComponent, _extends({\n    completed: completed,\n    active: active,\n    error: error,\n    icon: icon\n  }, StepIconProps))) : null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.labelContainer\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    className: clsx(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error),\n    display: \"block\"\n  }, children), optional));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * The component to render in place of the [`StepIcon`](/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`StepIcon`](/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default withStyles(styles, {\n  name: 'MuiStepLabel'\n})(StepLabel);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Stepper, Step, StepLabel } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\nfunction getSteps() {\r\n  return [\r\n    {\r\n      label: \"Data 1\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 2\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 3\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 4\",\r\n      status: \"COMPLETE\",\r\n    },\r\n    {\r\n      label: \"Data 5\",\r\n      status: \"ON PROGRESS\",\r\n    },\r\n    {\r\n      label: \"Data 6\",\r\n      status: \"NO STARTED\",\r\n    },\r\n    {\r\n      label: \"Data 7\",\r\n      status: \"NO STARTED\",\r\n    },\r\n  ];\r\n}\r\n\r\nconst Steppers = (props) => {\r\n  const { intl, steps = getSteps() } = props;\r\n//  const [activeStep, setActiveStep] = React.useState(null);\r\n//  React.useEffect(() => {\r\n//    setActiveStep(\r\n//      steps.findIndex((item) => {\r\n//        return item.status === \"ON PROGRESS\";\r\n//      })\r\n//    );\r\n//  }, [steps]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {steps && steps.length > 0 && (\r\n        <Stepper alternativeLabel>\r\n          {steps.map((item, index) => (\r\n            <Step\r\n              key={index.toString()}\r\n              completed={item.status === \"COMPLETE\" ? true : false}\r\n              active={item.status === \"ON PROGRESS\" ? true : false}\r\n            >\r\n              <StepLabel>{item.label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default injectIntl(connect(null, null)(Steppers));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst optionParameter = [\r\n  { value: \"L\", label: \"Laki-Laki\" },\r\n  { value: \"P\", label: \"Perempuan\" },\r\n];\r\n\r\nconst optionParameterStatus = [\r\n  { value: \"2\", label: \"Lajang\" },\r\n  { value: \"1\", label: \"Menikah\" },\r\n  { value: \"3\", label: \"Duda/Janda\" },\r\n];\r\n\r\nconst optionParameterEducation = [\r\n  { value: \"Tidak Sekolah\", label: \"Tidak Sekolah\" },\r\n  { value: \"Sekolah Dasar\", label: \"Sekolah Dasar\" },\r\n  { value: \"Sekolah Menengah Pertama\", label: \"Sekolah Menengah Pertama\" },\r\n  { value: \"Sekolah Menengah Atas\", label: \"Sekolah Menengah Atas\" },\r\n  { value: \"Diploma\", label: \"Diploma\" },\r\n  { value: \"Sarjana\", label: \"Sarjana\" },\r\n  { value: \"Magister\", label: \"Magister\" },\r\n  { value: \"Doktor\", label: \"Doktor\" },\r\n];\r\n\r\nconst optionParameterProfession = [\r\n  { value: \"Tidak Berkerja\", label: \"Tidak Berkerja\" },\r\n  { value: \"Pelajar/Mahasiswa\", label: \"Pelajar/Mahasiswa\" },\r\n  { value: \"Ibu Rumah Tangga\", label: \"Ibu Rumah Tangga\" },\r\n  { value: \"Harian Lepas\", label: \"Harian Lepas\" },\r\n  { value: \"Karyawan Swasta\", label: \"Karyawan Swasta\" },\r\n  { value: \"PNS\", label: \"PNS\" },\r\n  { value: \"Pengusaha\", label: \"Pengusaha\" },\r\n  { value: \"Freelance\", label: \"Freelance\" },\r\n];\r\n\r\nfunction Information(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataInformation = {},\r\n    handleData,\r\n    handleStatus,\r\n  } = props;\r\n  const [selectedParameter, setSelectedParameter] = useState({});\r\n  const [selectedParameterStatus, setSelectedParameterStatus] = useState({});\r\n  const [selectedParameterEducation, setSelectedParameterEducation] = useState(\r\n    {}\r\n  );\r\n  const [selectedParameterProfession, setSelectedParameterProfession] =\r\n    useState({});\r\n\r\n  const Schema = Yup.object().shape({\r\n    nama: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tempat_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    tgl_lahir: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    jk: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    status_nikah: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    email: Yup.string(),\r\n    no_kk: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    ktpno: Yup.string()\r\n      .min(16, \"Minimal 16 digit Angka\")\r\n      .required(\r\n        intl.formatMessage({\r\n          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n        })\r\n      ),\r\n    pekerjaan: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    no_telp: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataInformation,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      // setLoading(true);\r\n      handleData(values);\r\n      handleStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleProgress(0, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(0, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataInformation).length > 0)\r\n      formik.setFieldTouched(\"nama\", true);\r\n    if (dataInformation?.jk) {\r\n      var statusIndex = optionParameter.findIndex(\r\n        (item) => item.value === dataInformation?.jk\r\n      );\r\n      setSelectedParameter(optionParameter[statusIndex]);\r\n    }\r\n    if (dataInformation?.status_nikah) {\r\n      var statusIndex = optionParameterStatus.findIndex(\r\n        (item) => item.value === dataInformation?.status_nikah\r\n      );\r\n      setSelectedParameterStatus(optionParameterStatus[statusIndex]);\r\n    }\r\n    if (dataInformation?.pendidikan) {\r\n      var statusIndex = optionParameterEducation.findIndex(\r\n        (item) => item.value === dataInformation?.pendidikan\r\n      );\r\n      setSelectedParameterEducation(optionParameterEducation[statusIndex]);\r\n    }\r\n    if (dataInformation?.pekerjaan) {\r\n      var statusIndex = optionParameterProfession.findIndex(\r\n        (item) => item.value === dataInformation?.pekerjaan\r\n      );\r\n      setSelectedParameterProfession(optionParameterProfession[statusIndex]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Informasi Umum</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"nama\")}\r\n                />\r\n                {formik.touched.nama && formik.errors.nama && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.nama}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tempat Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tempat Lahir\"\r\n                  required\r\n                  {...formik.getFieldProps(\"tempat_lahir\")}\r\n                />\r\n                {formik.touched.tempat_lahir && formik.errors.tempat_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tempat_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Tanggal Lahir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Tanggal Lahir\"\r\n                  max={window.moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  required\r\n                  {...formik.getFieldProps(\"tgl_lahir\")}\r\n                />\r\n                {formik.touched.tgl_lahir && formik.errors.tgl_lahir && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.tgl_lahir}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Jenis Kelamin<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameter}\r\n                  options={optionParameter}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameter(value);\r\n                    formik.setFieldValue(\"jk\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Status<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterStatus}\r\n                  options={optionParameterStatus}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterStatus(value);\r\n                    formik.setFieldValue(\"status_nikah\", value.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">Email</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.email}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Kartu Keluarga<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_kk}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_kk: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_kk\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_kk\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_kk && formik.errors.no_kk && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_kk}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor KTP<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.ktpno}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"################\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        ktpno: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"ktpno\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"ktpno\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.ktpno && formik.errors.ktpno && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.ktpno}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pendidikan Terakhir<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterEducation}\r\n                  options={optionParameterEducation}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterEducation(value);\r\n                    formik.setFieldValue(\"pendidikan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pendidikan && formik.errors.pendidikan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pendidikan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Pekerjaan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <Select\r\n                  value={selectedParameterProfession}\r\n                  options={optionParameterProfession}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setSelectedParameterProfession(value);\r\n                    formik.setFieldValue(\"pekerjaan\", value.value);\r\n                  }}\r\n                />\r\n                {formik.touched.pekerjaan && formik.errors.pekerjaan && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.pekerjaan}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-4 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-8\">\r\n                <NumberFormat\r\n                  value={formik.values?.no_telp}\r\n                  displayType=\"input\"\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        no_telp: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"no_telp\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"no_telp\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.no_telp && formik.errors.no_telp && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.no_telp}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" disabled>\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Information));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  // FormattedMessage,\r\n  injectIntl,\r\n} from \"react-intl\";\r\nimport {\r\n  listProvince,\r\n  listCity,\r\n  listDistricts,\r\n  listWard,\r\n} from \"../_redux/CrudPatient\";\r\nimport Select from \"react-select\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { MODAL } from \"../../../../service/modalSession/ModalService\";\r\n\r\nfunction Address(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataAddress = {},\r\n    handleData,\r\n    handleStatus,\r\n    statusAddress = false,\r\n  } = props;\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedParameterProvince, setSelectedParameterProvince] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterProvince, setOptionParameterProvince] = useState([]);\r\n  const [selectedParameterCity, setSelectedParameterCity] = useState({});\r\n  const [optionParameterCity, setOptionParameterCity] = useState([]);\r\n  const [selectedParameterDistricts, setSelectedParameterDistricts] = useState(\r\n    {}\r\n  );\r\n  const [optionParameterDistricts, setOptionParameterDistricts] = useState([]);\r\n  const [selectedParameterWard, setSelectedParameterWard] = useState({});\r\n  const [optionParameterWard, setOptionParameterWard] = useState([]);\r\n  const [status, setStatus] = useState(statusAddress);\r\n\r\n  const Schema = Yup.object().shape({\r\n    alamat: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    prov: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kota: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kec: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    kel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataAddress,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n      setStatus(true);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 1, \"COMPLETE\");\r\n      handleProgress(1, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(1, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataAddress).length > 0)\r\n      formik.setFieldTouched(\"alamat\", true);\r\n    if (dataAddress?.prov) {\r\n      setSelectedParameterProvince(dataAddress?.prov);\r\n      if (dataAddress?.kota) {\r\n        setSelectedParameterCity(dataAddress?.kota);\r\n        if (dataAddress?.kec) {\r\n          setSelectedParameterDistricts(dataAddress?.kec);\r\n          if (dataAddress?.kel) {\r\n            setSelectedParameterWard(dataAddress?.kel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const callApiListProvince = () => {\r\n    listProvince()\r\n      .then((result) => {\r\n        var data = result.data.data;\r\n        data.forEach((item) => {\r\n          item.value = item.id;\r\n          item.label = item.nama;\r\n        });\r\n        setOptionParameterProvince(data);\r\n      })\r\n      .catch((err) => {\r\n        MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n      });\r\n  };\r\n\r\n  const callApiListCity = () => {\r\n    if (selectedParameterProvince.value) {\r\n      if (!status) setSelectedParameterCity({});\r\n      listCity(selectedParameterProvince.value)\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kota;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterCity(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterCity({});\r\n      setOptionParameterCity([]);\r\n    }\r\n  };\r\n\r\n  const callApiListDistricts = () => {\r\n    if (selectedParameterCity.value) {\r\n      if (!status) setSelectedParameterDistricts({});\r\n      listDistricts(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kec;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterDistricts(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterDistricts({});\r\n      setOptionParameterDistricts([]);\r\n    }\r\n  };\r\n\r\n  const callApiListWard = () => {\r\n    if (selectedParameterDistricts.value) {\r\n      if (!status) setSelectedParameterWard({});\r\n      listWard(\r\n        selectedParameterProvince.value,\r\n        selectedParameterCity.value,\r\n        selectedParameterDistricts.value\r\n      )\r\n        .then((result) => {\r\n          var data = result.data.data;\r\n          data.forEach((item) => {\r\n            item.value = item.id_kel;\r\n            item.label = item.nama;\r\n          });\r\n          setOptionParameterWard(data);\r\n        })\r\n        .catch((err) => {\r\n          MODAL.showSnackbar(intl.formatMessage({ id: \"REQ.REQUEST_FAILED\" }));\r\n        });\r\n    } else if (!status) {\r\n      setSelectedParameterWard({});\r\n      setOptionParameterWard([]);\r\n    }\r\n  };\r\n\r\n  useEffect(callApiListProvince, [selectedParameterProvince]);\r\n  useEffect(callApiListCity, [selectedParameterProvince]);\r\n  useEffect(callApiListDistricts, [selectedParameterCity]);\r\n  useEffect(callApiListWard, [selectedParameterDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Alamat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Alamat Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  required\r\n                  {...formik.getFieldProps(\"alamat\")}\r\n                ></textarea>\r\n\r\n                {formik.touched.alamat && formik.errors.alamat && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.alamat}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Provinsi<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterProvince}\r\n                  options={optionParameterProvince}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterProvince(value);\r\n                    formik.setFieldValue(\"prov\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.prov && formik.errors.prov && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.prov}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kota/Kabupaten<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterCity}\r\n                  options={optionParameterCity}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterCity(value);\r\n                    formik.setFieldValue(\"kota\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kota && formik.errors.kota && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kota}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kecamatan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterDistricts}\r\n                  options={optionParameterDistricts}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterDistricts(value);\r\n                    formik.setFieldValue(\"kec\", value);\r\n                  }}\r\n                />\r\n                {formik.touched.kec && formik.errors.kec && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kec}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Kelurahan/Desa<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <Select\r\n                  value={selectedParameterWard}\r\n                  options={optionParameterWard}\r\n                  isDisabled={false}\r\n                  className=\"form-control border-0 p-0 h-100\"\r\n                  classNamePrefix=\"react-select\"\r\n                  onChange={(value) => {\r\n                    setStatus(false);\r\n                    setSelectedParameterWard(value);\r\n                    formik.setFieldValue(\"kel\", value);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"kel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.kel && formik.errors.kel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.kel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object)\r\n              }\r\n            >\r\n              Selanjutnya\r\n              <i className=\"fas fa-chevron-right\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(Address));\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Select from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction EmergencyContact(props) {\r\n  const {\r\n    intl,\r\n    handleProgress,\r\n    dataEmergencyContact = {},\r\n    handleData,\r\n    handleStatus,\r\n    loading,\r\n  } = props;\r\n\r\n  const Schema = Yup.object().shape({\r\n    partner: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_status: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n    partner_tel: Yup.string().required(\r\n      intl.formatMessage({\r\n        id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n      })\r\n    ),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: dataEmergencyContact,\r\n    validationSchema: Schema,\r\n    onSubmit: async (values, { setStatus, setSubmitting }) => {\r\n      handleStatus(true, values);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Object.keys(formik.touched).length > 0 &&\r\n      formik.touched.constructor === Object &&\r\n      formik.isValid\r\n    ) {\r\n      handleData(formik.values, 2, \"COMPLETE\");\r\n      handleProgress(2, \"COMPLETE\");\r\n    } else {\r\n      handleProgress(2, \"ON PROGRESS\");\r\n    }\r\n  }, [formik]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(dataEmergencyContact).length > 0)\r\n      formik.setFieldTouched(\"partner\", true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-5 pb-5\">\r\n        <h1 className=\"text-center\">Kontak Darurat</h1>\r\n      </div>\r\n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nama Lengkap<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Nama Lengkap\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner\")}\r\n                  disabled={loading}\r\n                />\r\n\r\n                {formik.touched.partner && formik.errors.partner && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Hubungan<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Hubungan\"\r\n                  required\r\n                  {...formik.getFieldProps(\"partner_status\")}\r\n                  disabled={loading}\r\n                />\r\n                {formik.touched.partner_status &&\r\n                  formik.errors.partner_status && (\r\n                    <span className=\"text-left text-danger\">\r\n                      {formik.errors.partner_status}\r\n                    </span>\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">\r\n                Nomor Phone<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <NumberFormat\r\n                  id={loading ? \"NumberFormat-text\" : \"NumberFormat-input\"}\r\n                  value={formik.values?.partner_tel}\r\n                  displayType={loading ? \"text\" : \"input\"}\r\n                  className=\"form-control\"\r\n                  format=\"+62 ###-###-###-####\"\r\n                  mask=\"_\"\r\n                  allowEmptyFormatting={true}\r\n                  allowLeadingZeros={true}\r\n                  onValueChange={(e) => {\r\n                    if (e.floatValue === undefined) {\r\n                      formik.setErrors({\r\n                        partner_tel: intl.formatMessage({\r\n                          id: \"LABEL.VALIDATION_REQUIRED_FIELD\",\r\n                        }),\r\n                      });\r\n                    }\r\n                    formik.setFieldValue(\"partner_tel\", e.floatValue);\r\n                  }}\r\n                  onBlur={() => {\r\n                    formik.setFieldTouched(\"partner_tel\", true);\r\n                  }}\r\n                />\r\n                {formik.touched.partner_tel && formik.errors.partner_tel && (\r\n                  <span className=\"text-left text-danger\">\r\n                    {formik.errors.partner_tel}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mx-2\"\r\n              onClick={() => {\r\n                handleStatus(false);\r\n              }}\r\n              disabled={loading}\r\n            >\r\n              <i className=\"fas fa-chevron-left\"></i>\r\n              Sebelumnya\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary mx-2\"\r\n              disabled={\r\n                !formik.isValid ||\r\n                (Object.keys(formik.touched).length === 0 &&\r\n                  formik.touched.constructor === Object) ||\r\n                loading\r\n              }\r\n            >\r\n              {loading ? (\r\n                <FormattedMessage id=\"LABEL.WAITING\" />\r\n              ) : (\r\n                <FormattedMessage id=\"LABEL.SAVE\" />\r\n              )}\r\n              {loading ? (\r\n                <i className=\"fas fa-spinner fa-pulse px-2\"></i>\r\n              ) : (\r\n                <i className=\"fas fa-save ml-2\"></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(EmergencyContact));\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Card, CardBody } from \"../../../_metronic/_partials/controls\";\r\nimport { useSubheader } from \"../../../_metronic/layout\";\r\nimport { RegisDataPatientOffline } from \"./_redux/CrudPatient\";\r\nimport Steppers from \"../../components/steppersCustom/Steppers\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Information from \"./registrationPages/Information\";\r\nimport Address from \"./registrationPages/Address\";\r\nimport EmergencyContact from \"./registrationPages/EmergencyContact\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { MODAL } from \"../../../service/modalSession/ModalService\";\r\nimport { hostBase } from \"../../../redux/setupAxios\";\r\n\r\nfunction RegistrationPatient(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataProgress, setDataProgress] = useState([\r\n    { label: \"Informasi Umum\", status: \"ON PROGRESS\" },\r\n    { label: \"Alamat\", status: \"ON PROGRESS\" },\r\n    { label: \"Kontak Darurat\", status: \"ON PROGRESS\" },\r\n  ]);\r\n  const suhbeader = useSubheader();\r\n  const [navActive, setNavActive] = useState(0);\r\n  const [dataInformation, setDataInformation] = useState({});\r\n  const [statusInformation, setStatusInformation] = useState(false);\r\n  const [dataAddress, setDataAddress] = useState({});\r\n  const [statusAddress, setStatusAddress] = useState(false);\r\n  const [dataEmergencyContact, setEmergencyContact] = useState({});\r\n  const [statusEmergencyContact, setStatusEmergencyContact] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [idPatient, setIdPatient] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    suhbeader.setBreadcrumbs([\r\n      {\r\n        pathname: `/registry/patient/registration`,\r\n        title: intl.formatMessage({ id: \"LABEL.REGISTRATION\" }),\r\n      },\r\n    ]);\r\n    suhbeader.setTitle(intl.formatMessage({ id: \"LABEL.REGISTRATION\" }));\r\n  }, []);\r\n\r\n  const handleSaveRegis = () => {\r\n    setLoading(true);\r\n    var dataSecondAddress = {\r\n      alamat: dataAddress.alamat,\r\n      prov: dataAddress.prov.id,\r\n      kota: dataAddress.kota.id_kota,\r\n      kec: dataAddress.kec.id_kec,\r\n      kel: dataAddress.kel.id_kel,\r\n    };\r\n    var dataReq = Object.assign(\r\n      {},\r\n      dataInformation,\r\n      dataSecondAddress,\r\n      dataEmergencyContact,\r\n      { photo_pasien: null, reg_rule: 2, add_user: \"admin\" }\r\n    );\r\n    dataReq.email = dataReq.email.trim() === \"\" ? null : dataReq.email;\r\n    RegisDataPatientOffline(dataReq)\r\n      .then((result) => {\r\n        setDialog(true);\r\n        setIdPatient(result.data.data.id);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        MODAL.showSnackbar(err.response?.data.messages);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog\r\n        open={dialog}\r\n        // keepMounted\r\n        maxWidth=\"xs\"\r\n        fullWidth={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>\r\n          <FormattedMessage id=\"LABEL.REGISTRATION\" />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <span>Pendaftaran Pasien Berhasil</span>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <a\r\n            className=\"btn btn-danger\"\r\n            href={`${hostBase()}/api/v1/cetakkartu/${idPatient}`}\r\n            target=\"_blankk\"\r\n          >\r\n            <i className=\"fas fa-print px-1\"></i>\r\n            Cetak Kartu\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setDataInformation({});\r\n              setStatusInformation(false);\r\n              setDataAddress({});\r\n              setStatusAddress(false);\r\n              setEmergencyContact({});\r\n              setStatusEmergencyContact(false);\r\n              setNavActive(0);\r\n              var getData = Object.assign([], dataProgress);\r\n              getData[0].status = \"ON PROGRESS\";\r\n              getData[1].status = \"ON PROGRESS\";\r\n              getData[2].status = \"ON PROGRESS\";\r\n              setDataProgress(getData);\r\n              setLoading(false);\r\n              setDialog(false);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-check px-1\"></i>\r\n            OK\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"container\">\r\n        <Container maxWidth=\"lg\">\r\n          <Card>\r\n            <CardBody>\r\n              <Steppers steps={dataProgress} />\r\n\r\n              {navActive === 0 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Information\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataInformation={dataInformation}\r\n                    handleData={(data) => {\r\n                      setDataInformation(data);\r\n                    }}\r\n                    handleStatus={(status) => {\r\n                      setStatusInformation(status);\r\n                      setNavActive(1);\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 1 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <Address\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataAddress={dataAddress}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setDataAddress(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusAddress(status);\r\n                        setDataAddress(data);\r\n                        setNavActive(2);\r\n                      } else {\r\n                        setNavActive(0);\r\n                      }\r\n                    }}\r\n                    statusAddress={statusAddress}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {navActive === 2 && (\r\n                <div className=\"my-5 h-100\">\r\n                  <EmergencyContact\r\n                    handleProgress={(id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        var getData = Object.assign([], dataProgress);\r\n                        getData[id].status = status;\r\n                        setDataProgress(getData);\r\n                      }\r\n                    }}\r\n                    dataEmergencyContact={dataEmergencyContact}\r\n                    handleData={(data, id, status) => {\r\n                      if (dataProgress[id].status !== status) {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      } else {\r\n                        if (status === \"COMPLETE\") setEmergencyContact(data);\r\n                      }\r\n                    }}\r\n                    handleStatus={(status, data) => {\r\n                      if (status) {\r\n                        setStatusEmergencyContact(status);\r\n                        setEmergencyContact(data);\r\n                        handleSaveRegis();\r\n                      } else {\r\n                        setNavActive(1);\r\n                      }\r\n                    }}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(RegistrationPatient));\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport ListPatientPage from \"./ListPatientPage\";\r\nimport PatientPage from \"./PatientPage\";\r\nimport RegistrationPatient from \"./RegistrationPatient\";\r\nimport DetailMedicalRecord from \"./patientPages/DetailMedicalRecord\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction RootPatient(props) {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/registry/patient\" to=\"/registry/dashboard\" />\r\n      <Route\r\n        path=\"/registry/patient/list/:id/:medicalRecordId\"\r\n        component={(props) => <DetailMedicalRecord {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list/:id\"\r\n        component={(props) => <PatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/list\"\r\n        component={(props) => <ListPatientPage {...props} />}\r\n        exact\r\n      />\r\n      <Route\r\n        path=\"/registry/patient/registration\"\r\n        component={(props) => <RegistrationPatient {...props} />}\r\n        exact\r\n      />\r\n      {/* <Route\r\n        path=\"/registry/regis-page/contract/:contract\"\r\n        component={(props) => <ListTermContract {...props} />}\r\n        exact={true}\r\n      />\r\n      <Route\r\n        path=\"/registry/regis-page/contract\"\r\n        component={DashboardListContract}\r\n      />\r\n      <Route path=\"/registry/regis-page/spt/:id\" component={ItemSpt} />\r\n      <Route path=\"/registry/regis-page/spt\" component={DashboardListSpt} />\r\n      <Route\r\n        path=\"/registry/regis-page/mismatch\"\r\n        component={DashboardListMismatch}\r\n      />\r\n      <Route path=\"/registry/regis-page/bkb\" component={DashboardListBkb} />\r\n      <Route path=\"/registry/regis-page/dashboard\" component={Dashboard} />\r\n      <Route\r\n        path=\"/registry/regis-page/invoice_document\"\r\n        component={DashboardListInvoice}\r\n      /> */}\r\n    </Switch>\r\n  );\r\n}\r\nexport default injectIntl(connect(null, null)(RootPatient));\r\n"],"sourceRoot":""}